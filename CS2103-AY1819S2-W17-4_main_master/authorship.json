[
  {
    "path": ".github/ISSUE_TEMPLATE/bug_report.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "name: Bug report"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "about: Create a report to help us improve"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "title: \u0027\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "labels: \u0027\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "assignees: \u0027\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Describe the bug**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "A clear and concise description of what the bug is."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**To Reproduce**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Steps to reproduce the behavior:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "1. Go to \u0027...\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "2. Click on \u0027....\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "3. Scroll down to \u0027....\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "4. See error"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Expected behavior**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "A clear and concise description of what you expected to happen."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Screenshots**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "If applicable, add screenshots to help explain your problem."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Desktop (please complete the following information):**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " - OS: [e.g. iOS]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " - Browser [e.g. chrome, safari]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " - Version [e.g. 22]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Smartphone (please complete the following information):**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " - Device: [e.g. iPhone6]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " - OS: [e.g. iOS8.1]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " - Browser [e.g. stock browser, safari]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " - Version [e.g. 22]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Additional context**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Add any other context about the problem here."
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 38
    }
  },
  {
    "path": ".github/ISSUE_TEMPLATE/custom.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "name: Custom issue template"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "about: Describe this issue template\u0027s purpose here."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "title: \u0027\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "labels: \u0027\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "assignees: \u0027\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 10
    }
  },
  {
    "path": ".github/ISSUE_TEMPLATE/feature_request.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "name: Feature request"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "about: Suggest an idea for this project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "title: \u0027\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "labels: \u0027\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "assignees: \u0027\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Is your feature request related to a problem? Please describe.**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Describe the solution you\u0027d like**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "A clear and concise description of what you want to happen."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Describe alternatives you\u0027ve considered**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "A clear and concise description of any alternative solutions or features you\u0027ve considered."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "**Additional context**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Add any other context or screenshots about the feature request here."
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 20
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "ePiggy - It was developed by the https://github.com/CS2103-AY1819S2-W17-4[A+ for 2103T] team."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d\u003d\u003d Phan Duc Nhat Minh"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "image::pdnm.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "{empty}[https://github.com/pdnm[github]]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Role: Team Leader, Developer"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Teh Wen Yi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "image::tehwenyi.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "{empty}[https://github.com/tehwenyi[github]]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Role: Developer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Wu Yunjun"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::yunjun199321.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "{empty}[https://github.com/yunjun199321[github]]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Role: Developer"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Kevin"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "image::kev-inc.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "{empty}[https://github.com/kev-inc[github]]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Role: Developer"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Rahul Baid"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "image::rahulb99.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "{empty}[https://github.com/rahulb99[github]]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Role: Developer"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Responsibilities: Data"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 12,
      "tehwenyi": 4,
      "-": 36
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/CS2103-AY1819S2-W17-4/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* *Email us* : You can also reach us at \u0027kevin.chan@u.nus.edu\u0027, \u0027minh@u.nus.edu\u0027, \u0027rahul.baid@u.nus.edu\u0027, \u0027wenyiteh@u.nus.edu\u0027 or \u0027e0191521@u.nus.edu\u0027"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 2,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d ePiggy - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/se-edu/addressbook-level4/tree/master"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "By: `A+ for 2103T Team`      Since: `Feb 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Prerequisites"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ". *JDK `9`* or later"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "JDK `10` on Windows will fail to run tests in \u003c\u003cUsingGradle#Running-Tests, headless mode\u003e\u003e due to a https://github.com/javafxports/openjdk-jfx/issues/66[JavaFX bug]."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Windows developers are highly recommended to use JDK `9`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ". *IntelliJ* IDE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "IntelliJ by default has Gradle and JavaFx plugins installed. +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Setting up the project in your computer"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork this repo, and clone the fork to your computer"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ". Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `New...` and find the directory of the JDK"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Import Project`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ". Locate the `build.gradle` file and select it. Click `OK`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Open as Project`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK` to accept the default settings"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message. +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "This will generate all resources required by the application and tests."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ". Open link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow.java`] and check for any code errors"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".. Due to an ongoing https://youtrack.jetbrains.com/issue/IDEA-189060[issue] with some of the newer versions of IntelliJ, code errors may be detected even if the project can be built and run successfully"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".. To resolve this, place your cursor over any of the code section highlighted in red. Press kbd:[ALT + ENTER], and select `Add \u0027--add-modules\u003d...\u0027 to module compiler options` for each error"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ". Repeat this for the test folder as well (e.g. check link:{repoURL}/src/test/java/seedu/address/ui/HelpWindowTest.java[`HelpWindowTest.java`] for code errors, and if so, resolve it the same way)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Verifying the setup"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ". Run the `seedu.address.MainApp` and try a few commands"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configurations to do before writing code"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Configuring the coding style"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ". Select `Editor` \u003e `Code Style` \u003e `Java`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ". Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Updating documentation to match your fork"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "After forking the repo, the documentation will still have the SE-EDU branding and refer to the `se-edu/addressbook-level4` repo."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "If you plan to develop this fork as a separate product (i.e. instead of contributing to `se-edu/addressbook-level4`), you should do the following:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ". Configure the \u003c\u003cDocs-SiteWideDocSettings, site-wide documentation settings\u003e\u003e in link:{repoURL}/build.gradle[`build.gradle`], such as the `site-name`, to suit your own project."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ". Replace the URL in the attribute `repoURL` in link:{repoURL}/docs/DeveloperGuide.adoc[`DeveloperGuide.adoc`] and link:{repoURL}/docs/UserGuide.adoc[`UserGuide.adoc`] with the URL of your fork."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Setting up CI"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Getting started with coding"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "When you are ready to start coding,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "2. Take a look at \u003c\u003cGetStartedProgramming\u003e\u003e."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "image::Architecture.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has only one class called link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "image::SDforDeletePerson.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `BrowserPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeletePersonSdForLogic.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "image:ModelClassBetterOopDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Undo/Redo feature"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoStartingStateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand1StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand2StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoExecuteUndoStateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoSequenceDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand3StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand4StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoActivityDiagram.png[width\u003d\"650\"]"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "We use asciidoc for writing documentation."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Editing Documentation"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Publishing Documentation"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Converting Documentation to PDF format"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ".Saving documentation as PDF files in Chrome"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "image::chrome_save_as_pdf.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-SiteWideDocSettings]]"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Site-wide Documentation Settings"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "The link:{repoURL}/build.gradle[`build.gradle`] file specifies some project-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how all documentation files within this project are rendered."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in the `build.gradle` file will use their *default value*, if any."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ".List of site-wide attributes"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-name`"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "|The name of the website."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "If set, the name will be displayed near the top of the page."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-githuburl`"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "|URL to the site\u0027s repository on https://github.com[GitHub]."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "Setting this will add a \"View on GitHub\" link in the navigation bar."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-seedu`"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "|Define this attribute if the project is an official SE-EDU project."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "This will render the SE-EDU navigation bar at the top of the page, and add some SE-EDU-specific navigation items."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-PerFileDocSettings]]"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Per-file Documentation Settings"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "Each `.adoc` file may also specify some file-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how the file is rendered."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "Asciidoctor\u0027s https://asciidoctor.org/docs/user-manual/#builtin-attributes[built-in attributes] may be specified and used as well."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in `.adoc` files will use their *default value*, if any."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ".List of per-file attributes, excluding Asciidoctor\u0027s built-in attributes"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-section`"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "|Site section that the document belongs to."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "This will cause the associated item in the navigation bar to be highlighted."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "One of: `UserGuide`, `DeveloperGuide`, ``LearningOutcomes``{asterisk}, `AboutUs`, `ContactUs`"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "_{asterisk} Official SE-EDU projects only_"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "|`no-site-header`"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "|Set this attribute to remove the site navigation bar."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Site Template"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/stylesheets[`docs/stylesheets`] are the https://developer.mozilla.org/en-US/docs/Web/CSS[CSS stylesheets] of the site."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "You can modify them to change some properties of the site\u0027s design."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/templates[`docs/templates`] controls the rendering of `.adoc` files into HTML5."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "These template files are written in a mixture of https://www.ruby-lang.org[Ruby] and http://slim-lang.com[Slim]."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "Modifying the template files in link:{repoURL}/docs/templates[`docs/templates`] requires some knowledge and experience with Ruby and Asciidoctor\u0027s API."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "You should only modify them if you need greater control over the site\u0027s layout than what stylesheets can provide."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "The SE-EDU team does not provide support for modified template files."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "[[Testing]]"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Running Tests"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "There are three ways to run tests."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "The most reliable way to run tests is the 3rd one. The first two methods might fail some GUI tests due to platform/resolution-specific idiosyncrasies."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 1: Using IntelliJ JUnit test runner*"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 2: Using Gradle*"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "* Open a console and run the command `gradlew clean allTests` (Mac/Linux: `./gradlew clean allTests`)"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 3: Using Gradle (headless)*"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "Thanks to the https://github.com/TestFX/TestFX[TestFX] library we use, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the Computer while the tests are running."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "To run tests in headless mode, open a console and run the command `gradlew clean headless allTests` (Mac/Linux: `./gradlew clean headless allTests`)"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Types of tests"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "We have two types of tests:"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ".  *GUI Tests* - These are tests involving the GUI. They include,"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ".. _System Tests_ that test the entire App by simulating user actions on the GUI. These are in the `systemtests` package."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ".. _Unit tests_ that test the individual components. These are in `seedu.address.ui` package."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ".  *Non-GUI Tests* - These are tests not involving the GUI. They include,"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "..  _Unit tests_ targeting the lowest level methods/classes. +"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.commons.StringUtilTest`"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "..  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.storage.StorageManagerTest`"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "..  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.logic.LogicManagerTest`"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Troubleshooting Testing"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: `HelpWindowTest` fails with a `NullPointerException`.**"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: One of its dependencies, `HelpWindow.html` in `src/main/resources/docs` is missing."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Execute Gradle task `processResources`."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Build Automation"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Continuous Integration"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Coverage Reporting"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Documentation Previews"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Making a Release"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`]."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ".  Tag the repo with the version number. e.g. `v0.1`"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Managing Dependencies"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "A project often depends on third-party libraries. For example, Address Book depends on the https://github.com/FasterXML/jackson[Jackson library] for JSON parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives:"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "[loweralpha]"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ". Include those libraries in the repo (this bloats the repo size)"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ". Require developers to download those libraries manually (this creates extra work for developers)"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "[[GetStartedProgramming]]"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Suggested Programming Tasks to Get Started"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "Suggested path for new programmers:"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "1. First, add small local-impact (i.e. the impact of the change does not go beyond the component) enhancements to one component at a time. Some suggestions are given in \u003c\u003cGetStartedProgramming-EachComponent\u003e\u003e."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "2. Next, add a feature that touches multiple components to learn how to implement an end-to-end feature across all components. \u003c\u003cGetStartedProgramming-RemarkCommand\u003e\u003e explains how to go about adding such a feature."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "[[GetStartedProgramming-EachComponent]]"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Improving each component"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "Each individual exercise in this section is component-based (i.e. you would not need to modify the other components to get it to work)."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Logic` component"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `logic`. During dog-fooding, your team realize that it is troublesome for the user to type the whole command in order to execute a command. Your team devise some strategies to help cut down the amount of typing necessary, and one of the suggestions was to implement aliases for the command words. Your job is to implement such aliases."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Logic\u003e\u003e before attempting to modify the `Logic` component."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a shorthand equivalent alias for each of the individual commands. For example, besides typing `clear`, the user can also type `c` to remove all persons in the list."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "** Just like we store each individual command word constant `COMMAND_WORD` inside `*Command.java` (e.g.  link:{repoURL}/src/main/java/seedu/address/logic/commands/FindCommand.java[`FindCommand#COMMAND_WORD`], link:{repoURL}/src/main/java/seedu/address/logic/commands/DeleteCommand.java[`DeleteCommand#COMMAND_WORD`]), you need a new constant for aliases as well (e.g. `FindCommand#COMMAND_ALIAS`)."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] is responsible for analyzing command words."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify the switch statement in link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser#parseCommand(String)`] such that both the proper command word and alias can be used to execute the same intended command."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "** Add new tests for each of the aliases that you have added."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "** Update the user guide to document the new aliases."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/785[PR] for the full solution."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Model` component"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `model`. One day, the `logic`-in-charge approaches you for help. He wants to implement a command such that the user is able to remove a particular tag from everyone in the address book, but the model API does not support such a functionality at the moment. Your job is to implement an API method, so that your teammate can use your API to implement his command."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Model\u003e\u003e before attempting to modify the `Model` component."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a `removeTag(Tag)` method. The specified tag will be removed from everyone in the address book."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "** The link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model`] and the link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] API need to be updated."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "** Think about how you can use SLAP to design the method. Where should we place the main logic of deleting tags?"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "**  Find out which of the existing API methods in  link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] classes can be used to implement the tag removal logic. link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] allows you to update a person, and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] allows you to update the tags."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "** Implement a `removeTag(Tag)` method in link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`]. Loop through each person, and remove the `tag` from each person."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "** Add a new API method `deleteTag(Tag)` in link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`]. Your link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`] should call `AddressBook#removeTag(Tag)`."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "** Add new tests for each of the new public methods that you have added."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/790[PR] for the full solution."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Ui` component"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `ui`. During a beta testing session, your team is observing how the users use your address book application. You realize that one of the users occasionally tries to delete non-existent tags from a contact, because the tags all look the same visually, and the user got confused. Another user made a typing mistake in his command, but did not realize he had done so because the error message wasn\u0027t prominent enough. A third user keeps scrolling down the list, because he keeps forgetting the index of the last person in the list. Your job is to implement improvements to the UI to solve all these problems."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Ui\u003e\u003e before attempting to modify the `UI` component."
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ". Use different colors for different tags inside person cards. For example, `friends` tags can be all in brown, and `colleagues` tags can be all in yellow."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-tag-before.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-tag-after.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "** The tag labels are created inside link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[the `PersonCard` constructor] (`new Label(tag.tagName)`). https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Label.html[JavaFX\u0027s `Label` class] allows you to modify the style of each Label, such as changing its color."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "** Use the .css attribute `-fx-background-color` to add a color."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "** You may wish to modify link:{repoURL}/src/main/resources/view/DarkTheme.css[`DarkTheme.css`] to include some pre-defined colors using css, especially if you have experience with web-based css."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "** You can modify the existing test methods for `PersonCard` \u0027s to include testing the tag\u0027s color as well."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/798[PR] for the full solution."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "*** The PR uses the hash code of the tag names to generate a color. This is deliberately designed to ensure consistent colors each time the application runs. You may wish to expand on this design to include additional features, such as allowing users to set their own tag colors, and directly saving the colors to storage, so that tags retain their colors even if the hash code algorithm changes."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] such that link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] can show a different style on error (currently it shows the same regardless of errors)."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-result-before.png[width\u003d\"200\"]"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-result-after.png[width\u003d\"200\"]"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] is raised by link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] which also knows whether the result is a success or failure, and is caught by link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] which is where we want to change the style to."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "** Refer to link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] for an example on how to display an error."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] \u0027s constructor so that users of the event can indicate whether an error has occurred."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay#handleNewResultAvailableEvent(NewResultAvailableEvent)`] to react to this event appropriately."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "** You can write two different kinds of tests to ensure that the functionality works:"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "*** The unit tests for `ResultDisplay` can be modified to include verification of the color."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "*** The system tests link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest#assertCommandBoxShowsDefaultStyle() and AddressBookSystemTest#assertCommandBoxShowsErrorStyle()`] to include verification for `ResultDisplay` as well."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/799[PR] for the full solution."
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "*** Do read the commits one at a time if you feel overwhelmed."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify the link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to show the total number of people in the address book."
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-status-before.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-status-after.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/resources/view/StatusBarFooter.fxml[`StatusBarFooter.fxml`] will need a new `StatusBar`. Be sure to set the `GridPane.columnIndex` properly for each `StatusBar` to avoid misalignment!"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] needs to initialize the status bar on application start, and to update it accordingly whenever the address book is updated."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify the constructor of link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to take in the number of persons when the application just started."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "** Use link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter#handleAddressBookChangedEvent(AddressBookChangedEvent)`] to update the number of persons whenever there are new changes to the addressbook."
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "** For tests, modify link:{repoURL}/src/test/java/guitests/guihandles/StatusBarFooterHandle.java[`StatusBarFooterHandle`] by adding a state-saving functionality for the total number of people status, just like what we did for save location and sync status."
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "** For system tests, modify link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest`] to also verify the new total number of persons status bar."
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/803[PR] for the full solution."
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Storage` component"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `storage`. For your next project milestone, your team plans to implement a new feature of saving the address book to the cloud. However, the current implementation of the application constantly saves the address book after the execution of each command, which is not ideal if the user is working on limited internet connection. Your team decided that the application should instead save the changes to a temporary local backup file first, and only upload to the cloud after the user closes the application. Your job is to implement a backup API for the address book storage."
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Storage\u003e\u003e before attempting to modify the `Storage` component."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a new method `backupAddressBook(ReadOnlyAddressBook)`, so that the address book can be saved in a fixed temporary location."
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "* Hint"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "** Add the API method in link:{repoURL}/src/main/java/seedu/address/storage/AddressBookStorage.java[`AddressBookStorage`] interface."
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "** Implement the logic in link:{repoURL}/src/main/java/seedu/address/storage/StorageManager.java[`StorageManager`] and link:{repoURL}/src/main/java/seedu/address/storage/JsonAddressBookStorage.java[`JsonAddressBookStorage`] class."
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/594[PR] for the full solution."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "[[GetStartedProgramming-RemarkCommand]]"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Creating a new command: `remark`"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "By creating this command, you will get a chance to learn how to implement a feature end-to-end, touching all major components of the app."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are a software maintainer for `addressbook`, as the former developer team has moved on to new projects. The current users of your application have a list of new feature requests that they hope the software will eventually have. The most popular request is to allow adding additional comments/notes about a particular contact, by providing a flexible `remark` field for each contact, rather than relying on tags alone. After designing the specification for the `remark` command, you are convinced that this feature is worth implementing. Your job is to implement the `remark` command."
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Description"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the remark for a person specified in the `INDEX`. +"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `remark INDEX r/[REMARK]`"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "* `remark 1 r/Likes to drink coffee.` +"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the remark for the first person to `Likes to drink coffee.`"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "* `remark 1 r/` +"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "Removes the remark for the first person."
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Step-by-step Instructions"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 1] Logic: Teach the app to accept \u0027remark\u0027 which does nothing"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s start by teaching the application how to parse a `remark` command. We will add the logic of `remark` later."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a `RemarkCommand` that extends link:{repoURL}/src/main/java/seedu/address/logic/commands/Command.java[`Command`]. Upon execution, it should just throw an `Exception`."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to accept a `RemarkCommand`."
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `RemarkCommandTest` that tests that `execute()` throws an Exception."
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ". Add new test method to link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`], which tests that typing \"remark\" returns an instance of `RemarkCommand`."
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 2] Logic: Teach the app to accept \u0027remark\u0027 arguments"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s teach the application to parse arguments that our `remark` command will accept. E.g. `1 r/Likes to drink coffee.`"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify `RemarkCommand` to take in an `Index` and `String` and print those two parameters as the error message."
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `RemarkCommandParser` that knows how to parse two arguments, one index and one with prefix \u0027r/\u0027."
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to use the newly implemented `RemarkCommandParser`."
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify `RemarkCommandTest` to test the `RemarkCommand#equals()` method."
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `RemarkCommandParserTest` that tests different boundary values"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "for `RemarkCommandParser`."
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`] to test that the correct command is generated according to the user input."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 3] Ui: Add a placeholder for remark in `PersonCard`"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s add a placeholder on all our link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] s to display a remark for each person later."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a `Label` with any random text inside link:{repoURL}/src/main/resources/view/PersonListCard.fxml[`PersonListCard.fxml`]."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ". Add FXML annotation in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] to tie the variable to the actual label."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/test/java/guitests/guihandles/PersonCardHandle.java[`PersonCardHandle`] so that future tests can read the contents of the remark label."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 4] Model: Add `Remark` class"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "We have to properly encapsulate the remark in our link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] class. Instead of just using a `String`, let\u0027s follow the conventional class structure that the codebase already uses by adding a `Remark` class."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `Remark` to model component (you can copy from link:{repoURL}/src/main/java/seedu/address/model/person/Address.java[`Address`], remove the regex and change the names accordingly)."
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify `RemarkCommand` to now take in a `Remark` instead of a `String`."
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": ". Add test for `Remark`, to test the `Remark#equals()` method."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 5] Model: Modify `Person` to support a `Remark` field"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "Now we have the `Remark` class, we need to actually use it inside link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `getRemark()` in link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ". You may assume that the user will not be able to use the `add` and `edit` commands to modify the remarks field (i.e. the person will be created without a remark)."
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/model/util/SampleDataUtil.java/[`SampleDataUtil`] to add remarks for the sample data (delete your `data/addressbook.json` so that the application will load the sample data when you launch it.)"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 6] Storage: Add `Remark` field to `JsonAdaptedPerson` class"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "We now have `Remark` s for `Person` s, but they will be gone when we exit the application. Let\u0027s modify link:{repoURL}/src/main/java/seedu/address/storage/JsonAdaptedPerson.java[`JsonAdaptedPerson`] to include a `Remark` field so that it will be saved."
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a new JSON field for `Remark`."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": ". Fix `invalidAndValidPersonAddressBook.json`, `typicalPersonsAddressBook.json`, `validAddressBook.json` etc., such that the JSON tests will not fail due to a missing `remark` field."
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 6b] Test: Add withRemark() for `PersonBuilder`"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "Since `Person` can now have a `Remark`, we should add a helper method to link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`], so that users are able to create remarks when building a link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a new method `withRemark()` for link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`]. This method will create a new `Remark` for the person that it is currently building."
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": ". Try and use the method on any sample `Person` in link:{repoURL}/src/test/java/seedu/address/testutil/TypicalPersons.java[`TypicalPersons`]."
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 7] Ui: Connect `Remark` field to `PersonCard`"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "Our remark label in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] is still a placeholder. Let\u0027s bring it to life by binding it with the actual `remark` field."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`]\u0027s constructor to bind the `Remark` field to the `Person` \u0027s remark."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/test/java/seedu/address/ui/testutil/GuiTestAssert.java[`GuiTestAssert#assertCardDisplaysPerson(...)`] so that it will compare the now-functioning remark label."
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 8] Logic: Implement `RemarkCommand#execute()` logic"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "We now have everything set up... but we still can\u0027t modify the remarks. Let\u0027s finish it up by adding in actual logic for our `remark` command."
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": ". Replace the logic in `RemarkCommand#execute()` (that currently just throws an `Exception`), with the actual logic to modify the remarks of a person."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ". Update `RemarkCommandTest` to test that the `execute()` logic works."
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Full Solution"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "See this https://github.com/se-edu/addressbook-level4/pull/599[PR] for the step-by-step solution."
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "* has a need to manage a significant number of contacts"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "*Value proposition*: manage contacts faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "|`* * *` |user |add a new expense record |Track my usage of the expense"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "|`* * *` |user |delete my expense records |remove the wrong expenses records"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|`* * *` |user |see my total expenditure till date or by time period |know the total amount I have spent"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "|`* *` |user |see the report of my spending |know how much I spend"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|`* *` |user |see the date of my spending |know when I spend a certain item"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|`* *` |user |see the percentage of the amount I spent out of my set budget |track my expenses"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|`* *` |user |receive reminders when I am approaching my budget |cut down on my expenses"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|`* *` |user |set a monthly budget |know whether I\u0027m keeping to the budget"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|`* *` |user |see the statistics of my spendings till date |see my spending habits"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "|`* *` |new user |create my personal account |make my personal expense records confidential"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "|`* *` |user |login to my personal account |manage my personal expense records"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "|`* *` |user |get notification when budget finishing |manage the rest of the budget well"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|`*` | (fill in here) |(fill in here)"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "(For all use cases below, the *System* is the `ePiggy` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d\u003d\u003d Use case: Edit"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "1.  User requests to list expenses"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "2.  ePiggy shows a list of expenses"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "3.  User requests to edit a specific expense in the list"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "4.  ePiggy edits the expense"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "** 3a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: View expense entry"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to list expenses."
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "2.  ePiggy shows list of expenses."
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "3.  User requests to view a specific expense in the list."
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "4.  ePiggy displays the details of the specified expense."
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: View report"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to view expenditure report of a day/month/year."
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "2.  ePiggy shows the expenditure report for that day/month/year."
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. The given date is invalid."
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d\u003d\u003d Use case: Set budget"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "1.  User requests to set budget"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "2.  ePiggy sets the input number as the budget"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* 1a. The given amount is invalid."
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "** 3a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* 1b. User already has a budget set."
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "** 1b1. ePiggy asks if user would like to overwrite old budget."
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*** 1b1a. ePiggy sets a new budget based on user\u0027s new input."
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*** 1b1b. ePiggy keeps the old budget."
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d\u003d\u003d Use case: Recommend"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "1.  User requests ePiggy to recommend"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "2.  ePiggy recommends future spendings"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* 1a. The period of expenses is less than a week."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "** 1a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d\u003d\u003d Use case: Forecast"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "1.  User requests ePiggy to forecast future spendings"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "2.  ePiggy gives a forecast of future spendings"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* 1a. The period of expenses is less than a week."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "** 1a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "+"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Use case: Create new account"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "1. User requests create a new account"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "2. ePiggy requests username and password"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "3. ePiggy creates new user account"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* 1a. Username exists on the database."
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "** 1a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Use case: Add new expense record"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "1. User requests the create a new record."
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "2. User enters a add command with the name of item, price, categories and date"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "3. ePiggy saves the record."
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* 2a. The name and date are empty."
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "** 2a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Search expense records"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "1. User requests to search for an expense record."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "2. ePiggy requests user to enter search command."
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "3. User enters search command with specific parameters."
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "4. ePiggy searches and displays the record(s)."
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. Parameter field is empty."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. ePiggy lists all the expense records."
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Sort expense records"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "1. User requests to sort expense records."
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "2. ePiggy requests user to enter sort command."
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "3. User enters sort command with specific parameters."
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "4. ePiggy sorts and displays the record(s)."
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. Parameter field is empty."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. ePiggy lists all the expense records sorted by date added."
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Use case: Delete expense records"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "1. User requests to delete expense record."
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "2. ePiggy requests user to enter delete command."
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "3. User enters delete command with index of the expense record."
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "4. ePiggy perform delete action"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* 1a. The period of expenses is less than a week."
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "** 1a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Use case: Login"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "1. ePiggy requests username and password"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "2. User enters username and password"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "3. User login success."
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* 1a. Username and password do not match."
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "** 1a1. ePiggy shows an error message."
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "** 1a2. ePiggy recovers from 1."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Help"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "1. User requests for help."
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "2. ePiggy displays a list of all the commands - brief description and syntax."
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003d\u003d\u003d Use case: Notify when budget finishing"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "1. User budget is finishing soon"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "2. ePiggy shows warning message"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "+"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `9` or higher installed."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "[[private-contact-detail]] Private contact detail::"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "A contact detail that is not meant to be shared with others"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "*Product Name*"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ..."
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a person"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": ". Deleting a person while all persons are listed"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": ".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 1` +"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 0` +"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 105,
      "tehwenyi": 107,
      "-": 1026
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d ePiggy - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ":toclevels: 4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/se-edu/addressbook-level4"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "By: `Team W17-4`      Since: `Feb 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "ePiggy is a simplified expense tracker catered towards students. You can use it to record your allowance, your expenses, track your savings, and even plan out what you should eat for recess. It has student-oriented features that makes managing money easier for students."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "With ePiggy, we hope to inculcate the habit of managing money from young."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Interested? Click on the Quick Start to get started!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d About"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "This user guide provides a comprehensive view on how to set up ePiggy, the features available, and frequently asked questions."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Follow these steps to start using ePiggy::"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "1. Install Java (version 9 or later) on your computer by going here and downloading the Java SE Runtime Environment for your operating system. +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "2. Download the latest *`ePiggy.jar`* file from here +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "3. Copy the file to the folder which you want to use as the home folder for your Expense Tracker. +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "4. Double-click the *`ePiggy.jar`* file to start the app. +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "5. Type in your username in the text box *`Your Username`*. +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* E.g *`username123`* +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "6. Type in your password in the text box *`Your Password`*. +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* E.g. *`pw123`* +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "7. Press the *`Register`* button and you can now use all the features of ePiggy."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "*Some sample commands you can try:*"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `addExpense n/Chicken Rice $/4 t/dinner` +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "This command adds a new expense of $4 for Chicken Rice today."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `addAllowance $/20` +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "This command adds a new allowance of $20."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `setBudget $/500 t/28 d/01/02/2019` +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "This command sets a budget of $500 starting on 1st February, lasting 28 days."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "The GUI will appear like this upon launch:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "image::Ui.png[width\u003d\"760\"]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "_Figure 1. The user interface upon launch of application_"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "*Command Format*"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be entered by the user. +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "** E.g. For `addExpense n/EXPENSE_NAME`, `EXPENSE_NAME` is a parameter which can be used as `addExpense n/Chicken Rice`."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* Items in square brackets are optional. +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "** E.g `n/EXPENSE_NAME [t/TAG]` can be used as `n/Chicken Rice t/School` or as `n/Chicken Rice`."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* Items with `…`​ after them can be used multiple times including zero times. +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "** E.g. `[t/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `t/school` (1 time), `t/hawker t/school` (2 times) etc."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* Parameters can be in any order. +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "** E.g. If the command specifies `n/EXPENSE_NAME $/COST`, `$/COST n/EXPENSE_NAME` is also acceptable."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d Basic Features"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Viewing help : `help`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Lists all the user commands with their syntax and descriptions. +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Adding an expense : `addExpense`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Adds a new expense record to the Expense Tracker. +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: `addExpense n/EXPENSE_NAME $/COST [d/DATE] [a/NAME_OF_THE_SHOP] [t/TAG]…`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `addExpense n/Chicken rice set $/5 t/Food d/Hainan Kitchen d/21/02/2019` +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Adds an expense for a $5 chicken rice set, tagged as Food with the date as 21/02/2019 from the shop Hainan Kitchen."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `add n/Chicken rice set $/5 t/Food` +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Adds an expense for a $5 chicken rice set, tagged as Food dated as the current date, by default."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Adding an allowance: `addAllowance`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new allowance record to the Expense Tracker. +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `addAllowance $/AMOUNT`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "* `addAllowance $/10` +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Adds an allowance entry of $10 to the expense tracker."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Adding an autocomplete item : `addItem`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Adds an autocomplete item with a fixed cost, category, and tags, for future reference. +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Autocomplete items will appear when adding a new expense - a list of items will popup after typing *`add n/`* +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: `addItem n/EXPENSE_NAME $/COST [t/TAG]`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `addItem n/Chicken-rice $/5 c/Food` +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Adds an autocomplete item Chicken Rice that is $5 tagged as Food."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Listing all expenses : `list`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Lists the expense records from newest to oldest. +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Editing an expense : `edit`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Edits an existing expense in ePiggy at a specific `*INDEX`* . +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "The *`INDEX`* refers to the number in the displayed Expenses List which is next to the name of the expense. Existing values of"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "the expense will be changed according to the value of the parameters. +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: `edit INDEX [n/EXPENSE_NAME] [$/COST] [d/DATE] [t/TAG]…`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `edit 1 n/Pen $1 t/Supplies` +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Edits the name, cost and tag of the first expense in the Expense List to ‘Pen’, ‘$1’ and ‘Supplies’ respectively."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `edit 2 t/Food` +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Edits the tag of the second expense in the Expense List to ‘Food’."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting an expense : `delete`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Deletes the expense at the specified INDEX. The INDEX refers to the number in the displayed Expenses List which is next to"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "the name of the expense. +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Deletes the first expense in the Expense List from Expense Tracker."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Viewing an expense : `view`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "View the details of the selected *`INDEX`*. +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Format: `view INDEX`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `view 3` +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "View will display more information on item 3 (eg. tags, entry description, etc.)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Viewing total savings : `viewSavings`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Show details of the net amount of money recorded in ePiggy. +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: `viewSavings`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d Filtering and Sorting Data"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Searching for an expense : `search`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "You can search for any expense in the list by specifying either its name, tag, date, range of dates, or range of amount. +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: *`search [n/NAME] [t/TAG] [d/DATE_RANGE] [$/AMOUNT RANGE]`* +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `search n/MCDONALDS` +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Displays all entries with the name “MCDONALDS”."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `search t/FOOD` +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Displays all entries with the tag specified (in this case, it’s food)."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `search d/02/01/2019:05/12/2020` +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Displays all entries listed in the range 2nd Jan 2019 to 5th Dec 2020."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `search $/250 500` +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Displays all entries listed with the price range of $250 to $500."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Additional Information:* +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Searches and displays the expense along with its information, according to the user-specified command. +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "If the entry is not found, it displays an appropriate error message."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Sorting the expenses : `sort`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "The user can sort the expenses in the list by name, date added, amount in ascending or descending order. +"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `sort -[n/d/$] -[A/D]`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `sort -n` +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Sorts all entries by name (in ascending order)."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `sort -d -A` +"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Sorts all entries by date in ascending order."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "* `sort -$ -D` +"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Sorts all entries by amount in descending order."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Additional Information:* +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Sorts the entries according to the user-specified command. +"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "A and D are optional arguments which determine whether you want the expenses sorted in ascending or"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "descending, respectively. Unless otherwise explicitly mentioned, then it will be assumed to be ascending order."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d Budgeting"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Setting the spending budget : `setBudget`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Sets a total spending budget for a certain time period. The time period will be in terms of days, and 1 day is the minimum"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "a person can set a budget for. +"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "This command can only be used if there are no budgets set yet. The setBudget command is case sensitive. +"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Format: `setBudget $/AMOUNT t/TIME_PERIOD_IN_DAYS d/START_DATE`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `setBudget $/500 t/7 d/03/02/2019` +"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Sets a total budget of $500 for each week starting from 03/02/2019."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `setBudget $/10000 t/15 d/01/01/2000` +"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Sets a total budget of $10000 every 15 days starting from 01/01/2000."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "****"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "*Additional Information:* +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*`AMOUNT`* must be a positive number. +"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*`TIME_PERIOD_IN_DAYS`* must be a positive whole number."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "****"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Display status of budget:* +"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "The Expense Tracker will show the status of the current budget whenever a new expense is added. It will display the following information: +"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "- Status of Budget (Old/Current) +"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "- Budgeted Amount($) +"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "- Start Date of Budget (date) +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "- End Date of Budget (date) +"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "- Period of Budget (days) +"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "- Remaining Amount for Budget ($) +"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "- Remaining Days before Budget resets (Days) +"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "image::BudgetUi.png[width\u003d\"760\"]"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "_Figure 3: Shows budget status_"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Editing the spending budget : `editBudget`"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Edits the current budget. Budgets are not allowed to overlap, and at least one budget must already be present. +"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "The editBudget command is case sensitive. +"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Format: `editBudget [$/AMOUNT] [t/TIME_PERIOD_IN_DAYS]`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `editBudget $/1000 t/7 d/01/01/2000` +"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Edits the current budget to $1000 for each week starting from 01/01/2000."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `editBudget $/200 t/15 d/31/12/2018` +"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Edits the current budget to $200 for every 15 days starting from 31/12/2018."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "****"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Additional Information:* +"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*`AMOUNT`* must be a positive number. +"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*`TIME_PERIOD_IN_DAYS`* must be a positive whole number."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "****"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Recommend future spendings : `recommend`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "You have to set a budget before you can use this command. +"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "This command recommends a daily limit you need to"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "have in order to satisfy your budget and the income you need to have if you intend to maintain your current spending"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "habits. +"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Format: `recommend`"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* `recommend` +"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Recommends a daily limit and the income you need to maintain current spending habits"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "while staying below budget."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "****"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Additional Information:* +"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "A budget should be set. +"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "The expenses list should have at least one day’s worth of expenses."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "****"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d Expense Report"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Generate report : `report`"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "Generates a report of the given date, month, or year. The report consists of total inflow, total outflow, and proportion of income"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "spent on different categories. +"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Format: `report [t/DAILY] [t/MONTHLY] [t/YEARLY] [t/PERCENTAGE]`"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* `report` +"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "View the spending records for this year."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* `report t/daily` +"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "View the spending records for this month."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* `report t/monthly` +"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "View the spending records for current month."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* `report t/yearly` +"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "View the spending records for past few years."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "* `report t/percentage` +"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "View the spending records percentage of this year."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "****"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*Following options will be implemented in v2.0:* +"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "MM and DD will be optional arguments. +"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "If only YYYY is included, a yearly report will be generated. +"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "If YYYY and MM are provided, then a monthly report will be generated. +"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "If YYYY, MM and DD are provided, then the daily report will be generated."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "****"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d Goal Setting"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Setting the savings goal : `setGoal`"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Sets the item and the amount that the user wishes to save up for. +"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: `setGoal n/ITEM_NAME $/AMOUNT`"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `setGoal n/nike shoes $/80` +"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Sets the goal to a $80 Nike shoe."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Viewing the savings goal : `viewGoal`"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Show details about the current goal set. +"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `viewGoal`"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Viewing the goal progress : `viewGoalProgress`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Show details of the goal and your progress with regards to hitting that goal. +"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: `viewGoalProgress`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d Miscellaneous"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Logging in to ePiggy : `login`"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Logs in to Expense Tracker as an existing user. +"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Format: `login u/USERNAME p/PASSWORD`"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* `login u/johndoe1990 p/password123` +"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "Logs into the johndoe1990 user account."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Exiting the program : `exit`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "Exits the program. +"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Saving the data"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "ePiggy\u0027s data is saved in the hard disk automatically after any command that changes the data. +"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d Upcoming Features"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Encrypting data files `[coming in v2.0]`"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "User can enable/disable data encryption to secure their files."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "\u003d\u003d\u003d\u003d Compare between users `[coming in v2.0]`"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Compares between different users."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "Requires multiple accounts in the same network."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ePiggy folder."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Help* : `help`"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Add Expense* : `addExpense n/EXPENSE_NAME $/COST [d/DATE] [a/NAME_OF_THE_SHOP] [t/TAG]…` +"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g. `addExpense n/Chicken rice set $/5 t/Food a/HAINAN KITCHEN d/2019-02-21`"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Add Allowance* : `addAllowance $/AMOUNT` +"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g. `addAllowance $/10`"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Add Item* : `addItem n/EXPENSE_NAME $/COST [t/TAG]` +"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g. `addItem n/Chicken-rice $/5 t/Food`"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *List* : `list`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Edit* : `edit INDEX [n/EXPENSE_NAME] [$/COST] [c/CATEGORY] [d/DATE] [t/TAG]…` +"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g. `edit 1 n/pen $1 c/supplies`"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "* *Delete* : `delete INDEX` +"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `delete 3`"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *View Expense* : `view INDEX` +"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g. `view 3`"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *View Savings* : `viewSavings`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Search* : `search -[n/t/d/$] [NAME/TAG/DATE RANGE/AMOUNT RANGE]` +"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "e.g.`search -n MCDONALDS`"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Sort* : `sort -[n/d/$] -[A/D]` +"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "e.g.`sort -n`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* *Set Budget* : `setBudget $/AMOUNT t/TIME_PERIOD_IN_DAYS $/START_DATE` +"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "e.g.`setBudget $500.00 t/7 d/01/02/2019`"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Edit Budget* : `editBudget [$/AMOUNT] [t/TIME_PERIOD_IN_DAYS] [$/START_DATE]` +"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g.`editBudget $300.00 t/28`"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* *Recommend* : `recommend`"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* *Report* : `report`"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Set Savings Goal* : `setGoal n/ITEM_NAME $/AMOUNT` +"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g. `setGoal n/nike shoes $/80`"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *View Savings Goal* : `viewGoal`"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *View Goal Progress* : `viewGoalProgress`"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "* *Login* : `login u/USERNAME p/PASSWORD` +"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "e.g. `login u/johndoe1990 p/password123`"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "kev-inc"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "kev-inc"
        },
        "content": "* *Exit* : `exit`"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 13,
      "kev-inc": 156,
      "tehwenyi": 124,
      "-": 139
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.AddressBookStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.UiManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        ReadOnlyAddressBook initialData;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            addressBookOptional \u003d storage.readAddressBook();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!addressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default config properties\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default user prefs\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting AddressBook \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        launch(args);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 1,
      "-": 187
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String MESSAGE_DELETE_CANCEL \u003d \"Delete cancel\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_INVALID_BUDGET_DISPLAYED_INDEX \u003d \"The budget index provided is invalid.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 2,
      "tehwenyi": 1,
      "-": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException If an error occurs during parsing."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the AddressBook."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#getAddressBook()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of persons */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of persons */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cExpense\u003e getFilteredExpenseList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    SimpleObjectProperty\u003cBudget\u003e getBudget();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    ObservableList\u003cBudget\u003e getBudgetList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of commands entered by the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * The list is ordered from the least recent command to the most recent command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cString\u003e getHistory();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Selected person in the filtered person list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no person is selected."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#selectedPersonProperty()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyProperty\u003cPerson\u003e selectedPersonProperty();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Selected expense in the filtered expense list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no expense is selected."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#selectedExpenseProperty()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyProperty\u003cExpense\u003e selectedExpenseProperty();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the selected person in the filtered person list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#setSelectedPerson(Person)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    void setSelectedPerson(Person person);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Sets the budget."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @see seedu.address.model.Model#setBudget(Budget)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    void setBudget(Budget budget);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Adds a new budget."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @see seedu.address.model.Model#addBudget(Budget)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    void addBudget(int index, Budget budget);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the selected expense in the filtered person list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#setSelectedExpense(Expense)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    void setSelectedExpense(Expense expense);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 19,
      "-": 91
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.AddressBookParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private final CommandHistory history;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser addressBookParser;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean addressBookModified;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        history \u003d new CommandHistory();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBookParser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set addressBookModified to true whenever the models\u0027 address book is modified."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        model.getAddressBook().addListener(observable -\u003e addressBookModified \u003d true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBookModified \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            Command command \u003d addressBookParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model, history);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            history.add(commandText);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        if (addressBookModified) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Address book modified, saving to file.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.saveAddressBook(model.getAddressBook());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBook();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getFilteredPersonList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cExpense\u003e getFilteredExpenseList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getFilteredExpenseList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public SimpleObjectProperty\u003cBudget\u003e getBudget() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return model.getBudget();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public ObservableList\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return model.getBudgetList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cString\u003e getHistory() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return history.getHistory();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBookFilePath();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cPerson\u003e selectedPersonProperty() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.selectedPersonProperty();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setSelectedPerson(Person person) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setSelectedPerson(person);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setSelectedExpense(Expense expense) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setSelectedExpense(expense);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setBudget(Budget budget) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        model.setBudget(budget); }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void addBudget(int index, Budget budget) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        model.addBudget(index, budget); }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cExpense\u003e selectedExpenseProperty() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.selectedExpenseProperty();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 20,
      "-": 124
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Adds a person to the address book."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    // TODO: Modify add command and pass all the JUnit test cases."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"a\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \": Adds an expense to the ePiggy. \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + PREFIX_NAME + \"EXPENSE NAME \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + PREFIX_COST + \"COST \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + PREFIX_CATEGORY + \"CATEGORY \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \"[\" + PREFIX_DATE + \"DATE] \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            + PREFIX_NAME + \"John Doe \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_PHONE + \"9820304 \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_EMAIL + \"123@nus.edu.sg \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + PREFIX_TAG + \"Lunch\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New expense added: %1$s\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    //    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_EXPENSE \u003d \"This expense already exists int he address book\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Person toAdd;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an AddCommand to add the specified {@code Person}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Person person) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d person;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (model.hasPerson(toAdd)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            //throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        model.addPerson(toAdd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        model.commitAddressBook();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof AddCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 20,
      "tehwenyi": 2,
      "-": 57
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Help information should be shown to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * The application should exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Summary should be shown to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private boolean showSummary;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * TODO: TO ADD SUMMARY BUTTON TO THE GUI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean summary) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        this.showSummary \u003d summary;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public boolean isSummary() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        return showSummary;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(feedbackToUser, showHelp, exit);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 26,
      "-": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/DeleteBudgetCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Edits the current budget in ePiggy."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class DeleteBudgetCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deleteBudget\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"db\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \": Deletes the budget identified by the index number used in the displayed budget list.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String MESSAGE_DELETE_BUDGET_SUCCESS \u003d \"Deleted budget: %1$s\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The index does not exist on the budget list.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public DeleteBudgetCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        List\u003cBudget\u003e lastShownBudgetList \u003d model.getFilteredBudgetList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownBudgetList.size()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_BUDGET_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget budgetToDelete \u003d lastShownBudgetList.get(this.targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        model.deleteBudgetAtIndex(this.targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        model.commitAddressBook();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_BUDGET_SUCCESS, budgetToDelete));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/EditBudgetCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.commands.epiggy.SetBudgetCommand.MESSAGE_OVERLAPPING_BUDGET;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PERIOD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BUDGETS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.item.Period;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.item.Price;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Edits the current budget in ePiggy."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class EditBudgetCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"editBudget\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"eb\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    // TODO MESSAGE_USAGE should come out"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the current budget. \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Parameters: [\" + PREFIX_COST + \"AMOUNT] \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"[\" + PREFIX_PERIOD + \"TIME_PERIOD_IN_DAYS] \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"[\" + PREFIX_DATE + \"START_DATE_IN_DD/MM/YYYY] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_COST + \"200 \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_PERIOD + \"7\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String MESSAGE_EDIT_BUDGET_SUCCESS \u003d \"Current budget updated: %1$s\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String MESSAGE_EDIT_BUDGET_FAIL \u003d \"Only the current budget can be edited.\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \" There is no current budget to be edited.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String MESSAGE_BUDGET_STATUS_ERROR \u003d \"The current budget must remain as the current budget.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \" Please add a new budget or delete the current budget if you wish to create a budget of another status.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_NOT_EDITED \u003d \"Budget not edited as there are no changes.\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + MESSAGE_USAGE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final EditBudgetDetails editBudgetDetails;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public EditBudgetCommand(EditBudgetDetails editBudgetDetails) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(editBudgetDetails);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.editBudgetDetails \u003d new EditBudgetDetails(editBudgetDetails);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        List\u003cBudget\u003e lastShownBudgetList \u003d model.getFilteredBudgetList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int indexOfCurrentBudget \u003d model.getCurrentBudgetIndex();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (indexOfCurrentBudget \u003d\u003d -1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new CommandException(MESSAGE_EDIT_BUDGET_FAIL);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget budgetToEdit \u003d lastShownBudgetList.get(indexOfCurrentBudget);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget editedBudget \u003d createEditedBudget(budgetToEdit, editBudgetDetails);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (lastShownBudgetList.size() \u003e 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // If the budget is not the latest budget"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (indexOfCurrentBudget \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                Budget laterBudget \u003d lastShownBudgetList.get(indexOfCurrentBudget - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                if (editedBudget.getEndDate().after(laterBudget.getStartDate())) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    throw new CommandException(MESSAGE_OVERLAPPING_BUDGET);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // If the budget is not the earliest budget"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (indexOfCurrentBudget \u003c lastShownBudgetList.size() - 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                Budget earlierBudget \u003d lastShownBudgetList.get(indexOfCurrentBudget + 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                if (editedBudget.getStartDate().before(earlierBudget.getEndDate())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    throw new CommandException(MESSAGE_OVERLAPPING_BUDGET);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        model.setCurrentBudget(editedBudget);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        model.updateFilteredBudgetList(PREDICATE_SHOW_ALL_BUDGETS);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        model.commitAddressBook();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_EDIT_BUDGET_SUCCESS, editedBudget));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Creates and returns a {@code Budget} with the details of {@code budgetToEdit}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * edited with {@code editBudgetDetails}."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static Budget createEditedBudget(Budget budgetToEdit, EditBudgetDetails editBudgetDetails) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        assert budgetToEdit !\u003d null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Price updatedAmount \u003d editBudgetDetails.getAmount().orElse(budgetToEdit.getPrice());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date updatedStartDate \u003d editBudgetDetails.getStartDate().orElse((budgetToEdit.getStartDate()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Period updatedPeriod \u003d editBudgetDetails.getPeriod().orElse(budgetToEdit.getPeriod());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new Budget(updatedAmount, updatedPeriod, updatedStartDate);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Stores the details to edit the person with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * corresponding field value of the person."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static class EditBudgetDetails {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        private Price amount;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        private Date startDate;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        private Period period;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public EditBudgetDetails() {}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "         * Copy constructor."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "         */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public EditBudgetDetails(EditBudgetDetails toCopy) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            setAmount(toCopy.amount);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            setStartDate(toCopy.startDate);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            setPeriod(toCopy.period);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "         * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "         */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return CollectionUtil.isAnyNonNull(amount, startDate, period);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void setAmount(Price amount) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.amount \u003d amount;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void setStartDate(Date startDate) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void setPeriod(Period period) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.period \u003d period;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public Optional\u003cPrice\u003e getAmount() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return Optional.ofNullable(amount);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public Optional\u003cDate\u003e getStartDate() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return Optional.ofNullable(startDate);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public Optional\u003cPeriod\u003e getPeriod() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return Optional.ofNullable(period);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public boolean equals(Object other) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // short circuit if same object"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // instanceof handles nulls"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (!(other instanceof EditBudgetDetails)) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // state check"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            EditBudgetDetails e \u003d (EditBudgetDetails) other;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return getAmount().equals(e.getAmount())"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    \u0026\u0026 getStartDate().equals(e.getStartDate())"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    \u0026\u0026 getPeriod().equals(e.getPeriod());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 182
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/HelpCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Lists all the commands with their brief description and syntax."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * TODO: to complete full commands list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"hp\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "    public static final String SHOWING_HELP_MESSAGE \u003d \"Commands List : \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "            + \"Add : add n/EXPENSE_NAME $/COST c/CATEGORY [d/DATE] [t/TAG]… \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "            + \"Delete : `delete INDEX \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "            + \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Execute `help` command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param history {@code CommandHistory} which the command should operate on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "        return new CommandResult(SHOWING_HELP_MESSAGE, false, false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 29,
      "rahulb99": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/LoginCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " * Login with a username and password"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " * TODO: implement in future"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "public class LoginCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"login\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"l\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/LogoutCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " * Logout"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " * TODO: Implement in future."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "public class LogoutCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/ReportCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PERIOD;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.ui.ReportWindow;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " * Shows summary to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "public class ReportCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"report\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"rp\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String COMMAND_USAGE_DAILY \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \": Shows daily report to the user.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String COMMAND_USAGE_MONTHLY \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \": Shows monthly report to the user.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String COMMAND_USAGE_YEARLY \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \": Shows yearly report to the user.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \": Shows report to the user.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + PREFIX_PERIOD + \"TYPE OF REPORT \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            + PREFIX_PERIOD + \"monthly \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Showed report.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private String type \u003d \"MONTHLY\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Constructor with chart type."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * @param type"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public ReportCommand(String type) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Default constructor"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public ReportCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        ReportWindow summaryWindow \u003d new ReportWindow();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        logger.info(\"Creates Report window\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        // set a dummy value. TODO: Changes it when other command done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        ExpenseDisplayType expenseDisplayType \u003d ExpenseDisplayType.valueOf(type);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        switch (expenseDisplayType) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        case DAILY:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            summaryWindow.displayDailyReport();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        case MONTHLY:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            summaryWindow.displayMonthlyReport();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        case YEARLY:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            summaryWindow.dispalyYearlySummary();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        case PERCENTAGE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            summaryWindow.displayExpensePercentageReport();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            summaryWindow.displayMonthlyReport();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS, false, false, true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Chart will be displayed according to expense display type."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public enum ExpenseDisplayType {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        MONTHLY, DAILY, TOTAL, YEARLY, PERCENTAGE"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 90
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/SetBudgetCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PERIOD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.model.epiggy.UniqueBudgetList.MAXIMUM_SIZE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Sets a budget for the total expenses."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class SetBudgetCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"setBudget\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"sb\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \": Sets a budget for ePiggy. \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_COST + \"BUDGET_IN_DOLLARS \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_PERIOD + \"TIME_PERIOD_IN_DAYS \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_DATE + \"START_DATE_IN_DD/MM/YYYY \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_COST + \"500 \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_PERIOD + \"28 \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + PREFIX_DATE + \"01/02/2019\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Budget is set at: %1$s\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_FAIL \u003d \"Budget date is too old to be added. \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"The budget list can only accommodate a maximum of \" + MAXIMUM_SIZE"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \" budgets, please delete one of the old budgets if you wish to add this budget.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_OVERLAPPING_BUDGET \u003d \"Budgets should not overlap. \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"Please ensure that the start date of the edited budget \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"is later than the end date of the previous budget.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    // public static final String MESSAGE_DUPLICATE_EXPENSE \u003d \"This expense already exists in the address book\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final Budget toSet;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Creates an AddCommand to add the specified {@code Person}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public SetBudgetCommand(Budget budget) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(budget);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        toSet \u003d budget;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date startDate \u003d toSet.getStartDate();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date endDate \u003d toSet.getEndDate();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        List\u003cBudget\u003e currentList \u003d model.getFilteredBudgetList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (currentList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            model.addBudget(0, toSet);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            model.commitAddressBook();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toSet));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget earlierBudget;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget laterBudget \u003d currentList.get(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        while (index \u003c currentList.size()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            earlierBudget \u003d currentList.get(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (index \u003e 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                laterBudget \u003d currentList.get(index - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // Check for overlaps"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (!startDate.after(earlierBudget.getStartDate()) \u0026\u0026 endDate.after(earlierBudget.getStartDate())) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                throw new CommandException(MESSAGE_OVERLAPPING_BUDGET);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (!startDate.before(earlierBudget.getStartDate()) \u0026\u0026 !endDate.after(earlierBudget.getEndDate())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                throw new CommandException(MESSAGE_OVERLAPPING_BUDGET);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (startDate.before(earlierBudget.getEndDate()) \u0026\u0026 !endDate.before(earlierBudget.getEndDate())) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                throw new CommandException(MESSAGE_OVERLAPPING_BUDGET);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (!startDate.before(earlierBudget.getEndDate())) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                if (index \u003d\u003d 0 || !endDate.after(laterBudget.getStartDate())) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    model.addBudget(index, toSet);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    model.commitAddressBook();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    return new CommandResult(String.format(MESSAGE_SUCCESS, toSet));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    throw new CommandException(MESSAGE_OVERLAPPING_BUDGET);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (index \u003c MAXIMUM_SIZE) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            model.addBudget(index, toSet);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            model.commitAddressBook();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toSet));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new CommandResult(MESSAGE_FAIL);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                || (other instanceof SetBudgetCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                \u0026\u0026 toSet.equals(((SetBudgetCommand) other).toSet));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 115
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/epiggy/ViewBudgetCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.logic.commands.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Allows user to view the budget set and its details."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class ViewBudgetCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"viewBudget\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"vb\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \": Views the budget set for ePiggy. \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Budget details shown above.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // The display of budget should be done in model, eg. model.getBudgetDetails"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget budget \u003d model.getBudget().getValue();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        String budgetMessage \u003d \"--Budget Details--\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                + \"Budgeted Amount: $\" + budget.getPrice()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                + \"\\nStart Date: \" + budget.getStartDate()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                + \"\\nEnd Date: \" + budget.getEndDate()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                + \"\\n--Current Status--\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                + \"Remaining Days: \" + budget.getRemainingDays()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                + \"\\nRemaining Amount: $\" + budget.getRemainingAmount();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new CommandResult(budgetMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HistoryCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.SelectCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.AddAllowanceCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.AddExpenseCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.epiggy.DeleteBudgetCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.epiggy.EditBudgetCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.ReportCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.SetBudgetCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.SetGoalCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.epiggy.ViewBudgetCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.ViewGoalCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.ViewGoalProgressCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.ViewSavingsCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.epiggy.AddAllowanceCommandParser;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.epiggy.AddExpenseCommandParser;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.epiggy.DeleteBudgetCommandParser;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.epiggy.EditBudgetCommandParser;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.parser.epiggy.ReportCommandParser;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.epiggy.SetBudgetCommandParser;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.epiggy.SetGoalCommandParser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParser {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddExpenseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddExpenseCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddExpenseCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddAllowanceCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddAllowanceCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddAllowanceCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        case ViewSavingsCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case ViewSavingsCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ViewSavingsCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        case SelectCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        case SelectCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            return new SelectCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        case ClearCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        case HistoryCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        case HistoryCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HistoryCommand();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case SetBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case SetBudgetCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new SetBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case EditBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case EditBudgetCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new EditBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case DeleteBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case DeleteBudgetCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new DeleteBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case ViewBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        case ViewBudgetCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new ViewBudgetCommand();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        case SetGoalCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        case SetGoalCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            return new SetGoalCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        case ViewGoalCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        case ViewGoalCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ViewGoalCommand();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        case ViewGoalProgressCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        case ViewGoalProgressCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ViewGoalProgressCommand();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        case UndoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        case UndoCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        case RedoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        case RedoCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            return new RedoCommand();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        case ReportCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        case ReportCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            if (arguments.equals(\"\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                return new ReportCommandParser().parse(\" t/MONTHLY\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                return new ReportCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 9,
      "tehwenyi": 22,
      "-": 139
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CliSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Prefix definitions */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final Prefix PREFIX_COST \u003d new Prefix(\"$/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final Prefix PREFIX_PERIOD \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 4,
      "tehwenyi": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.item.Period;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Price;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * trimmed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String name} into a {@code Name}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code name} is invalid."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Name parseName(String name) throws ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedName \u003d name.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Name.isValidName(trimmedName)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Name(trimmedName);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String name} into a {@code Name}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static seedu.address.model.epiggy.item.Name parseItemName(String name) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedName \u003d name.trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return new seedu.address.model.epiggy.item.Name(trimmedName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Parses a {@code String cost} into a {@code Price}."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Price parseCost(String cost) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(cost);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        String trimmedCost \u003d cost.trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new Price(Integer.parseInt(trimmedCost));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Parses a {@code String budgetAmount} into a {@code Price}."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static Price parseBudgetAmount(String cost) throws ParseException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(cost);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        String trimmedCost \u003d cost.trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int budgetAmount \u003d Integer.parseInt(trimmedCost);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (budgetAmount \u003c\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new ParseException(Budget.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new Price(budgetAmount);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Parses a {@code String Date} into a {@code Date}."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static Date parseDate(String date) throws ParseException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date parsedDate \u003d null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // TODO add more forms of setting date eg. dd.mm.yyyy"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            parsedDate \u003d dateFormat.parse(date.trim());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } catch (java.text.ParseException parseException) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new ParseException(\"Date should be in the format dd/mm/yyyy.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return parsedDate;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Parses a {@code String period} into a {@code Period}."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static Period parsePeriod(String period) throws ParseException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(period);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        String trimmedPeriod \u003d period.trim();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!Period.isValidPeriod(trimmedPeriod)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new ParseException(Period.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new Period(Integer.parseInt(trimmedPeriod));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String phone} into a {@code Phone}."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code phone} is invalid."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Phone parsePhone(String phone) throws ParseException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(phone);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedPhone \u003d phone.trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Phone.isValidPhone(trimmedPhone)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Phone(trimmedPhone);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String address} into an {@code Address}."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code address} is invalid."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Address parseAddress(String address) throws ParseException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(address);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedAddress \u003d address.trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Address.isValidAddress(trimmedAddress)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Address(trimmedAddress);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String email} into an {@code Email}."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code email} is invalid."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Email parseEmail(String email) throws ParseException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(email);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedEmail \u003d email.trim();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Email.isValidEmail(trimmedEmail)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Email(trimmedEmail);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String tag} into a {@code Tag}."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code tag} is invalid."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Tag parseTag(String tag) throws ParseException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tag);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedTag \u003d tag.trim();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Tag.isValidTagName(trimmedTag)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Tag(trimmedTag);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tags);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String tagName : tags) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            tagSet.add(parseTag(tagName));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagSet;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 51,
      "-": 142
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/epiggy/AddAllowanceCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.AddAllowanceCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Allowance;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Item;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Price;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new AddAllowanceCommand object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddAllowanceCommandParser implements Parser\u003cAddAllowanceCommand\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddAllowanceCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_COST);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_COST)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAllowanceCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Name name \u003d new Name(\"Allowance\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        Price cost \u003d ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date date \u003d new Date(); //TODO dummy code right now"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e tagList \u003d Set.of(new Tag(\"Allowance\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        Item item \u003d new Item(name, cost, tagList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        Allowance allowance \u003d new Allowance(item, date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return new AddAllowanceCommand(allowance);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 2,
      "-": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/epiggy/AddExpenseCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.epiggy.AddExpenseCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Item;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Price;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new AddExpenseCommand object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddExpenseCommandParser implements Parser\u003cAddExpenseCommand\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddExpenseCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns an AddCommand object for execution."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddExpenseCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COST, PREFIX_DATE, PREFIX_TAG);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COST, PREFIX_TAG)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExpenseCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Name name \u003d ParserUtil.parseItemName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Price cost \u003d ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "        Date date \u003d new Date(); //TODO dummy code right now"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Item item \u003d new Item(name, cost, tagList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Expense expense \u003d new Expense(item, date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return new AddExpenseCommand(expense);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 1,
      "-": 60,
      "rahulb99": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/epiggy/DeleteBudgetCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.logic.parser.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.epiggy.DeleteBudgetCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Parses input arguments and creates a new DeleteBudgetCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class DeleteBudgetCommandParser implements Parser\u003cDeleteBudgetCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the DeleteBudgetCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * and returns an DeleteBudgetCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public DeleteBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new DeleteBudgetCommand(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBudgetCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/epiggy/EditBudgetCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.logic.parser.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PERIOD;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.epiggy.EditBudgetCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.epiggy.EditBudgetCommand.EditBudgetDetails;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Parses input arguments and creates a new EditBudgetCommand object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class EditBudgetCommandParser implements Parser\u003cEditBudgetCommand\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the EditBudgetCommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * and returns an EditBudgetCommand object for execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public EditBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_COST, PREFIX_PERIOD, PREFIX_DATE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        EditBudgetDetails editBudgetDetails \u003d new EditBudgetDetails();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (argMultimap.getValue(PREFIX_COST).isPresent()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            editBudgetDetails.setAmount(ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (argMultimap.getValue(PREFIX_PERIOD).isPresent()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            editBudgetDetails.setPeriod(ParserUtil.parsePeriod(argMultimap.getValue(PREFIX_PERIOD).get()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            editBudgetDetails.setStartDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!editBudgetDetails.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new ParseException(EditBudgetCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new EditBudgetCommand(editBudgetDetails);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/epiggy/ReportCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "package seedu.address.logic.parser.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PERIOD;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.commands.epiggy.ReportCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " * Parses input arguments and display report."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "public class ReportCommandParser implements Parser\u003cReportCommand\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the ReportCommand"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * and returns an ReportCommand object for execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public ReportCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_PERIOD);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_PERIOD)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReportCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        if (argMultimap.getValue(PREFIX_PERIOD).isPresent()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            String type \u003d argMultimap.getValue(PREFIX_PERIOD).get();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            return new ReportCommand(type.toUpperCase());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            return new ReportCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/epiggy/SetBudgetCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.logic.parser.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PERIOD;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.commands.epiggy.SetBudgetCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.item.Period;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.item.Price;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class SetBudgetCommandParser implements Parser\u003cSetBudgetCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the SetBudgetCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * and returns an SetBudgetCommand object for execution."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public SetBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_COST, PREFIX_PERIOD, PREFIX_DATE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_COST, PREFIX_PERIOD, PREFIX_DATE)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Price budgetAmount \u003d ParserUtil.parseBudgetAmount(argMultimap.getValue(PREFIX_COST).get());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Period period \u003d ParserUtil.parsePeriod(argMultimap.getValue(PREFIX_PERIOD).get());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget budget \u003d new Budget(budgetAmount, period, date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 57
    }
  },
  {
    "path": "src/main/java/seedu/address/model/AddressBook.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.InvalidationListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.collections.transformation.SortedList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.InvalidationListenerManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "import seedu.address.model.epiggy.Allowance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "import seedu.address.model.epiggy.Goal;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "import seedu.address.model.epiggy.Savings;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "import seedu.address.model.epiggy.UniqueBudgetList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Item;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.item.Period;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.UniquePersonList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * Wraps all data at the address-book level"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Duplicates are not allowed (by .isSamePerson comparison)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBook implements ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "    private final ObservableList\u003cExpense\u003e expenses;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cItem\u003e items;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private SimpleObjectProperty\u003cBudget\u003e budget;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private SimpleObjectProperty\u003cGoal\u003e goal;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private SimpleObjectProperty\u003cSavings\u003e savings;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UniquePersonList persons;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final UniqueBudgetList budgetList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private final InvalidationListenerManager invalidationListenerManager \u003d new InvalidationListenerManager();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * The \u0027unusual\u0027 code block below is an non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "        expenses \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        items \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetList \u003d new UniqueBudgetList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        persons \u003d new UniquePersonList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budget \u003d new SimpleObjectProperty\u003c\u003e(new Budget());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        goal \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        savings \u003d new SimpleObjectProperty\u003c\u003e(new Savings());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBook() {}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBook(ReadOnlyAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the contents of the person list with {@code persons}."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code persons} must not contain duplicate persons."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        this.persons.setPersons(persons);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        setPersons(newData.getPersonList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    //// person-level operations"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.contains(person);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a person to the address book."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must not already exist in the address book."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPerson(Person p) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.add(p);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds an expense to the expense book."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addExpense(Expense expense) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        expenses.add(expense);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        Savings s \u003d savings.get();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        s.deductSavings(expense.getItem().getPrice().getAmount());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        savings.set(s);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (budgetList.getBudgetListSize() \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            int indexOfBudgetToEdit \u003d budgetList.getBudgetIndexBasedOnDate(expense.getDate());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (indexOfBudgetToEdit \u003e\u003d 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                Budget budgetToEdit \u003d budgetList.getBudgetAtIndex(indexOfBudgetToEdit);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                budgetToEdit.setRemainingAmountToInitialAmount();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                Budget editedBudget \u003d updateToBeAddedBudgetBasedOnExpenses(budgetToEdit);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                System.out.println(editedBudget);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                budgetList.replaceAtIndex(indexOfBudgetToEdit, editedBudget);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Creates a new Budget every time the budget needs to be updated."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private void createNewBudgetTillUpdated(Expense expense) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // Creates new budgets if the expense date is over the endDate of the current budgets"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget latestBudget \u003d budgetList.getLatestBudget();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // Continue looping as long as the expense\u0027s date is later than the latest budget\u0027s end date"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // Sets the remaining days of the previous budget to 0 when creating a new budget"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // Set the status of the previous budget to old too"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            latestBudget.setRemainingDays(new Period(0));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            latestBudget.setStatusToOld();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            budgetList.replaceLatestBudgetWith(latestBudget);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // Create new budget based on previous budget"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Budget b \u003d new Budget(latestBudget.getPrice(), latestBudget.getPeriod(), latestBudget.getEndDate());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // Update the budget based on current expenses and add a new budget"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            budgetList.addAtIndex(0, updateToBeAddedBudgetBasedOnExpenses(b));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            latestBudget \u003d budgetList.getLatestBudget();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } while (budgetIsNotUpdated());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds an allowance to the expense book."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param allowance to be added."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addAllowance(Allowance allowance) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        expenses.add(allowance);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        Savings s \u003d savings.get();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        s.addSavings(allowance.getItem().getPrice().getAmount());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        savings.set(s);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public SimpleObjectProperty\u003cSavings\u003e getSavings() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        return savings;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Sets a budget for ePiggy."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * TODO: check if this method is still in use"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setBudget(Budget budget) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (budget.getPrice().getAmount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.budget.setValue(budget);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            // cannot create budget"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Adds a budget to the budgetList."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Called by the Command setBudget only."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param budget to be added into budgetList."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void addBudget(int index, Budget budget) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budget \u003d updateToBeAddedBudgetBasedOnExpenses(budget);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetList.addAtIndex(index, budget);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        if (budgetIsNotUpdated()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            // Create a new budget based on the latest expense"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            createNewBudgetTillUpdated(sortExpensesByDate().get(expenses.size() - 1));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Deletes the budget at the specific index."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param index of the to be deleted budget."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void deleteBudgetAtIndex(int index) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetList.remove(index);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Updated the budget to be added based on the current list of expenses before it is added."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Budget updateToBeAddedBudgetBasedOnExpenses(Budget budget) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date todaysDate \u003d new Date();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (todaysDate.after(budget.getEndDate())) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            budget.setRemainingDays(new Period(0));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            long diffInMillies \u003d budget.getEndDate().getTime() - todaysDate.getTime();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            long diff \u003d TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            budget.setRemainingDays(new Period((int) Math.ceil(diff)));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        SortedList\u003cExpense\u003e sortedExpensesByDate \u003d sortExpensesByDate();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        ListIterator\u003cExpense\u003e iterator \u003d sortedExpensesByDate.listIterator();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Expense expense \u003d iterator.next();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (expense.getDate().after(budget.getStartDate())) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                if (!budget.getEndDate().before(expense.getDate())) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    budget.deductRemainingAmount(expense.getItem().getPrice());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    return budget;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return budget;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Checks if the budget is valid, then replace the latest budget."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private void replaceLatestBudgetWithCheckedBudget(Budget editedBudget) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        SortedList\u003cExpense\u003e expenseSortedList \u003d sortExpensesByDate();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Expense latestExpense \u003d expenseSortedList.get(expenseSortedList.size() - 1);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!editedBudget.getEndDate().after(latestExpense.getDate())) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            budgetList.replaceLatestBudgetWith(editedBudget);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            createNewBudgetTillUpdated(latestExpense);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            budgetList.replaceLatestBudgetWith(editedBudget);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Sorts Expenses according to Date. Earlier Dates will have lower indexes."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return SortedList of Expenses"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private SortedList\u003cExpense\u003e sortExpensesByDate() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "        return expenses.sorted(new Comparator\u003cExpense\u003e() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                public int compare(Expense e1, Expense e2) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                    if (e1.getDate() \u003d\u003d null || e2.getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                        return 0;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                    return e1.getDate().compareTo(e2.getDate());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "            });"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Checks if the budget is updated according to the Expense List."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Only invoked if there is at least one budget."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return True if budget is not updated."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private boolean budgetIsNotUpdated() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        SortedList\u003cExpense\u003e sortedExpensesByDate \u003d sortExpensesByDate();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!sortedExpensesByDate.isEmpty()) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Expense latestExpense \u003d sortedExpensesByDate.get(sortedExpensesByDate.size() - 1);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Date lastBudgetedDate \u003d budgetList.getLatestBudget().getEndDate();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Date lastExpenseDate \u003d latestExpense.getDate();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return (lastExpenseDate.after(lastBudgetedDate));"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the current budget for ePiggy."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public SimpleObjectProperty\u003cBudget\u003e getBudget() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return this.budget;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the current budget for ePiggy."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public ObservableList\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return this.budgetList.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the current budget\u0027s index."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return -1 if there is no current budget."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getCurrentBudgetIndex() {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return this.budgetList.getCurrentBudgetIndex();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    };"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Checks if there is already a budget in AddressBook."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean hasBudget() {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (budgetList.asUnmodifiableObservableList().isEmpty()) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the saving goal for ePiggy."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGoal(Goal goal) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        this.goal.setValue(goal);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the saving goal for ePiggy."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    public SimpleObjectProperty\u003cGoal\u003e getGoal() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        return goal;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the given person {@code target} in the list with {@code editedPerson}."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the address book."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(editedPerson);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Replaces the current/previous budget in the list with {@code editedBudget}."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setCurrentBudget(Budget editedBudget) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(editedBudget);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int indexOfCurrentBudget \u003d budgetList.getCurrentBudgetIndex();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetList.replaceAtIndex(indexOfCurrentBudget, updateToBeAddedBudgetBasedOnExpenses(editedBudget));"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes {@code key} from this {@code AddressBook}."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code key} must exist in the address book."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removePerson(Person key) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.remove(key);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateModified();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addListener(InvalidationListener listener) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        invalidationListenerManager.addListener(listener);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeListener(InvalidationListener listener) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        invalidationListenerManager.removeListener(listener);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "     * Notifies listeners that the address book has been modified."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void indicateModified() {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        invalidationListenerManager.callListeners(this);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.asUnmodifiableObservableList().size() + \" persons\";"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cExpense\u003e getExpenseList() {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "        return FXCollections.unmodifiableObservableList(expenses);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cItem\u003e getItemList() {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        return FXCollections.unmodifiableObservableList(items);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof AddressBook // instanceof handles nulls"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 persons.equals(((AddressBook) other).persons));"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.hashCode();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 192,
      "-": 202,
      "rahulb99": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Allowance;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Goal;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Savings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    Predicate\u003cBudget\u003e PREDICATE_SHOW_ALL_BUDGETS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    void setAddressBookFilePath(Path addressBookFilePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces address book data with the data in {@code addressBook}."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    void setAddressBook(ReadOnlyAddressBook addressBook);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns the AddressBook */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean hasPerson(Person person);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the given person."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must exist in the address book."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    void deletePerson(Person target);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the given person."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code person} must not already exist in the address book."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    void addPerson(Person person);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Adds the given expense."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code person} must not already exist in the address book."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    void addExpense(Expense expense);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the given allowance."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    void addAllowance(Allowance allowance);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Sets the given budget."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    void setBudget(Budget budget);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Adds a new budget."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    void addBudget(int index, Budget budget);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Deletes the budget at the specific index."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    void deleteBudgetAtIndex(int index);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the current budget."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    SimpleObjectProperty\u003cBudget\u003e getBudget();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the current budget list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    ObservableList\u003cBudget\u003e getBudgetList();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the current budget\u0027s index."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return -1 if there is no current budget."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    int getCurrentBudgetIndex();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the current savings."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    SimpleObjectProperty\u003cSavings\u003e getSavings();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the savings goal."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    SimpleObjectProperty\u003cGoal\u003e getGoal();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the savings goal."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGoal(Goal goal);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Checks if a budget already exists in AddressBook."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    boolean hasBudget();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the given person {@code target} with {@code editedPerson}."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the address book."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    void setPerson(Person target, Person editedPerson);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Replaces the current budget with {@code editedBudget}."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    void setCurrentBudget(Budget editedBudget);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered person list */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered expense list */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cExpense\u003e getFilteredExpenseList();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /** Returns an unmodifiable view of the filtered budget list */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    ObservableList\u003cBudget\u003e getFilteredBudgetList();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the filter of the filtered person list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Updates the filter of the filtered budget list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    void updateFilteredBudgetList(Predicate\u003cBudget\u003e predicate);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the model has previous address book states to restore."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean canUndoAddressBook();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the model has undone address book states to restore."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean canRedoAddressBook();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores the model\u0027s address book to its previous state."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    void undoAddressBook();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores the model\u0027s address book to its previously undone state."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    void redoAddressBook();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the current address book state for undo/redo."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    void commitAddressBook();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "     * Selected person in the filtered person list."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no person is selected."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyProperty\u003cPerson\u003e selectedPersonProperty();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * Selected person in the filtered person list."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no person is selected."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyProperty\u003cExpense\u003e selectedExpenseProperty();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the selected person in the filtered person list."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no person is selected."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    Person getSelectedPerson();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the selected person in the filtered person list."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    void setSelectedPerson(Person person);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the selected expense in the filtered expense list."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    void setSelectedExpense(Expense expense);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 54,
      "-": 176
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Allowance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Goal;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Savings;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.PersonNotFoundException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private final VersionedAddressBook versionedAddressBook;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilteredList\u003cPerson\u003e filteredPersons;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilteredList\u003cExpense\u003e filteredExpenses;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final FilteredList\u003cBudget\u003e filteredBudget;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private final SimpleObjectProperty\u003cPerson\u003e selectedPerson \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private final SimpleObjectProperty\u003cExpense\u003e selectedExpense \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes a ModelManager with the given addressBook and userPrefs."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(addressBook, userPrefs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook \u003d new VersionedAddressBook(addressBook);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons \u003d new FilteredList\u003c\u003e(versionedAddressBook.getPersonList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons.addListener(this::ensureSelectedPersonIsValid);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredExpenses \u003d new FilteredList\u003c\u003e(versionedAddressBook.getExpenseList());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        filteredBudget \u003d new FilteredList\u003c\u003e(versionedAddressBook.getBudgetList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        //TODO"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new AddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getAddressBookFilePath();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(addressBookFilePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setAddressBookFilePath(addressBookFilePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBook(ReadOnlyAddressBook addressBook) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.resetData(addressBook);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.hasPerson(person);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.removePerson(target);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPerson(Person person) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.addPerson(person);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addExpense(Expense expense) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.addExpense(expense);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addAllowance(Allowance allowance) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.addAllowance(allowance);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setBudget(Budget budget) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        versionedAddressBook.setBudget(budget); }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void addBudget(int index, Budget budget) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        versionedAddressBook.addBudget(index, budget); }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void deleteBudgetAtIndex(int index) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        versionedAddressBook.deleteBudgetAtIndex(index);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    };"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public SimpleObjectProperty\u003cBudget\u003e getBudget() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.getBudget();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public ObservableList\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return versionedAddressBook.getBudgetList();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getCurrentBudgetIndex() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return versionedAddressBook.getCurrentBudgetIndex();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean hasBudget() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return versionedAddressBook.hasBudget();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public SimpleObjectProperty\u003cSavings\u003e getSavings() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.getSavings();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public SimpleObjectProperty\u003cGoal\u003e getGoal() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.getGoal();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGoal(Goal goal) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.setGoal(goal);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setCurrentBudget(Budget editedBudget) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(editedBudget);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        versionedAddressBook.setCurrentBudget(editedBudget);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code versionedAddressBook}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        return filteredPersons;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code versionedAddressBook}"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cExpense\u003e getFilteredExpenseList() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        return filteredExpenses;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Budget} backed by the internal list of"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * {@code versionedAddressBook}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public ObservableList\u003cBudget\u003e getFilteredBudgetList() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return filteredBudget;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons.setPredicate(predicate);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void updateFilteredBudgetList(Predicate\u003cBudget\u003e predicate) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        filteredBudget.setPredicate(predicate);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean canUndoAddressBook() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.canUndo();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean canRedoAddressBook() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.canRedo();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    public void undoAddressBook() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.undo();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    public void redoAddressBook() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.redo();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public void commitAddressBook() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.commit();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Selected person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cPerson\u003e selectedPersonProperty() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        return selectedPerson;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cExpense\u003e selectedExpenseProperty() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        return selectedExpense;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person getSelectedPerson() {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        return selectedPerson.getValue();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setSelectedPerson(Person person) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        if (person !\u003d null \u0026\u0026 !filteredPersons.contains(person)) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        selectedPerson.setValue(person);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setSelectedExpense(Expense expense) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        if (expense !\u003d null \u0026\u0026 !filteredExpenses.contains(expense)) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new PersonNotFoundException(); //TODO"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        selectedExpense.setValue(expense);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ensures {@code selectedPerson} is a valid person in {@code filteredPersons}."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    private void ensureSelectedPersonIsValid(ListChangeListener.Change\u003c? extends Person\u003e change) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        while (change.next()) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedPerson.getValue() \u003d\u003d null) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                // null is always a valid selected person, so we do not need to check that it is valid anymore."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean wasSelectedPersonReplaced \u003d change.wasReplaced() \u0026\u0026 change.getAddedSize() \u003d\u003d change.getRemovedSize()"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 change.getRemoved().contains(selectedPerson.getValue());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            if (wasSelectedPersonReplaced) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                // Update selectedPerson to its new value."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                int index \u003d change.getRemoved().indexOf(selectedPerson.getValue());"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedPerson.setValue(change.getAddedSubList().get(index));"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean wasSelectedPersonRemoved \u003d change.getRemoved().stream()"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                    .anyMatch(removedPerson -\u003e selectedPerson.getValue().isSamePerson(removedPerson));"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            if (wasSelectedPersonRemoved) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                // Select the person that came before it in the list,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                // or clear the selection if there is no such person."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedPerson.setValue(change.getFrom() \u003e 0 ? change.getList().get(change.getFrom() - 1) : null);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.equals(other.versionedAddressBook)"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 filteredPersons.equals(other.filteredPersons)"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(selectedPerson.get(), other.selectedPerson.get());"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 55,
      "-": 294
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyAddressBook.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.Observable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "//import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Item;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of an address book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyAddressBook extends Observable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the persons list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * This list will not contain any duplicate persons."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getPersonList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the expense list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cExpense\u003e getExpenseList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the item list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cItem\u003e getItemList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 1,
      "-": 30
    }
  },
  {
    "path": "src/main/java/seedu/address/model/epiggy/Allowance.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an allowance in the expense book."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Allowance extends Expense {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public Allowance(Item item, Date date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        super(item, date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 2,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/model/epiggy/Budget.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.item.Period;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Price;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Budget in the expense book."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            \"Budgeted amount should be more than $0.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String CURRENT_BUDGET \u003d \"Current\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String OLD_BUDGET \u003d \"Old\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String FUTURE_BUDGET \u003d \"Future\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Price amount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Date startDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Date endDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final Period period;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Price remainingAmount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Period remainingDays;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private String status \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Date todaysDate \u003d new Date();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Represents a Budget in the expense book."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Budget(Price amount, Period period, Date startDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.period \u003d period;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.endDate \u003d calculateEndDate(startDate, period);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingAmount \u003d amount;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingDays \u003d period;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!todaysDate.before(startDate) \u0026\u0026 !todaysDate.after(endDate)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.status \u003d CURRENT_BUDGET;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (todaysDate.before(startDate)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.status \u003d FUTURE_BUDGET;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.status \u003d OLD_BUDGET;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Represents a Budget in the expense book."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Budget() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.amount \u003d new Price(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        cal.set(Calendar.YEAR, 2000);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        cal.set(Calendar.MONTH, Calendar.JANUARY);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        cal.set(Calendar.DAY_OF_MONTH, 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.startDate \u003d cal.getTime();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.period \u003d new Period(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.endDate \u003d this.startDate;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingAmount \u003d amount;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingDays \u003d period;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!todaysDate.before(startDate) \u0026\u0026 !todaysDate.after(endDate)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.status \u003d CURRENT_BUDGET;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (todaysDate.before(startDate)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.status \u003d FUTURE_BUDGET;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            this.status \u003d OLD_BUDGET;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Calculates the end date \u003d startDate + period (number of days)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param startDate"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param period"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return endDate"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Date calculateEndDate(Date startDate, Period period) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        cal.setTime(this.startDate);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        cal.add(Calendar.DATE, period.getTimePeriod());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return cal.getTime();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private void setRemainingAmount(Price remainingAmount) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingAmount \u003d remainingAmount;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setRemainingDays(Period remainingDays) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingDays \u003d remainingDays;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setStatusToOld () {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.status \u003d OLD_BUDGET;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setRemainingAmountToInitialAmount() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingAmount \u003d this.amount;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void deductRemainingAmount(Price amountToDeduct) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.remainingAmount \u003d this.remainingAmount.deduct(amountToDeduct);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Price getRemainingAmount() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return remainingAmount;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Period getRemainingDays() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return remainingDays; }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public Price getPrice() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.amount;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public Period getPeriod() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.period;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.startDate;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.endDate;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!(o instanceof Budget)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Budget b \u003d (Budget) o;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return this.amount \u003d\u003d b.getPrice()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                \u0026\u0026 this.startDate \u003d\u003d b.getStartDate()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                \u0026\u0026 this.period \u003d\u003d b.getPeriod();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        builder.append(\"$\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(getPrice())"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(\" for \")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(getPeriod())"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(\" days starting from \")"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getStartDate())"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" till \")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(getEndDate())"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(\". \")"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(getRemainingDays())"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(\" days remaining and $\")"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(getRemainingAmount())"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(\" remaining.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 129,
      "-": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/model/epiggy/UniqueBudgetList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.model.epiggy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import static seedu.address.model.epiggy.Budget.CURRENT_BUDGET;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.exceptions.DuplicateBudgetException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * A list of budgetList that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * A budget is considered unique by comparing using {@code Budget#equals(Budget)}. As such, adding and updating of"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * budgetList uses Budget#equals(Budget) for equality so as to ensure that the budget being added or updated is"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * unique in terms of identity in the UniquePersonList. However, the removal of a budget uses Budget#equals(Object) so"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * as to ensure that the budget with exactly the same fields will be removed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class UniqueBudgetList implements Iterable\u003cBudget\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    // TODO: max 10/20 budget per list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final int MAXIMUM_SIZE \u003d 20;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final ObservableList\u003cBudget\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final ObservableList\u003cBudget\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns true if the list contains an equivalent budget as the given argument."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param toCheck if the budget exists in the internalList already."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return true if internalList already contains the budget."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean contains(Budget toCheck) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::equals);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Adds a new budget to the top of the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Only called when a new budget is added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param toAdd the budget to be added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void addAtIndex(int index, Budget toAdd) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        internalList.add(index, toAdd);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        limitSize();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Replaces the budget at index {@code index} with budget {@code toSet}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param toSet the budget to be added."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void replaceAtIndex(int index, Budget toSet) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(toSet);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        internalList.set(index, toSet);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        limitSize();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the last budget on the internal list, which is the previous budget."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * There must be at least one budget in {@code internalList}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return the latest budget in {@code internalList}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Budget getLatestBudget() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(internalList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return internalList.get(0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the budget on the internal list with the corresponding index."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * There must be at least one budget in {@code internalList}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return the corresponding budget in {@code internalList}."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Budget getBudgetAtIndex(int index) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(internalList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return internalList.get(index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the index of the budget based on the date."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return the index of the budget or -1 if the expense date is not in any of the budgets."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getBudgetIndexBasedOnDate(Date date) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(internalList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        for (int i \u003d 0; i \u003c internalList.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Budget toCheck \u003d internalList.get(i);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if ((!toCheck.getStartDate().after(date)) \u0026\u0026 (!toCheck.getEndDate().before(date))) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the current budget\u0027s index."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return -1 if there is no current budget."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getCurrentBudgetIndex() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        while (index \u003c internalList.size()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (internalList.get(index).getStatus().equals(CURRENT_BUDGET)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the size of internal list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return the size of {@code internalList}."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getBudgetListSize() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return internalList.size();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Removes the budget with the specific index from the list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * The budget of the index must exist in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param index of the budget to be removed."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        internalList.remove(index, index + 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Sets internalList to a new list of the same type."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param replacement list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setBudgetList(UniqueBudgetList replacement) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        limitSize();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Replaces the contents of this list with {@code budgetList}."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * {@code budgetList} must not contain duplicate budgetList."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param newBudgetList to replace."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void setBudgetList(List\u003cBudget\u003e newBudgetList) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireAllNonNull(newBudgetList);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!budgetsAreUnique(newBudgetList)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new DuplicateBudgetException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.internalList.setAll(newBudgetList);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        limitSize();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Replaces the previous budget in the list with {@code editedBudget}."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * The budget identity of {@code editedBudget} must not be the same as another existing budget in the list."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void replaceLatestBudgetWith(Budget editedBudget) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireAllNonNull(internalList, editedBudget);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        internalList.set(0, editedBudget);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Ensures the size of budgetList does not exceed {@code MAXIMUM_SIZE}."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Deletes all budgets after the {@code MAXIMUM_SIZE} has exceeded."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public void limitSize() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        requireNonNull(internalList);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int budgetListSize \u003d internalList.size();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (budgetListSize \u003e MAXIMUM_SIZE) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            for (int i \u003d budgetListSize; i \u003e MAXIMUM_SIZE; i--) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                internalList.remove(MAXIMUM_SIZE);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public ObservableList\u003cBudget\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Iterator\u003cBudget\u003e iterator() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                || (other instanceof UniqueBudgetList // instanceof handles nulls"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                        \u0026\u0026 internalList.equals(((UniqueBudgetList) other).internalList));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns true if {@code budgetList} contains only unique budgetList."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private boolean budgetsAreUnique(List\u003cBudget\u003e budgetList) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        for (int i \u003d 0; i \u003c budgetList.size() - 1; i++) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            for (int j \u003d i + 1; j \u003c budgetList.size(); j++) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                if (budgetList.get(i).equals(budgetList.get(j))) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 219
    }
  },
  {
    "path": "src/main/java/seedu/address/model/epiggy/exceptions/DuplicateBudgetException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.model.epiggy.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class DuplicateBudgetException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public DuplicateBudgetException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        super(\"Operation would result in duplicate budgets\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/epiggy/item/Date.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.model.epiggy.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Represents a Date in ePiggy."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            \"Date should be in the format dd/mm/yyyy, dd.mm.yyyy or \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    + \"dd-mm-yyyy and year should be no earlier than 1600\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"^(?:(?:31(\\\\/|-|\\\\.)(?:0?[13578]\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"|1[02]))\\\\1|(?:(?:29|30)(\\\\/|-|\\\\.)(?:0?[13-9]|1[0-2])\\\\2))(?:(?:1[6-9]|\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\/|-|\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\\d|\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            + \"2[0-8])(\\\\/|-|\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final HashMap\u003cInteger, Integer\u003e daysInMonth;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final int day;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final int month;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final int year;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth \u003d new HashMap\u003cInteger, Integer\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(1, 31);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(2, 28);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(3, 31);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(4, 30);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(5, 31);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(6, 30);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(7, 31);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(8, 31);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(9, 30);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(10, 31);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(11, 30);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        daysInMonth.put(12, 31);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Date(String date) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.day \u003d Integer.valueOf(date.substring(0, 2));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.month \u003d Integer.valueOf(date.substring(3, 5));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.year \u003d Integer.valueOf(date.substring(6, 10));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Date(int day, int month, int year) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Adds the number of days required to add to start day and calls the recursive function"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param addedDays"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return Date after adding the days"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Date addDays (int addedDays) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return addDays(this.day + addedDays, this.month, this.year);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Recursive function which adds the number of days to the date"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param days which is the sum of days to add and start day"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param month of the start date"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param year of the start date"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return Date after adding the days"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Date addDays(int days, int month, int year) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (days \u003e 0 \u0026\u0026 days \u003c\u003d getNoOfDaysInMonth(month, year)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return new Date(days, month, year);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (days \u003e 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            days \u003d days - getNoOfDaysInMonth(month, year);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            month \u003d month + 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (month \u003e 12) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                month \u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                year \u003d year + 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            //throw exception"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return addDays(days, month, year);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Gets the number of days in the month of that year"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param month of the date"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param year of the date"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return Number of days in that month of that year"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private int getNoOfDaysInMonth(int month, int year) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (month \u003d\u003d 2 \u0026\u0026 isLeap(year)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return daysInMonth.get(month) + 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return daysInMonth.get(month);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Check if given year is a leap year"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param year"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return true if year is leap year"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean isLeap(int year) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (year % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (year % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                if (year % 400 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Checks if the dateToCompare is a later date."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param dateToCompare the date to be compared."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return True if the dateToCompare is after this.date."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean isAfter(Date dateToCompare) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (this.getYear() \u003e dateToCompare.getYear()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (this.getYear() \u003c dateToCompare.getYear()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (this.getMonth() \u003e dateToCompare.getMonth()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (this.getMonth() \u003c dateToCompare.getMonth()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (this.getDay() \u003e dateToCompare.getDay()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Calculates the number of days between two dates"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param d the date to be compared."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return Period of days between the two dates."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Period timePeriodBetween (Date d) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new Period(Math.abs(calculateDaysFromDate(d) - calculateDaysFromDate(this)));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Calculates the number of days of the date from 1600."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @param d the date to converted to number of days."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return Number of days of the date."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private int calculateDaysFromDate(Date d) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int resultantDays \u003d d.getDay();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int year \u003d d.getYear();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        int month \u003d d.getMonth();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        while (month \u003e 0) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            resultantDays +\u003d getNoOfDaysInMonth(month, year);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            month--;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        while (year - 1600 \u003e 0) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (isLeap(year)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                resultantDays +\u003d 366;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                resultantDays +\u003d 365;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            year--;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return resultantDays;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Getter for day"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return day"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getDay() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return this.day;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Getter for month"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return month"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getMonth() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return this.month;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Getter for year"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return year"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return this.year;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Check if given dd mm yy format is valid"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return true if it is valid date format"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static boolean isValidDate(String test) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Comparator"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return TODO fill in"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int compareTo(Date d) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (this.isAfter(d)) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        } else if (this.equals(d)) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Check if the dates are equal"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * @return true if the dates are equal"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean equals(Date d) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (d \u003d\u003d this) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!(d instanceof Date)) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Date date \u003d (Date) d;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return (date.getDay() \u003d\u003d this.getDay() \u0026\u0026 date.getMonth() \u003d\u003d this.getMonth()"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                \u0026\u0026 date.getYear() \u003d\u003d this.getYear());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        builder.append(getDay())"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(\"/\")"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(getMonth())"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(\"/\")"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                .append(getYear());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 241
    }
  },
  {
    "path": "src/main/java/seedu/address/model/epiggy/item/Period.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.model.epiggy.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Represents a time period."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Guarantees: immutable"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class Period {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            \"Time period is in terms of days and should only contain whole numbers of at least value 1.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final int timePeriod;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Period(int timePeriod) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.timePeriod \u003d timePeriod;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public int getTimePeriod() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return timePeriod;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns true if a given string is a valid time period."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static boolean isValidPeriod(String test) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return Integer.toString(timePeriod);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/model/epiggy/item/Price.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.epiggy.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Price."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Price {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    // Change message constraints when we change amount from int to float"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            \"Cost should only contain whole numbers of at least value 1.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public Price(int amount) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public Price deduct(Price amountToDeduct) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return new Price(this.amount - amountToDeduct.getAmount());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getAmount() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns true if a given string is a valid price."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static boolean isValidPrice(String test) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return Integer.toString(amount);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 20,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BrowserPanel.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.value.ObservableValue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.web.WebView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * The Browser Panel of the App."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class BrowserPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final URL DEFAULT_PAGE \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(MainApp.class.getResource(FXML_FILE_FOLDER + \"default.html\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public static final String SEARCH_PAGE_URL \u003d \"https://se-education.org/dummy-search-page/?name\u003d\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"BrowserPanel.fxml\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebView browser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public BrowserPanel(ObservableValue\u003cPerson\u003e selectedPerson) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        // To prevent triggering events for typing inside the loaded Web page."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().setOnKeyPressed(Event::consume);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // Load person page when selected person changes."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        selectedPerson.addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            if (newValue \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                loadDefaultPage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            loadPersonPage(newValue);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        loadDefaultPage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadPersonPage(Person person) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        loadPage(SEARCH_PAGE_URL + person.getName().fullName);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void loadPage(String url) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.runLater(() -\u003e browser.getEngine().load(url));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads a default HTML file with a background that matches the general theme."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadDefaultPage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        loadPage(DEFAULT_PAGE.toExternalForm());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 1,
      "-": 66
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BudgetCard.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * A UI component that displays information of a {@code Budget}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class BudgetCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(BudgetCard.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String FXML \u003d \"BudgetListCard.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public final Budget budget;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label budgetTitle;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label budgetedAmount;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label startDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label endDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label period;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label currentStatus;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label remainingAmount;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private Label remainingDays;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public BudgetCard(int displayedIndex, Budget budget) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        this.budget \u003d budget;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetTitle.setText(displayedIndex + \". \" + budget.getStatus() + \" Budget\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetedAmount.setText(\"Amount: $\" + budget.getPrice().toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy (E)\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        startDate.setText(\"Start Date: \" + dateFormat.format(budget.getStartDate()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        calendar.setTime(budget.getEndDate());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        calendar.add(Calendar.DAY_OF_MONTH, -1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        endDate.setText(\"End Date: \" + dateFormat.format(calendar.getTime()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        period.setText(\"Period of Budget: \" + budget.getPeriod().toString() + \" days\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        currentStatus.setText(\"Status\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        remainingAmount.setText(\"Amount remaining: $\" + budget.getRemainingAmount().toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        remainingDays.setText(\"Days remaining: \" + budget.getRemainingDays().toString() + \" days\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //     * Returns the color style for {@code tagName}\u0027s label."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //    private String getTagColorStyleFor(String tagName) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //        // generate a random color from the hash code of the tag so the color remain consistent"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //        // between different runs of the program while still making it random enough between tags."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //        return TAG_COLOR_STYLES[Math.abs(tagName.hashCode()) % TAG_COLOR_STYLES.length];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //     * Creates the tag labels for {@code person}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //    private void initialiseTags(Budget budget) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //        budget.getItem().getTags().forEach(tag -\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //            Label tagLabel \u003d new Label(tag.tagName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //            tagLabel.getStyleClass().add(getTagColorStyleFor(tag.tagName));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //            tags.getChildren().add(tagLabel);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        if (!(other instanceof BudgetCard)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // need to change"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        BudgetCard card \u003d (BudgetCard) other;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        return remainingDays.getText().equals(card.remainingDays.getText())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //                \u0026\u0026 budget.equals(card.budget);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 103
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BudgetPanel.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " * Panel containing the budget status."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "public class BudgetPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String FXML \u003d \"BudgetPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(BudgetPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private ListView\u003cBudget\u003e budgetView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    public BudgetPanel(ObservableList\u003cBudget\u003e budgetList, Consumer\u003cBudget\u003e setBudget) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetView.setItems(budgetList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetView.setCellFactory(listView -\u003e new BudgetListViewCell());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetView.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            logger.fine(\"Budget changed to : \u0027\" + newValue + \"\u0027\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            setBudget.accept(newValue);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        budget.addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            logger.fine(\"Budget changed to: \" + newValue);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            // Don\u0027t modify selection if we are already selecting the selected expense,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            // otherwise we would have an infinite loop."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            if (Objects.equals(budgetView.getSelectionModel().getSelectedItem(), newValue)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //                return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            if (newValue \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //                budgetView.getSelectionModel().clearSelection();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //                int index \u003d budgetView.getItems().indexOf(newValue);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //                budgetView.scrollTo(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //                budgetView.getSelectionModel().clearAndSelect(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Budget} using a {@code ExpenseCard}."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    class BudgetListViewCell extends ListCell\u003cBudget\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        protected void updateItem(Budget budget, boolean empty) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            super.updateItem(budget, empty);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            if (empty || budget \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                setGraphic(new BudgetCard(getIndex() + 1, budget).getRoot());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommandBox.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private static int tabCount \u003d 0; // count for \"tab\" pressed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cString\u003e history;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private ListElementPointer historySnapshot;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    // Commands end with white space"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private String[] keywords \u003d {\"add/ \", \"delete/ \", \"report \", \"list \", \"help \", \"t/\"};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandBox(CommandExecutor commandExecutor, List\u003cString\u003e history) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.history \u003d history;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        historySnapshot \u003d new ListElementPointer(history);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Find set of similar prefix keywords."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * @param partOfString user enters prefix"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * @param strings      keywords checklist"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * @return set of same prefix keywords."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private static String[] findString(String partOfString, String[] strings) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        if (partOfString.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            // partOfString is null, return empty array"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            return new String[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        // for each elements in strings, compare with part of the string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        for (int i \u003d 0; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            if (partOfString.length() \u003e strings[i].length()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            } else if (partOfString.equals(strings[i].substring(0, partOfString.trim().length()))) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                result.add(strings[i]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        return result.toArray(new String[result.size()]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the key press event, {@code keyEvent}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleKeyPress(KeyEvent keyEvent) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (keyEvent.getCode()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        case UP:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            // As up and down buttons will alter the position of the caret,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            // consuming it causes the caret\u0027s position to remain unchanged"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            navigateToPreviousInput();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case DOWN:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            navigateToNextInput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        case TAB:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            autoCompleteText();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            // let JavaFx handle the keypress"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * auto complete text."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private void autoCompleteText() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        String[] inputString \u003d commandTextField.getText().split(\" \"); //split with white space"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        String partOfString \u003d inputString[inputString.length - 1]; // get the last element of input string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        String[] results \u003d findString(partOfString, keywords);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        for (int i \u003d 0; i \u003c inputString.length - 1; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            /* group user inputs */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            stringBuilder.append(inputString[i].trim());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            stringBuilder.append(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        if (results.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            /* if result is null, nothing match */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            stringBuilder.append(inputString[inputString.length - 1]); // adds back last element of input string"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            if (tabCount \u003e\u003d results.length) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                tabCount \u003d 0; // reset tabCount when tabCount bigger than match keywords number"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                stringBuilder.append(results[tabCount]); // adds found keyword"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                stringBuilder.append(results[tabCount]); // adds found keyword"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        commandTextField.requestFocus(); // set focus back to the textfield"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        commandTextField.setText(stringBuilder.toString()); // updates the textfield"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        commandTextField.positionCaret(stringBuilder.length()); // set caret after the new text"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        tabCount++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the text field with the previous input in {@code historySnapshot},"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * if there exists a previous input in {@code historySnapshot}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private void navigateToPreviousInput() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assert historySnapshot !\u003d null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!historySnapshot.hasPrevious()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        replaceText(historySnapshot.previous());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the text field with the next input in {@code historySnapshot},"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * if there exists a next input in {@code historySnapshot}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    private void navigateToNextInput() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        assert historySnapshot !\u003d null;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!historySnapshot.hasNext()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        replaceText(historySnapshot.next());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets {@code CommandBox}\u0027s text field with {@code text} and"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * positions the caret to the end of the {@code text}."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    private void replaceText(String text) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.setText(text);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.positionCaret(commandTextField.getText().length());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            commandExecutor.execute(commandTextField.getText());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            initHistory();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            historySnapshot.next();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            initHistory();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes the history snapshot."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initHistory() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        historySnapshot \u003d new ListElementPointer(history);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        // add an empty string to represent the most-recent end of historySnapshot, to be shown to"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        // the user if she tries to navigate past the most-recent end of the historySnapshot."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        historySnapshot.add(\"\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "         * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 65,
      "-": 152
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ExpenseCard.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExpenseCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ExpenseCard.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"ExpenseListCard.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String[] TAG_COLOR_STYLES \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "        { \"turquoise\", \"orange\", \"yellow\", \"green\", \"black\", \"blue\", \"beige\", \"pink\", \"white\", \"grey\" };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public final Expense expense;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label cost;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpenseCard(Expense expense, int displayedIndex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        this.expense \u003d expense;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        name.setText(expense.getItem().getName().name);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        cost.setText(String.format(\"Cost: %d $\", expense.getItem().getPrice().getAmount()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/mm/yyyy\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        date.setText(expense.getDate().toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        initialiseTags(expense);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the color style for {@code tagName}\u0027s label."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getTagColorStyleFor(String tagName) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        // generate a random color from the hash code of the tag so the color remain consistent"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        // between different runs of the program while still making it random enough between tags."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return TAG_COLOR_STYLES[Math.abs(tagName.hashCode()) % TAG_COLOR_STYLES.length];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the tag labels for {@code person}."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initialiseTags(Expense expense) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        expense.getItem().getTags().forEach(tag -\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            Label tagLabel \u003d new Label(tag.tagName);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            tagLabel.getStyleClass().add(getTagColorStyleFor(tag.tagName));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            tags.getChildren().add(tagLabel);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof ExpenseCard)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ExpenseCard card \u003d (ExpenseCard) other;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 expense.equals(card.expense);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 1,
      "-": 95,
      "rahulb99": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private BrowserPanel browserPanel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private PersonListPanel personListPanel;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private ExpenseListPanel expenseListPanel;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private BudgetPanel budgetPanel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane browserPlaceholder;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane personListPanelPlaceholder;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane expenseListPanelPlaceholder;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private StackPane budgetPanelPlaceholder;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        browserPanel \u003d new BrowserPanel(logic.selectedPersonProperty());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        browserPlaceholder.getChildren().add(browserPanel.getRoot());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic.selectedPersonProperty(),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                logic::setSelectedPerson);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        expenseListPanel \u003d new ExpenseListPanel(logic.getFilteredExpenseList(),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                logic.selectedExpenseProperty(), expense -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }); //TODO"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseListPanelPlaceholder.getChildren().add(expenseListPanel.getRoot());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetPanel \u003d new BudgetPanel(logic.getBudgetList(), logic::setBudget);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        budgetPanelPlaceholder.getChildren().add(budgetPanel.getRoot());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath(), logic.getAddressBook());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand, logic.getHistory());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Shows daily summary to user."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private void handleDailyReport() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            logic.execute(\"report t/daily\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Shows monthly summary to user."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private void handleMonthlyReport() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            logic.execute(\"report t/monthly\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Shows yearly summary to user."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private void handleYearlyReport() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            logic.execute(\"report t/yearly\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Shows percentage summary to user."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    private void handlePercentageReport() {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            logic.execute(\"report t/percentage\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpenseListPanel getExpenseListPanel() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        return expenseListPanel;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 57,
      "tehwenyi": 7,
      "-": 207
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonCard.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"PersonListCard.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private static final String[] TAG_COLOR_STYLES \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        { \"turquoise\", \"orange\", \"yellow\", \"green\", \"black\", \"blue\", \"beige\", \"pink\", \"white\", \"grey\" };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public final Person person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label phone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label address;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label email;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonCard(Person person, int displayedIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        name.setText(person.getName().fullName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        phone.setText(person.getPhone().value);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        address.setText(person.getAddress().value);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        email.setText(person.getEmail().value);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        initialiseTags(person);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Returns the color style for {@code tagName}\u0027s label."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private String getTagColorStyleFor(String tagName) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // generate a random color from the hash code of the tag so the color remain consistent"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // between different runs of the program while still making it random enough between tags."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        return TAG_COLOR_STYLES[Math.abs(tagName.hashCode()) % TAG_COLOR_STYLES.length];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     * Creates the tag labels for {@code person}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    private void initialiseTags(Person person) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        person.getTags().forEach(tag -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            Label tagLabel \u003d new Label(tag.tagName);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            tagLabel.getStyleClass().add(getTagColorStyleFor(tag.tagName));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            tags.getChildren().add(tagLabel);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof PersonCard)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        PersonCard card \u003d (PersonCard) other;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 person.equals(card.person);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 23,
      "-": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ReportWindow.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.Group;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.chart.AreaChart;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.chart.BarChart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.chart.CategoryAxis;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.chart.LineChart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.chart.NumberAxis;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.chart.PieChart;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.stage.Modality;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " * The Summary Window. Provides summary and chart to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "public class ReportWindow {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Display daily summary on area chart."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public void displayDailyReport() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setTitle(\"Daily Summary\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        // Creates an Area Chart"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final NumberAxis xAxis \u003d new NumberAxis(1, 31, 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final NumberAxis yAxis \u003d new NumberAxis();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final AreaChart\u003cNumber, Number\u003e areaChart \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                new AreaChart\u003cNumber, Number\u003e(xAxis, yAxis);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        areaChart.setTitle(\"Daily Summary\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        XYChart.Series seriesExpense \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.setName(\"Expense\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        yAxis.setLabel(\"Expense\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        xAxis.setLabel(\"Days\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(1, 400));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(2, 1000));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(3, 500));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(4, 800));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(5, 500));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(6, 1800));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(7, 1500));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(8, 1300));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(9, 1009));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(10, 2001));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(11, 3001));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(12, 401));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        VBox layout \u003d new VBox();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        layout.getChildren().add(areaChart);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Scene scene \u003d new Scene(layout, 800, 600);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        areaChart.getData().add(seriesExpense);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Displays monthly summary on line chart."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public void displayMonthlyReport() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setTitle(\"Monthly Summary\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        //defining the axes"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final CategoryAxis xAxis \u003d new CategoryAxis();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final NumberAxis yAxis \u003d new NumberAxis();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        xAxis.setLabel(\"Months\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        yAxis.setLabel(\"Expense\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        //creates the chart"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final LineChart\u003cString, Number\u003e lineChart \u003d new LineChart\u003c\u003e(xAxis, yAxis);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        lineChart.setTitle(\"Monthly Expense Summary\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        XYChart.Series seriesExpense \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.setName(\"Expense\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Jan\", 1230));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Feb\", 1400));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Mar\", 1500));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Apr\", 2004));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"May\", 1112));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Jun\", 2006));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Jul\", 1002));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Aug\", 1005));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Sep\", 1403));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Oct\", 1007));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Nov\", 1209));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesExpense.getData().add(new XYChart.Data(\"Dec\", 1225));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        XYChart.Series seriesBudget \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.setName(\"Budget\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Jan\", 1500));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Feb\", 1500));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Mar\", 1500));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Apr\", 1500));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"May\", 1500));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Jun\", 1500));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Jul\", 1500));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Aug\", 1500));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Sep\", 1500));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Oct\", 1500));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Nov\", 1500));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        seriesBudget.getData().add(new XYChart.Data(\"Dec\", 1500));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Scene scene \u003d new Scene(lineChart, 800, 600);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        lineChart.getData().addAll(seriesExpense, seriesBudget);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Display the proportion of income spent on different categories on pie chart."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public void displayExpensePercentageReport() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setTitle(\"Summary\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Scene scene \u003d new Scene(new Group(), 800, 600);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                FXCollections.observableArrayList("
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        new PieChart.Data(\"Food\", 13),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        new PieChart.Data(\"Daily necessities\", 25),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        new PieChart.Data(\"Electronics\", 10),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        new PieChart.Data(\"Cosmetics\", 22),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        new PieChart.Data(\"Others\", 30));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final PieChart chart \u003d new PieChart(pieChartData);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        chart.setTitle(\"Percentage of spending on each categories\"); ("
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                (Group) scene.getRoot()"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        ).getChildren().add(chart);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     * Displays yearly summary on bar chart."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    public void dispalyYearlySummary() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setTitle(\"Bar Chart Sample\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final NumberAxis yAxis \u003d new NumberAxis();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final CategoryAxis xAxis \u003d new CategoryAxis();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        final BarChart\u003cString, Number\u003e bc \u003d"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                new BarChart\u003c\u003e(xAxis, yAxis);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        bc.setTitle(\"Yearly Summary\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        yAxis.setLabel(\"Expense\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        xAxis.setLabel(\"Year\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        XYChart.Series series1 \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series1.setName(\"Saving\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series1.getData().add(new XYChart.Data(\"2015\", 2521.34));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series1.getData().add(new XYChart.Data(\"2016\", 2348.82));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series1.getData().add(new XYChart.Data(\"2017\", 1040));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series1.getData().add(new XYChart.Data(\"2018\", 3207.15));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series1.getData().add(new XYChart.Data(\"2019\", 1320));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        XYChart.Series series2 \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series2.setName(\"Expense\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series2.getData().add(new XYChart.Data(\"2015\", 25601.34));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series2.getData().add(new XYChart.Data(\"2016\", 20148.82));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series2.getData().add(new XYChart.Data(\"2017\", 10000));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series2.getData().add(new XYChart.Data(\"2018\", 35407.15));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series2.getData().add(new XYChart.Data(\"2019\", 12000));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        XYChart.Series series3 \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series3.setName(\"Budget\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series3.getData().add(new XYChart.Data(\"2015\", 25610.34));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series3.getData().add(new XYChart.Data(\"2016\", 21480.82));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series3.getData().add(new XYChart.Data(\"2017\", 10600));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series3.getData().add(new XYChart.Data(\"2018\", 35497.15));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        series3.getData().add(new XYChart.Data(\"2019\", 12500));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        Scene scene \u003d new Scene(bc, 800, 600);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        bc.getData().addAll(series1, series2, series3);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 187
    }
  },
  {
    "path": "src/main/resources/view/BudgetListCard.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.paint.*?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003cHBox fx:id\u003d\"cardPane\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/2.2\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"budgetTitle\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        \u003cminWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "          \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "          \u003cDouble fx:value\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"budgetedAmount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$budgetedAmount\" textFill\u003d\"#9f9f9f\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDate\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        \u003ctextFill\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "          \u003cColor blue\u003d\"0.625\" green\u003d\"0.625\" red\u003d\"0.625\" fx:id\u003d\"x1\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        \u003c/textFill\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDate\" textFill\u003d\"$x1\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"period\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$period\" textFill\u003d\"$x1\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"currentStatus\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        \u003cminWidth\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "          \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "          \u003cDouble fx:value\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"remainingAmount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remainingAmount\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "      \u003cLabel fx:id\u003d\"remainingDays\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remainingDays\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 51
    }
  },
  {
    "path": "src/main/resources/view/BudgetPanel.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    \u003cListView fx:id\u003d\"budgetView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 8
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".background {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #383838; /* Used in the default.html file */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #555555;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ".label-bright {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ".label-header {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 32pt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane .tab-header-area {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-min-height: 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-max-height: 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-base: #1d1d1d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-control-inner-background: #1d1d1d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-cell-border-color: transparent;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-header-border-color: transparent;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header-background {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header, .table-view .filler {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-size: 35;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0 0 1 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        derive(-fx-base, 80%)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0 10 1 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header .label {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 20pt;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-alignment: center-left;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view:focused .table-row-cell:filled:focused:selected {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane:horizontal .split-pane-divider {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: transparent transparent transparent #4d4d4d;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ".list-view {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-label-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-graphic-text-gap : 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:even {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3c3e3f;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:odd {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #515658;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #424d5f;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected #cardPane {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #3e7b91;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell .label {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_big_label {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 16px;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_small_label {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13px;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ".stack-pane {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ".pane-with-border {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-border-color: derive(#1d1d1d, 10%);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-border-top-width: 1px;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display .label {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: black !important;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar .label {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 4px;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-pref-height: 30px;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: derive(#1d1d1d, 25%);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border .label {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane .stack-pane {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu .label {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar .label {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ".menu .left-container {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: black;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": " * Metro style Push Button"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": " * Author: Pedro Duque Vieira"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": " * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ".button {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5 22 5 22;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #e2e2e2;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 2;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d8d8d8;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0 0 0 0, 0, 1, 2;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ".button:hover {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ".button:pressed, .button:default:hover:pressed {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-background-color: white;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-text-fill: #1d1d1d;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ".button:focused {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white, white;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1, 1;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-style: solid, segments(1, 1);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 0, 0;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 1 1 1 1, 0;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ".button:disabled, .button:default:disabled {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.4;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default:hover {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(-fx-focus-color, 30%);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.button-bar \u003e *.container {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.label.content {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14px;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-weight: bold;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 25%);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel *.label {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-fill: white;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 3;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 8 1 8;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "#cardPane {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTypeLabel {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11px;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #F70D1A;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTextField {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent #383838 transparent #383838;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #383838 #383838 #ffffff #383838;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "#filterField, #personListPanel, #personWebpage {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "#resultDisplay .content {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent, #383838, transparent, #383838;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "#tags {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-hgap: 7;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-vgap: 3;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "#tags .label {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 3 1 3;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 2;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 2;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .turquoise {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: #40E0D0;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .orange {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: orange;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .yellow {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: yellow;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .green {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: green;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .black {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: black;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .blue {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: blue;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .beige {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: #F5F5DC;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .pink {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: pink;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .white {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "#tags .grey {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "    -fx-background-color: grey;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 50,
      "-": 350
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.SplitPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "         title\u003d\"ePiggy\" minWidth\u003d\"750\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cVBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rahulb99"
        },
        "content": "                                  onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Report\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"summaryMenuItem_daily\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  onAction\u003d\"#handleDailyReport\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  text\u003d\"Daily Report\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"summaryMenuItem_monthly\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  onAction\u003d\"#handleMonthlyReport\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  text\u003d\"Monthly Report\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"summaryMenuItem_yearly\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  onAction\u003d\"#handleYearlyReport\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  text\u003d\"Yearly Report\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"summaryMenuItem_percentage\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  onAction\u003d\"#handlePercentageReport\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                                  text\u003d\"Percentage Report\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cSplitPane id\u003d\"splitPane\" fx:id\u003d\"splitPane\" dividerPositions\u003d\"0.4\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" SplitPane.resizableWithParent\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cVBox fx:id\u003d\"expenseList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" SplitPane.resizableWithParent\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"expenseListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    \u003cVBox fx:id\u003d\"budgetList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" SplitPane.resizableWithParent\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"budgetPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"browserPlaceholder\" prefWidth\u003d\"340\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 19,
      "tehwenyi": 6,
      "-": 70,
      "rahulb99": 2
    }
  },
  {
    "path": "src/main/resources/view/SummaryWindow.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.chart.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.chart.AreaChart?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003cBorderPane fx:id\u003d\"default_expense_chart\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    \u003cbottom\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        \u003cTextArea fx:id\u003d\"command_text_area\" prefHeight\u003d\"86.0\" prefWidth\u003d\"600.0\" promptText\u003d\"Enter command\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    \u003c/bottom\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    \u003ccenter\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        \u003cAreaChart fx:id\u003d\"Expense_area_chart\" title\u003d\"Expense chart\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            \u003cxAxis\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                \u003cCategoryAxis label\u003d\"Date\" side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            \u003cyAxis\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                \u003cNumberAxis label\u003d\"Expense\" side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "            \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        \u003c/AreaChart\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "    \u003c/center\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 27
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code AddCommand}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandIntegrationTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandHistory commandHistory \u003d new CommandHistory();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_newPerson_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.addPerson(validPerson);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.commitAddressBook();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new AddCommand(validPerson), model, commandHistory,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInList \u003d model.getAddressBook().getPersonList().get(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(new AddCommand(personInList), model, commandHistory,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "                AddCommand.MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 1,
      "-": 48
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Allowance;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Goal;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Savings;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandHistory commandHistory \u003d new CommandHistory();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        new AddCommand(null);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_personAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub, commandHistory);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(EMPTY_COMMAND_HISTORY, commandHistory);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() throws Exception {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(validPerson);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(CommandException.class);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        thrown.expectMessage(AddCommand.MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        addCommand.execute(modelStub, commandHistory);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommand \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addBobCommand \u003d new AddCommand(bob);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addExpense(Expense expense) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addAllowance(Allowance allowance) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cExpense\u003e getFilteredExpenseList() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyProperty\u003cExpense\u003e selectedExpenseProperty() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void setBudget(Budget budget) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void addBudget(int index, Budget budget) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void deleteBudgetAtIndex(int index) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public SimpleObjectProperty\u003cBudget\u003e getBudget() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public ObservableList\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public int getCurrentBudgetIndex() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public boolean hasBudget() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        public SimpleObjectProperty\u003cSavings\u003e getSavings() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        public SimpleObjectProperty\u003cGoal\u003e getGoal() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setGoal(Goal goal) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setSelectedExpense(Expense expense) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBook(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void setCurrentBudget(Budget editedBudget) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public ObservableList\u003cBudget\u003e getFilteredBudgetList() {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        public void updateFilteredBudgetList(Predicate\u003cBudget\u003e predicate) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean canUndoAddressBook() {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean canRedoAddressBook() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        public void undoAddressBook() {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        public void redoAddressBook() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        public void commitAddressBook() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyProperty\u003cPerson\u003e selectedPersonProperty() {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        public Person getSelectedPerson() {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setSelectedPerson(Person person) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that contains a single person."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubWithPerson extends ModelStub {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Person person;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubWithPerson(Person person) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            this.person \u003d person;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.person.isSamePerson(person);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that always accept the person being added."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubAcceptingPersonAdded extends ModelStub {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            return personsAdded.stream().anyMatch(person::isSamePerson);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            personsAdded.add(person);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        public void commitAddressBook() {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            // called by {@code AddCommand#execute()}"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddressBook();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 1,
      "tehwenyi": 50,
      "-": 298
    }
  },
  {
    "path": "src/test/java/seedu/address/model/AddressBookTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ALICE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.InvalidationListener;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.SimpleIntegerProperty;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.value.ObservableValue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Budget;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.Expense;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.epiggy.item.Item;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicatePersonException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookTest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBook addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Collections.emptyList(), addressBook.getPersonList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.resetData(null);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_withValidReadOnlyAddressBook_replacesData() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook newData \u003d getTypicalAddressBook();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.resetData(newData);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(newData, addressBook);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        // Two persons with the same identity fields"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStub newData \u003d new AddressBookStub(newPersons);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(DuplicatePersonException.class);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.resetData(newData);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.hasPerson(null);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personNotInAddressBook_returnsFalse() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addressBook.hasPerson(ALICE));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addressBook.hasPerson(ALICE));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addressBook.hasPerson(editedAlice));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(UnsupportedOperationException.class);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.getPersonList().remove(0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addListener_withInvalidationListener_listenerAdded() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleIntegerProperty counter \u003d new SimpleIntegerProperty();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidationListener listener \u003d observable -\u003e counter.set(counter.get() + 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addListener(listener);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, counter.get());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeListener_withInvalidationListener_listenerRemoved() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleIntegerProperty counter \u003d new SimpleIntegerProperty();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidationListener listener \u003d observable -\u003e counter.set(counter.get() + 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addListener(listener);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.removeListener(listener);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, counter.get());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class AddressBookStub implements ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        private final ObservableList\u003cExpense\u003e expenses \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        private final ObservableList\u003cItem\u003e items \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableValue\u003cBudget\u003e budget; //TODO"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStub(Collection\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            this.persons.setAll(persons);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cExpense\u003e getExpenseList() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            return FXCollections.unmodifiableObservableList(expenses);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cItem\u003e getItemList() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            return FXCollections.unmodifiableObservableList(items);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //        public ObservableValue\u003cBudget\u003e getBudget() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        //            return budget;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "        // }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            return persons;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addListener(InvalidationListener listener) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        public void removeListener(InvalidationListener listener) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 4,
      "-": 159
    }
  },
  {
    "path": "src/test/java/systemtests/AddCommandSystemTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package systemtests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ALICE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BOB;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.CARL;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.HOON;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.IDA;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonUtil;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandSystemTest extends AddressBookSystemTest {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void add() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        Model model \u003d getModel();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        /* ------------------------ Perform add operations on the shown unfiltered list ----------------------------- */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a person without tags to a non-empty address book, command with leading spaces and trailing spaces"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "         * -\u003e added"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Person toAdd \u003d AMY;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        String command \u003d \"   \" + AddCommand.COMMAND_WORD + \"  \" + NAME_DESC_AMY + \"  \" + PHONE_DESC_AMY + \" \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                + EMAIL_DESC_AMY + \"   \" + ADDRESS_DESC_AMY + \"   \" + TAG_DESC_FRIEND + \" \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, toAdd);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: undo adding Amy to the list -\u003e Amy deleted */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d UndoCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, model, expectedResultMessage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: redo adding Amy to the list -\u003e Amy added again */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d RedoCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        model.addPerson(toAdd);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, model, expectedResultMessage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a person with all fields same as another person in the address book except name -\u003e added */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d new PersonBuilder(AMY).withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, toAdd);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a person with all fields same as another person in the address book except phone and email"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "         * -\u003e added"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d new PersonBuilder(AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d PersonUtil.getAddCommand(toAdd);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, toAdd);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add to empty address book -\u003e added */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteAllPersons();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(ALICE);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a person with tags, command with parameters in random order -\u003e added */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d BOB;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + NAME_DESC_BOB"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_HUSBAND + EMAIL_DESC_BOB;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, toAdd);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a person, missing tags -\u003e added */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(HOON);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        /* -------------------------- Perform add operation on the shown filtered list ------------------------------ */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: filters the person list before adding -\u003e added */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonsWithName(KEYWORD_MATCHING_MEIER);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(IDA);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        /* ------------------------ Perform add operation while a person card is selected --------------------------- */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: selects first card in the person list, add a person -\u003e added, card selection remains unchanged */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        selectPerson(Index.fromOneBased(1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(CARL);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        /* ----------------------------------- Perform invalid add operations --------------------------------------- */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a duplicate person -\u003e rejected */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d PersonUtil.getAddCommand(HOON);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a duplicate person except with different phone -\u003e rejected */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d new PersonBuilder(HOON).withPhone(VALID_PHONE_BOB).build();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d PersonUtil.getAddCommand(toAdd);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a duplicate person except with different email -\u003e rejected */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d new PersonBuilder(HOON).withEmail(VALID_EMAIL_BOB).build();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d PersonUtil.getAddCommand(toAdd);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a duplicate person except with different address -\u003e rejected */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d new PersonBuilder(HOON).withAddress(VALID_ADDRESS_BOB).build();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d PersonUtil.getAddCommand(toAdd);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: add a duplicate person except with different tags -\u003e rejected */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d PersonUtil.getAddCommand(HOON) + \" \" + PREFIX_TAG.getPrefix() + \"friends\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_EXPENSE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: missing name -\u003e rejected */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: missing phone -\u003e rejected */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: missing email -\u003e rejected */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: missing address -\u003e rejected */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: invalid keyword -\u003e rejected */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d \"adds \" + PersonUtil.getPersonDetails(toAdd);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, Messages.MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: invalid name -\u003e rejected */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + INVALID_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: invalid phone -\u003e rejected */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: invalid email -\u003e rejected */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + INVALID_EMAIL_DESC + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: invalid address -\u003e rejected */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + INVALID_ADDRESS_DESC;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Case: invalid tag -\u003e rejected */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                + INVALID_TAG_DESC;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(command, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the {@code AddCommand} that adds {@code toAdd} to the model and asserts that the,\u003cbr\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     * 1. Command box displays an empty string.\u003cbr\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * 2. Command box has the default style class.\u003cbr\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * 3. Result display box displays the success message of executing {@code AddCommand} with the details of"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code toAdd}.\u003cbr\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     * 4. {@code Storage} and {@code PersonListPanel} equal to the corresponding components in"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * the current model added with {@code toAdd}.\u003cbr\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     * 5. Browser url and selected card remain unchanged.\u003cbr\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * 6. Status bar\u0027s sync status changes.\u003cbr\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifications 1, 3 and 4 are performed by"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandSuccess(Person toAdd) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(PersonUtil.getAddCommand(toAdd), toAdd);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     * Performs the same verification as {@code assertCommandSuccess(Person)}. Executes {@code command}"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "     * instead."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AddCommandSystemTest#assertCommandSuccess(Person)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandSuccess(String command, Person toAdd) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d getModel();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.addPerson(toAdd);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedResultMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, toAdd);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, expectedModel, expectedResultMessage);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     * Performs the same verification as {@code assertCommandSuccess(String, Person)} except asserts that"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     * the,\u003cbr\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     * 2. {@code Storage} and {@code PersonListPanel} equal to the corresponding components in"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code expectedModel}.\u003cbr\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AddCommandSystemTest#assertCommandSuccess(String, Person)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(command);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        assertSelectedCardUnchanged();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandBoxShowsDefaultStyle();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        assertStatusBarUnchangedExceptSyncStatus();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes {@code command} and asserts that the,\u003cbr\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "     * 1. Command box displays {@code command}.\u003cbr\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "     * 2. Command box has the error style class.\u003cbr\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * 4. {@code Storage} and {@code PersonListPanel} remain unchanged.\u003cbr\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifications 1, 3 and 4 are performed by"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yunjun199321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String command, String expectedResultMessage) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d getModel();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(command);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        assertSelectedCardUnchanged();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandBoxShowsErrorStyle();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        assertStatusBarUnchanged();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yunjun199321": 9,
      "-": 242
    }
  },
  {
    "path": "src/test/java/systemtests/HelpCommandSystemTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package systemtests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "import org.junit.Ignore;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.GuiRobot;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.HelpWindowHandle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.SelectCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.BrowserPanel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.StatusBarFooter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * A system test class for the help window, which contains interaction with other UI components."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tehwenyi"
        },
        "content": "@Ignore"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommandSystemTest extends AddressBookSystemTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"ATTENTION!!!! : On some computers, this test may fail when run on \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"non-headless mode as FxRobot#clickOn(Node, MouseButton...) clicks on the wrong location. We suspect \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"that this is a bug with TestFX library that we are using. If this test fails, you have to run your \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"tests on headless mode. See UsingGradle.adoc on how to do so.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final GuiRobot guiRobot \u003d new GuiRobot();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void openHelpWindow() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        //use accelerator"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        getCommandBox().click();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainMenu().openHelpWindowUsingAccelerator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHelpWindowOpen();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        getResultDisplay().click();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainMenu().openHelpWindowUsingAccelerator();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHelpWindowOpen();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        getPersonListPanel().click();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainMenu().openHelpWindowUsingAccelerator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHelpWindowOpen();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        getBrowserPanel().click();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainMenu().openHelpWindowUsingAccelerator();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHelpWindowNotOpen();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        //use menu button"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainMenu().openHelpWindowUsingMenu();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHelpWindowOpen();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        //use command box"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(HelpCommand.COMMAND_WORD);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHelpWindowOpen();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // open help window and give it focus"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(HelpCommand.COMMAND_WORD);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainWindowHandle().focus();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        // assert that while the help window is open the UI updates correctly for a command execution"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", getCommandBox().getInput());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandBoxShowsDefaultStyle();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(HelpCommand.SHOWING_HELP_MESSAGE, getResultDisplay().getText());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(BrowserPanel.DEFAULT_PAGE, getBrowserPanel().getLoadedUrl());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertListMatching(getPersonListPanel(), getModel().getFilteredPersonList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // assert that the status bar too is updated correctly while the help window is open"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // note: the select command tested above does not update the status bar"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(StatusBarFooter.SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void help_multipleCommands_onlyOneHelpWindowOpen() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainMenu().openHelpWindowUsingMenu();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainWindowHandle().focus();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainMenu().openHelpWindowUsingAccelerator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainWindowHandle().focus();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(HelpCommand.COMMAND_WORD);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, guiRobot.getNumberOfWindowsShown(HelpWindowHandle.HELP_WINDOW_TITLE));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the help window is open, and closes it after checking."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertHelpWindowOpen() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        guiRobot.pauseForHuman();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        new HelpWindowHandle(guiRobot.getStage(HelpWindowHandle.HELP_WINDOW_TITLE)).close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        getMainWindowHandle().focus();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the help window isn\u0027t open."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertHelpWindowNotOpen() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tehwenyi": 2,
      "-": 107
    }
  }
]
