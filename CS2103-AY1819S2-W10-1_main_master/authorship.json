[
  {
    "path": "README.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d README"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "https://travis-ci.org/CS2103-AY1819S2-W10-1/main[image:https://travis-ci.org/CS2103-AY1819S2-W10-1/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "https://ci.appveyor.com/project/thomastanck/main[image:https://ci.appveyor.com/api/projects/status/k99mmh3peur0nef5?svg\u003dtrue[Build Status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "https://coveralls.io/github/CS2103-AY1819S2-W10-1/main?branch\u003dmaster[image:https://coveralls.io/repos/github/CS2103-AY1819S2-W10-1/main/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "https://www.codacy.com/app/thomastanck/main?utm_source\u003dgithub.com\u0026utm_medium\u003dreferral\u0026utm_content\u003dCS2103-AY1819S2-W10-1/main\u0026utm_campaign\u003dBadge_Grade[image:https://api.codacy.com/project/badge/Grade/cb4fa0d78e424d9d9eb3faf34102e157[Codacy Badge]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* README helps you discover, curate and read more content you care about in less time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* *All-in-one*: Follow web feeds and bookmark web pages - save interesting articles, cooking recipes, song lyrics, or anything else you come across while browsing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* *Read Anywhere*: Read offline, anywhere and anytime you want - all the links you save are downloaded onto your personal computer so you\u0027ll never lose them."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* *Stay Focused*: Consume more content, more comfortably - reading view strips away clutter like buttons and ads for better readability."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* *Keep Organized*: Curate your content - organize and categorize your feeds and links and find them quickly with powerful search, sort and filter functionality."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* *Fast*: Never leave your keyboard - single-shot commands and keyboard shortcuts let you do more in less time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* You\u0027ll love README if you\u0027re a heavy consumer of web content but don\u0027t have regular internet access, whether because you often head off on long flights or you love working in cafes, and refuse to pay exorbitant prices for Internet access anywhere."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* This is an integrated bookmark manager and feed reader desktop application for saving web pages and feeds to read later on your personal computer. It has a GUI but most of the user interactions happen using a CLI (Command Line Interface)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* This application is based on the AddressBook-Level4 project created by the SE-EDU initiative at https://github.com/se-edu/."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "* Libraries used: https://rometools.github.io/rome/[ROME], https://github.com/chimbori/crux[Crux], https://github.com/TestFX/TestFX[TestFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/google/guava[Guava], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "rlrh": 1,
      "-": 40
    }
  },
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/4.8.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027de.gafertp.plantuml\u0027 version \u00271.2.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00272.0.3\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "apply plugin: \u0027de.gafertp.plantuml\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "if (JavaVersion.current() \u003d\u003d JavaVersion.VERSION_1_10"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 System.getProperty(\u0027os.name\u0027).startsWith(\u0027Windows\u0027)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.warn(\u0027\u0027\u0027\\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        *********************************** WARNING **********************************"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        You seem to be running Gradle with JDK 10 on Windows."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        JDK 10 on Windows will fail to run tests in headless mode due to a JavaFX bug."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        You are highly recommended to use JDK 9!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027\u0027\u0027.stripIndent())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.MainApp\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_1_9"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_1_9"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    maven { url \"https://jitpack.io\" }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    String testFxVersion \u003d \u00274.0.12-alpha\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.1.0\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    compile group: \u0027com.github.chimbori\u0027, name:\u0027crux\u0027, version: \u00272.0.2\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.google.guava\u0027, name: \u0027guava\u0027, version: \u002719.0\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    implementation group: \u0027com.rometools\u0027, name: \u0027rome\u0027, version: \u00271.12.0\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    implementation group: \u0027commons-codec\u0027, name: \u0027commons-codec\u0027, version: \u00271.9\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027junit\u0027, name: \u0027junit\u0027, version: \u00274.12\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: testFxVersion, {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        exclude group: \u0027org.testfx\u0027, module: \u0027testfx-internal-java8\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-junit\u0027, version: testFxVersion"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027testfx-internal-java9\u0027, version: testFxVersion"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-9+181\u0027"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group:\u0027org.junit.vintage\u0027, name:\u0027junit-vintage-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "task wrapper(type: Wrapper) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    gradleVersion \u003d \u00274.8.1\u0027"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories \u003d files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories \u003d  files(sourceSets.main.output)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData \u003d files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories \u003d files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "task(guiTests)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "task(nonGuiTests)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "// Run `test` task if `guiTests` or `nonGuiTests` is specified"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "guiTests.dependsOn test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "nonGuiTests.dependsOn test"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "task(allTests)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "// `allTests` implies both `guiTests` and `nonGuiTests`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "allTests.dependsOn guiTests"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "allTests.dependsOn nonGuiTests"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    systemProperty \u0027testfx.setup.timeout\u0027, \u002760000\u0027"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    doFirst {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean runGuiTests \u003d gradle.taskGraph.hasTask(guiTests)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean runNonGuiTests \u003d gradle.taskGraph.hasTask(nonGuiTests)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!runGuiTests \u0026\u0026 !runNonGuiTests) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            runGuiTests \u003d true"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            runNonGuiTests \u003d true"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        if (runNonGuiTests) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            test.include \u0027seedu/address/**\u0027"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        if (runGuiTests) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            test.include \u0027systemtests/**\u0027"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            test.include \u0027seedu/address/ui/**\u0027"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!runGuiTests) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            test.exclude \u0027seedu/address/ui/**\u0027"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "task headless {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    doLast {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        println \u0027Setting headless mode properties.\u0027"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        test {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            systemProperties \u003d ["
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027testfx.robot\u0027: \u0027glass\u0027,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027testfx.headless\u0027: \u0027true\u0027,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027prism.order\u0027: \u0027sw\u0027,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027prism.text\u0027: \u0027t2k\u0027,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            ]"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "plantUml {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    render input: \u0027docs/diagrams/*.puml\u0027, output: \"${project.buildDir.absolutePath}/docs/html5/images/\", format: \u0027png\u0027"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "// Makes sure that headless properties are set before running tests"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "test.mustRunAfter headless"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-name\u0027: \u0027README\u0027,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/CS2103-AY1819S2-W10-1/main\u0027,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "// Copies files needed for network tests into the generated HTML files to"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "// use github pages for network testing."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "// This is needed as asciidoctor does not deploy non-asciidoc blobs."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "task copyNetworktestFiles(type: Copy) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    from \"${asciidoctor.sourceDir}/networktests\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/networktests\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "asciidoctor.dependsOn copyNetworktestFiles"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "task deployOfflineDocs(type: Copy) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    into(\u0027src/main/resources/docs\u0027)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    from (\"${asciidoctor.outputDir}/html5\") {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        include \u0027stylesheets/*\u0027"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        include \u0027images/*\u0027"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        include \u0027HelpWindow.html\u0027"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "deployOfflineDocs.dependsOn asciidoctor"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "processResources.dependsOn deployOfflineDocs"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027headless\u0027, \u0027allTests\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "rlrh": 3,
      "qjqqyy": 11,
      "-": 243
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d README - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/CS2103-AY1819S2-W10-1/main/tree/master"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "By: `CS2103-AY1819S2-W10-1`      Since: `Jan 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Prerequisites"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ". *JDK `9`* or later"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "JDK `10` on Windows will fail to run tests in \u003c\u003cUsingGradle#Running-Tests, headless mode\u003e\u003e due to a https://github.com/javafxports/openjdk-jfx/issues/66[JavaFX bug]."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Windows developers are highly recommended to use JDK `9`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ". *IntelliJ* IDE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "IntelliJ by default has Gradle and JavaFx plugins installed. +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Setting up the project in your computer"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork this repo, and clone the fork to your computer"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ". Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `New...` and find the directory of the JDK"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Import Project`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ". Locate the `build.gradle` file and select it. Click `OK`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Open as Project`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK` to accept the default settings"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message. +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "This will generate all resources required by the application and tests."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ". Open link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow.java`] and check for any code errors"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".. Due to an ongoing https://youtrack.jetbrains.com/issue/IDEA-189060[issue] with some of the newer versions of IntelliJ, code errors may be detected even if the project can be built and run successfully"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".. To resolve this, place your cursor over any of the code section highlighted in red. Press kbd:[ALT + ENTER], and select `Add \u0027--add-modules\u003d...\u0027 to module compiler options` for each error"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ". Repeat this for the test folder as well (e.g. check link:{repoURL}/src/test/java/seedu/address/ui/HelpWindowTest.java[`HelpWindowTest.java`] for code errors, and if so, resolve it the same way)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Verifying the setup"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ". Run the `seedu.address.MainApp` and try a few commands"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configurations to do before writing code"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Configuring the coding style"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ". Select `Editor` \u003e `Code Style` \u003e `Java`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ". Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Updating documentation to match your fork"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "After forking the repo, the documentation will still have the SE-EDU branding and refer to the `se-edu/addressbook-level4` repo."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "If you plan to develop this fork as a separate product (i.e. instead of contributing to `se-edu/addressbook-level4`), you should do the following:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ". Configure the \u003c\u003cDocs-SiteWideDocSettings, site-wide documentation settings\u003e\u003e in link:{repoURL}/build.gradle[`build.gradle`], such as the `site-name`, to suit your own project."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ". Replace the URL in the attribute `repoURL` in link:{repoURL}/docs/DeveloperGuide.adoc[`DeveloperGuide.adoc`] and link:{repoURL}/docs/UserGuide.adoc[`UserGuide.adoc`] with the URL of your fork."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Setting up CI"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Getting started with coding"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "When you are ready to start coding,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "2. Take a look at \u003c\u003cGetStartedProgramming\u003e\u003e."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "image::Architecture.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has only one class called link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "image::SDforDeletePerson.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `BrowserPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeletePersonSdForLogic.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "image:ModelClassBetterOopDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Undo/Redo feature"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoStartingStateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand1StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand2StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoExecuteUndoStateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoSequenceDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand3StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand4StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoActivityDiagram.png[width\u003d\"650\"]"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "We use asciidoc for writing documentation."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Editing Documentation"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Publishing Documentation"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Converting Documentation to PDF format"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ".Saving documentation as PDF files in Chrome"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "image::chrome_save_as_pdf.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-SiteWideDocSettings]]"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Site-wide Documentation Settings"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "The link:{repoURL}/build.gradle[`build.gradle`] file specifies some project-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how all documentation files within this project are rendered."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in the `build.gradle` file will use their *default value*, if any."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ".List of site-wide attributes"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-name`"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "|The name of the website."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "If set, the name will be displayed near the top of the page."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-githuburl`"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "|URL to the site\u0027s repository on https://github.com[GitHub]."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "Setting this will add a \"View on GitHub\" link in the navigation bar."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-seedu`"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "|Define this attribute if the project is an official SE-EDU project."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "This will render the SE-EDU navigation bar at the top of the page, and add some SE-EDU-specific navigation items."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-PerFileDocSettings]]"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Per-file Documentation Settings"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "Each `.adoc` file may also specify some file-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how the file is rendered."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "Asciidoctor\u0027s https://asciidoctor.org/docs/user-manual/#builtin-attributes[built-in attributes] may be specified and used as well."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in `.adoc` files will use their *default value*, if any."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ".List of per-file attributes, excluding Asciidoctor\u0027s built-in attributes"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-section`"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "|Site section that the document belongs to."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "This will cause the associated item in the navigation bar to be highlighted."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "One of: `UserGuide`, `DeveloperGuide`, ``LearningOutcomes``{asterisk}, `AboutUs`, `ContactUs`"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "_{asterisk} Official SE-EDU projects only_"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "|`no-site-header`"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "|Set this attribute to remove the site navigation bar."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Site Template"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/stylesheets[`docs/stylesheets`] are the https://developer.mozilla.org/en-US/docs/Web/CSS[CSS stylesheets] of the site."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "You can modify them to change some properties of the site\u0027s design."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/templates[`docs/templates`] controls the rendering of `.adoc` files into HTML5."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "These template files are written in a mixture of https://www.ruby-lang.org[Ruby] and http://slim-lang.com[Slim]."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "Modifying the template files in link:{repoURL}/docs/templates[`docs/templates`] requires some knowledge and experience with Ruby and Asciidoctor\u0027s API."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "You should only modify them if you need greater control over the site\u0027s layout than what stylesheets can provide."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "The SE-EDU team does not provide support for modified template files."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "[[Testing]]"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Some features require a working internet connection, and as a result some tests will require internet access to pass."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Running Tests"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "There are three ways to run tests."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "The most reliable way to run tests is the 3rd one. The first two methods might fail some GUI tests due to platform/resolution-specific idiosyncrasies."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 1: Using IntelliJ JUnit test runner*"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 2: Using Gradle*"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "* Open a console and run the command `gradlew clean allTests` (Mac/Linux: `./gradlew clean allTests`)"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 3: Using Gradle (headless)*"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "Thanks to the https://github.com/TestFX/TestFX[TestFX] library we use, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the Computer while the tests are running."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "To run tests in headless mode, open a console and run the command `gradlew clean headless allTests` (Mac/Linux: `./gradlew clean headless allTests`)"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Types of tests"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "We have two types of tests:"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ".  *GUI Tests* - These are tests involving the GUI. They include,"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": ".. _System Tests_ that test the entire App by simulating user actions on the GUI. These are in the `systemtests` package."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ".. _Unit tests_ that test the individual components. These are in `seedu.address.ui` package."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ".  *Non-GUI Tests* - These are tests not involving the GUI. They include,"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "..  _Unit tests_ targeting the lowest level methods/classes. +"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.commons.StringUtilTest`"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "..  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.storage.StorageManagerTest`"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "..  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.logic.LogicManagerTest`"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Troubleshooting Testing"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: `HelpWindowTest` fails with a `NullPointerException`.**"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: One of its dependencies, `HelpWindow.html` in `src/main/resources/docs` is missing."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Execute Gradle task `processResources`."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Build Automation"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Continuous Integration"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Coverage Reporting"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Documentation Previews"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Making a Release"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`]."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ".  Tag the repo with the version number. e.g. `v0.1`"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Managing Dependencies"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "A project often depends on third-party libraries. For example, Address Book depends on the https://github.com/FasterXML/jackson[Jackson library] for JSON parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives:"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "[loweralpha]"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ". Include those libraries in the repo (this bloats the repo size)"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ". Require developers to download those libraries manually (this creates extra work for developers)"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "[[GetStartedProgramming]]"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Suggested Programming Tasks to Get Started"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "Suggested path for new programmers:"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "1. First, add small local-impact (i.e. the impact of the change does not go beyond the component) enhancements to one component at a time. Some suggestions are given in \u003c\u003cGetStartedProgramming-EachComponent\u003e\u003e."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "2. Next, add a feature that touches multiple components to learn how to implement an end-to-end feature across all components. \u003c\u003cGetStartedProgramming-RemarkCommand\u003e\u003e explains how to go about adding such a feature."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "[[GetStartedProgramming-EachComponent]]"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Improving each component"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "Each individual exercise in this section is component-based (i.e. you would not need to modify the other components to get it to work)."
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Logic` component"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `logic`. During dog-fooding, your team realize that it is troublesome for the user to type the whole command in order to execute a command. Your team devise some strategies to help cut down the amount of typing necessary, and one of the suggestions was to implement aliases for the command words. Your job is to implement such aliases."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Logic\u003e\u003e before attempting to modify the `Logic` component."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a shorthand equivalent alias for each of the individual commands. For example, besides typing `clear`, the user can also type `c` to remove all persons in the list."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "** Just like we store each individual command word constant `COMMAND_WORD` inside `*Command.java` (e.g.  link:{repoURL}/src/main/java/seedu/address/logic/commands/FindCommand.java[`FindCommand#COMMAND_WORD`], link:{repoURL}/src/main/java/seedu/address/logic/commands/DeleteCommand.java[`DeleteCommand#COMMAND_WORD`]), you need a new constant for aliases as well (e.g. `FindCommand#COMMAND_ALIAS`)."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] is responsible for analyzing command words."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify the switch statement in link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser#parseCommand(String)`] such that both the proper command word and alias can be used to execute the same intended command."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "** Add new tests for each of the aliases that you have added."
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "** Update the user guide to document the new aliases."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/785[PR] for the full solution."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Model` component"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `model`. One day, the `logic`-in-charge approaches you for help. He wants to implement a command such that the user is able to remove a particular tag from everyone in the address book, but the model API does not support such a functionality at the moment. Your job is to implement an API method, so that your teammate can use your API to implement his command."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Model\u003e\u003e before attempting to modify the `Model` component."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a `removeTag(Tag)` method. The specified tag will be removed from everyone in the address book."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "** The link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model`] and the link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] API need to be updated."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "** Think about how you can use SLAP to design the method. Where should we place the main logic of deleting tags?"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "**  Find out which of the existing API methods in  link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] classes can be used to implement the tag removal logic. link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] allows you to update a person, and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] allows you to update the tags."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "** Implement a `removeTag(Tag)` method in link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`]. Loop through each person, and remove the `tag` from each person."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "** Add a new API method `deleteTag(Tag)` in link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`]. Your link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`] should call `AddressBook#removeTag(Tag)`."
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "** Add new tests for each of the new public methods that you have added."
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/790[PR] for the full solution."
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Ui` component"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `ui`. During a beta testing session, your team is observing how the users use your address book application. You realize that one of the users occasionally tries to delete non-existent tags from a contact, because the tags all look the same visually, and the user got confused. Another user made a typing mistake in his command, but did not realize he had done so because the error message wasn\u0027t prominent enough. A third user keeps scrolling down the list, because he keeps forgetting the index of the last person in the list. Your job is to implement improvements to the UI to solve all these problems."
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Ui\u003e\u003e before attempting to modify the `UI` component."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ". Use different colors for different tags inside person cards. For example, `friends` tags can be all in brown, and `colleagues` tags can be all in yellow."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-tag-before.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-tag-after.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "** The tag labels are created inside link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[the `PersonCard` constructor] (`new Label(tag.tagName)`). https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Label.html[JavaFX\u0027s `Label` class] allows you to modify the style of each Label, such as changing its color."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "** Use the .css attribute `-fx-background-color` to add a color."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "** You may wish to modify link:{repoURL}/src/main/resources/view/DarkTheme.css[`DarkTheme.css`] to include some pre-defined colors using css, especially if you have experience with web-based css."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "** You can modify the existing test methods for `PersonCard` \u0027s to include testing the tag\u0027s color as well."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/798[PR] for the full solution."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "*** The PR uses the hash code of the tag names to generate a color. This is deliberately designed to ensure consistent colors each time the application runs. You may wish to expand on this design to include additional features, such as allowing users to set their own tag colors, and directly saving the colors to storage, so that tags retain their colors even if the hash code algorithm changes."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] such that link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] can show a different style on error (currently it shows the same regardless of errors)."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-result-before.png[width\u003d\"200\"]"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-result-after.png[width\u003d\"200\"]"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] is raised by link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] which also knows whether the result is a success or failure, and is caught by link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] which is where we want to change the style to."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "** Refer to link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] for an example on how to display an error."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] \u0027s constructor so that users of the event can indicate whether an error has occurred."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay#handleNewResultAvailableEvent(NewResultAvailableEvent)`] to react to this event appropriately."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "** You can write two different kinds of tests to ensure that the functionality works:"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "*** The unit tests for `ResultDisplay` can be modified to include verification of the color."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "*** The system tests link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest#assertCommandBoxShowsDefaultStyle() and AddressBookSystemTest#assertCommandBoxShowsErrorStyle()`] to include verification for `ResultDisplay` as well."
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/799[PR] for the full solution."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "*** Do read the commits one at a time if you feel overwhelmed."
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify the link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to show the total number of people in the address book."
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-status-before.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "image::getting-started-ui-status-after.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/resources/view/StatusBarFooter.fxml[`StatusBarFooter.fxml`] will need a new `StatusBar`. Be sure to set the `GridPane.columnIndex` properly for each `StatusBar` to avoid misalignment!"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] needs to initialize the status bar on application start, and to update it accordingly whenever the address book is updated."
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "** Modify the constructor of link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to take in the number of persons when the application just started."
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "** Use link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter#handleAddressBookChangedEvent(AddressBookChangedEvent)`] to update the number of persons whenever there are new changes to the addressbook."
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "** For tests, modify link:{repoURL}/src/test/java/guitests/guihandles/StatusBarFooterHandle.java[`StatusBarFooterHandle`] by adding a state-saving functionality for the total number of people status, just like what we did for save location and sync status."
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "** For system tests, modify link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest`] to also verify the new total number of persons status bar."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/803[PR] for the full solution."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d `Storage` component"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are in charge of `storage`. For your next project milestone, your team plans to implement a new feature of saving the address book to the cloud. However, the current implementation of the application constantly saves the address book after the execution of each command, which is not ideal if the user is working on limited internet connection. Your team decided that the application should instead save the changes to a temporary local backup file first, and only upload to the cloud after the user closes the application. Your job is to implement a backup API for the address book storage."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "Do take a look at \u003c\u003cDesign-Storage\u003e\u003e before attempting to modify the `Storage` component."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a new method `backupAddressBook(ReadOnlyAddressBook)`, so that the address book can be saved in a fixed temporary location."
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "* Hint"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "** Add the API method in link:{repoURL}/src/main/java/seedu/address/storage/AddressBookStorage.java[`AddressBookStorage`] interface."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "** Implement the logic in link:{repoURL}/src/main/java/seedu/address/storage/StorageManager.java[`StorageManager`] and link:{repoURL}/src/main/java/seedu/address/storage/JsonAddressBookStorage.java[`JsonAddressBookStorage`] class."
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/594[PR] for the full solution."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "[[GetStartedProgramming-RemarkCommand]]"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Creating a new command: `remark`"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "By creating this command, you will get a chance to learn how to implement a feature end-to-end, touching all major components of the app."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "*Scenario:* You are a software maintainer for `addressbook`, as the former developer team has moved on to new projects. The current users of your application have a list of new feature requests that they hope the software will eventually have. The most popular request is to allow adding additional comments/notes about a particular contact, by providing a flexible `remark` field for each contact, rather than relying on tags alone. After designing the specification for the `remark` command, you are convinced that this feature is worth implementing. Your job is to implement the `remark` command."
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Description"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the remark for a person specified in the `INDEX`. +"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `remark INDEX r/[REMARK]`"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "* `remark 1 r/Likes to drink coffee.` +"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the remark for the first person to `Likes to drink coffee.`"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "* `remark 1 r/` +"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "Removes the remark for the first person."
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Step-by-step Instructions"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 1] Logic: Teach the app to accept \u0027remark\u0027 which does nothing"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s start by teaching the application how to parse a `remark` command. We will add the logic of `remark` later."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a `RemarkCommand` that extends link:{repoURL}/src/main/java/seedu/address/logic/commands/Command.java[`Command`]. Upon execution, it should just throw an `Exception`."
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to accept a `RemarkCommand`."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `RemarkCommandTest` that tests that `execute()` throws an Exception."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ". Add new test method to link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`], which tests that typing \"remark\" returns an instance of `RemarkCommand`."
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 2] Logic: Teach the app to accept \u0027remark\u0027 arguments"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s teach the application to parse arguments that our `remark` command will accept. E.g. `1 r/Likes to drink coffee.`"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify `RemarkCommand` to take in an `Index` and `String` and print those two parameters as the error message."
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `RemarkCommandParser` that knows how to parse two arguments, one index and one with prefix \u0027r/\u0027."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to use the newly implemented `RemarkCommandParser`."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify `RemarkCommandTest` to test the `RemarkCommand#equals()` method."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `RemarkCommandParserTest` that tests different boundary values"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "for `RemarkCommandParser`."
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`] to test that the correct command is generated according to the user input."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 3] Ui: Add a placeholder for remark in `PersonCard`"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s add a placeholder on all our link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] s to display a remark for each person later."
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a `Label` with any random text inside link:{repoURL}/src/main/resources/view/PersonListCard.fxml[`PersonListCard.fxml`]."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ". Add FXML annotation in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] to tie the variable to the actual label."
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/test/java/guitests/guihandles/PersonCardHandle.java[`PersonCardHandle`] so that future tests can read the contents of the remark label."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 4] Model: Add `Remark` class"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "We have to properly encapsulate the remark in our link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] class. Instead of just using a `String`, let\u0027s follow the conventional class structure that the codebase already uses by adding a `Remark` class."
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `Remark` to model component (you can copy from link:{repoURL}/src/main/java/seedu/address/model/person/Address.java[`Address`], remove the regex and change the names accordingly)."
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify `RemarkCommand` to now take in a `Remark` instead of a `String`."
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": ". Add test for `Remark`, to test the `Remark#equals()` method."
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 5] Model: Modify `Person` to support a `Remark` field"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "Now we have the `Remark` class, we need to actually use it inside link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ". Add `getRemark()` in link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": ". You may assume that the user will not be able to use the `add` and `edit` commands to modify the remarks field (i.e. the person will be created without a remark)."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/model/util/SampleDataUtil.java/[`SampleDataUtil`] to add remarks for the sample data (delete your `data/addressbook.json` so that the application will load the sample data when you launch it.)"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 6] Storage: Add `Remark` field to `JsonAdaptedPerson` class"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "We now have `Remark` s for `Person` s, but they will be gone when we exit the application. Let\u0027s modify link:{repoURL}/src/main/java/seedu/address/storage/JsonAdaptedPerson.java[`JsonAdaptedPerson`] to include a `Remark` field so that it will be saved."
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a new JSON field for `Remark`."
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": ". Fix `invalidAndValidPersonAddressBook.json`, `typicalPersonsAddressBook.json`, `validAddressBook.json` etc., such that the JSON tests will not fail due to a missing `remark` field."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 6b] Test: Add withRemark() for `PersonBuilder`"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "Since `Person` can now have a `Remark`, we should add a helper method to link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`], so that users are able to create remarks when building a link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ". Add a new method `withRemark()` for link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`]. This method will create a new `Remark` for the person that it is currently building."
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": ". Try and use the method on any sample `Person` in link:{repoURL}/src/test/java/seedu/address/testutil/TypicalPersons.java[`TypicalPersons`]."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 7] Ui: Connect `Remark` field to `PersonCard`"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "Our remark label in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] is still a placeholder. Let\u0027s bring it to life by binding it with the actual `remark` field."
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`]\u0027s constructor to bind the `Remark` field to the `Person` \u0027s remark."
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": ". Modify link:{repoURL}/src/test/java/seedu/address/ui/testutil/GuiTestAssert.java[`GuiTestAssert#assertCardDisplaysPerson(...)`] so that it will compare the now-functioning remark label."
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 8] Logic: Implement `RemarkCommand#execute()` logic"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "We now have everything set up... but we still can\u0027t modify the remarks. Let\u0027s finish it up by adding in actual logic for our `remark` command."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": ". Replace the logic in `RemarkCommand#execute()` (that currently just throws an `Exception`), with the actual logic to modify the remarks of a person."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": ". Update `RemarkCommandTest` to test that the `execute()` logic works."
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Full Solution"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "See this https://github.com/se-edu/addressbook-level4/pull/599[PR] for the step-by-step solution."
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "* has a need to manage a significant number of links"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "* is a heavy consumer of web content who follows many websites"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "* wants to download content for offline browsing because of irregular Internet access"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user personas*:"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "* Sylvia is a product manager in a Silicon Valley technology startup who often has to fly around the world for business. As an avid reader who wants to improve her work, she regularly keeps up to date with business and technology websites. With so much new content from different places everyday, she wishes she could collect them all together and focus on reading without distractions like advertisements. To be more productive on those long-haul flights, she would also like to download content to read offline."
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "* Sundaresh is a freelance app developer in Bangalore who consumes a lot of information on the Internet for work. The web browser bookmark manager just isn’t powerful or flexible enough for him to manage the huge number of links, and doesn’t help him follow his favourite software development blogs either. He likes doing work outside of home, but reliable free Internet access is hard to find and he doesn’t want to pay sky-high prices for mobile Internet, so he wishes he could easily download content for offline reading before leaving home."
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "* Joshua is a businessman in a fast-paced job environment. Always on the move, he finds himself having intermittent free time in his day traveling where he has no Internet connection. He wishes he has an offline news reader that automatically downloads news, hassle-free, from his favorite sources so he can read them on-the-go, saving his mobile data."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "*Value proposition*:"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "Discover, curate and read more content you care about in less time (than a typical mouse/GUI driven app)"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *`"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "|new user"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "|see usage instructions"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "|refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "|search the web for articles like top headlines"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "|easily and conveniently find content to save"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *`"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "|add a link with title, preview image and other helpful data automatically extracted and article content downloaded"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "|save it for later reference and view it later when I go offline"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "|offline user"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "|add a link with helpful data to be extracted and article content to be downloaded when connected to the Internet"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "|save it for later reference"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "|add tags when adding a link"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "|organise my links"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "|add a note when adding a link"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "|remember why I saved the link when I view it later"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *`"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "|list all previously saved links"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "|see what I’ve saved"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "|see roughly how long it takes to read an article"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "|choose what to read within my time contraints"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *`"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "|find a link containing keyword(s)"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "|locate links I want without having to go through the entire list"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "|sort and filter links by read status, tags and other fields"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "|locate specific links in a huge list of links easily (look for a needle in a haystack easily)"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "|edit a link"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "|write a note about it or reorganise it"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *`"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "|delete a link"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "|remove entries that I no longer need"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "|re-download content from previously saved links"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "|get the latest revision of content from links I added a long time ago"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "|mark links as read or unread"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "|better manage a huge list of links"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "|archive old links and delete their downloaded content"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "|keep old links for reference but save disk space"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *`"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "|view a saved link in a browser"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "|read the content of links I’ve saved"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "|view a saved link in a clean reading mode"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "|focus on content with no distractions"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "|change the style of reading mode"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "|consume a lot of content using a style which works best for me to reduce sensory overload"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "|follow a feed"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "|keep track of content that matters to me"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "|list feeds I’m following"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "|see what content I’m keeping track of"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "|unfollow a feed"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "|stop keeping track of content that no longer matters to me"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "|edit a feed"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "|update outdated details like feed URL and name"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *`"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "|user"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "|update links from feeds"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "|get the latest content from the feeds I’m following"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "|new user"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "|search online for feeds to follow"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "|easily and conveniently find content to keep track of"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "|import/export data and settings"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "|transfer my content to another computer or another app"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "|`*`"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "|heavy user"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "|create command aliases/macros"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "|manage things even faster"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "(For all use cases below, the *System* is the `Manager` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Delete link"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "1.  Actor requests to list links"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "2.  System shows a list of links"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "3.  Actor requests to delete a specific link in the list"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "4.  System deletes the link"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a1. System shows an error message."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Browsing feed"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "1. Actor requests list of recommended feeds."
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "2. System shows a list of feeds in the list view."
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "3. Actor requests to view a particular feed of their choice."
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "4. System fetches the feed and displays the list of links obtained in the list view."
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "5. Actor requests to view an link of their choice."
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "6. System displays the linked article in the reader view."
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "7. Actor requests to add another link of their choice to the reading list."
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "8. System saves the link to the reading list and downloads the article for future offline viewing, and displays a success status message."
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 5-8 repeat for as long as Actor wants to continue browsing."
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "9. Actor may request to subscribe to the feed."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "10. System adds the feed to the subscriptions list."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "* [3,5,7]a. The given index is invalid."
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "** [3,5,7]a1. System shows an error status message."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes from corresponding step."
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "* [3,5]a. System does not have internet access (Actor is offline)"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "** [3,5]a1. System shows an error status message."
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "* 7a. The given link has already been added to the reading list."
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "** 7a1. System shows an info status message that the link has already been added before."
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes from step 4."
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Browsing articles"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "1. Actor requests to view a particular link."
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "2. System displays the linked article in the reader view."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "3. Actor requests to view list of links found in the article."
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "4. System displays the links in the list view."
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "5. Actor requests to view a particular link in the list view."
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "6. System displays the linked article in the reader view."
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 5-6 repeat for as long as Actor wants to browse articles."
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. Actor requests to add a particular link found in article to the reading list."
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a1. System saves the link to the reading list and downloads the article for future offline viewing, and displays a success status message."
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes from step 5."
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "* [1,5]a. Actor may be offline if content has been downloaded for that particular link (i.e. if it is in the reading list)."
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "** [1,5]a1. System fetches the article from local storage rather than from the Internet."
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes from step [2,6]."
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Organising links in reading list"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "Steps below can be performed in any order the user wishes:"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "A. Actor requests to update reading list with new articles in subscribed feeds."
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "System fetches each subscribed feed, adding new articles to the reading list."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "B. Actor requests to view reading list."
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "System shows the links in the reading list in the list view."
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "C. Actor requests to view archive list."
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "System shows the links in the archive list in the list view."
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "D. Actor requests to filter the set of links by a criterion of their choice."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "System updates the list view where the links are filtered by the given criterion."
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "E. Actor requests to sort the set of links by a criterion of their choice."
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "System updates the list view where links are sorted by the given criterion."
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "F. Actor requests to mark a set of links of their choice as read."
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "System sets the read status for the given links as read, and updates the list view to reflect the change."
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "G. Actor requests to add or remove tags for a set of links of their choice."
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "System adds or removes the given tags from the links specified, and updates the list view to reflect the change."
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "H. Actor requests to archive a set of links of their choice."
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "System removes the links from the reading list and adds them to the archive list, purges downloaded content for those links, and updates the list view to reflect the change."
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "I. Actor requests to unarchive a set of links of their choice."
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "System removes the links from the archive list and adds them to the reading list, ensures content is downloaded for those links, and updates the list view to reflect the change."
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `9` or higher installed."
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": ".  A heavy user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user should find it comfortable to read articles on the reader view. If the default is not comfortable, the user should be able to style the view with custom CSS styles such that it becomes comfortable."
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "[[private-contact-detail]] Private contact detail::"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "A contact detail that is not meant to be shared with others"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "*Product Name*"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ..."
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a person"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": ". Deleting a person while all persons are listed"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": ".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 1` +"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 0` +"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 3,
      "-": 1192
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d README - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/CS2103-AY1819S2-W10-1/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "By: `W10-1`      Since: `Feb 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "README helps you discover, curate and read more content you care about in less time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "It is an integrated bookmark manager and feed reader desktop application for saving web pages and feeds to read later on your personal computer."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "You’ll love README if you’re a heavy consumer of web content but don’t have regular internet access, whether because you often head off on long flights or you love working in cafes, and refuse to pay exorbitant prices for Internet access anywhere."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "README is for those who *prefer to use a desktop app for managing links*."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "More importantly, README is *optimized for those who prefer to work with a Command Line Interface* (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "If you can type fast, README can get your link management tasks done faster than traditional GUI apps."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Interested? Jump to the \u003c\u003cQuick Start\u003e\u003e to get started."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Enjoy!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java version `9` or later installed in your Computer."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".  Download the latest `README.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for your README."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ".  Try these commands in order!"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* *`list`* : lists all saved links"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* **`select`**`1` : select the first link displayed for reading"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* **`read`**`1` : marks the 1st link as read"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* **`delete`**`2` : deletes the 2nd link"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* *`exit`* : exits the app"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".  Or these commands, if you have internet access!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* **`search`**`Trump` : searches online for links related to keyword \u0027Trump\u0027."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* **`add`**`1` : adds the first link displayed to the reading list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* *`list`* : lists all saved links, including the newly added one"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* *`exit`* : exits the app"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to below for details of each command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "[[Command]]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Format"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "* Items in square brackets are optional."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "* Items with `…`​ after them can be used multiple times including zero times."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "* Parameters can be in any order."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Viewing help : `help`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Context-switching commands"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "These commands change the context in which commands with shared command words operate (e.g. `add`, `edit`, `delete`)."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Showing links: `list` (displays link list)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Shows your reading list of saved links, optionally finding links with titles containing any of the given keywords, and filtering by read status, date added and tags."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Format: `list [KEYWORDS]... [r/READ_STATUS] [d/DATE_ADDED] [t/TAG]... [s/SORT_BY]`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "- The search is case insensitive. e.g `hans` will match `Hans`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Keywords are comma separated. e.g. `Hello world, foo bar`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- The order of the keywords does not matter. e.g. `Hans, Bo` will match `Bo, Hans`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Only the title is searched."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Only full words will be matched e.g. `Hans Solo` will not match `Hans Solos`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Links matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans, Bo` will return `Hans Gruber`, `Bo Yang`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "- `list` Lists all links"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- `list Apple r/read tech` Lists links with titles containing `apple` which are already read and tagged with `Tech`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- `list Trump` Lists links with titles containing `trump` and `Donald Trump` etc."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "- `list r/unread` Lists only unread links"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "- `list t/Tech` Lists links tagged with “Tech”"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "- `list t/` Lists untagged links"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Searching online for links: `search` (displays link list)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "Searches online for links that you can subsequently add."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `search [KEYWORD]...`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `search FEED_URL`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `search ARTICLE_URL`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "- `search` Returns top headlines"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "- `search Trump` Returns links containing the `Trump` keyword"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "- `search https://live.engadget.com/rss.xml` Returns links from this feed"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "- `search https://live.engadget.com/2019/02/08/microsoft-internet-explorer-technical-debt/` Returns all links from this article"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Showing archived links: `archives` (displays link list)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Shows a list of archived links, optionally finding links with titles containing any of the given keywords, and filtering by read status, date added and tags."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Format: `archives [KEYWORDS]... [r/READ_STATUS] [d/DATE_ADDED] [t/TAG]...`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "- The search is case insensitive. e.g `hans` will match `Hans`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Keywords are comma separated. e.g. `Hello world, foo bar`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- The order of the keywords does not matter. e.g. `Hans, Bo` will match `Bo, Hans`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Only the title is searched."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Only full words will be matched e.g. `Hans Solo` will not match `Hans Solos`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- Links matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans, Bo` will return `Hans Gruber`, `Bo Yang`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "- `archives` Lists all archived links"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- `archives Apple r/read t/Tech` Lists archived links with titles containing `apple` which are already read and tagged with `Tech`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- `archives Trump` Lists archived links with titles containing `trump` and `Donald Trump` etc."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "- `archives r/unread` Lists only unread archived links"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "- `archives t/Tech` Lists archived links tagged with “Tech”"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "- `archives t/` Lists untagged archived links"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Showing feeds: `feeds` (displays feed list)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "Shows a list of feeds being followed."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `feeds [t/TAG]...`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "- `feeds` Lists all feeds"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "- `feeds t/Business` Lists all feeds tagged with “Business”"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Searching online for feeds: `searchfeeds` (displays feed list)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Searches online for feeds that you can subsequently follow."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `searchfeeds [KEYWORD]...`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "- `searchfeeds` Shows some starter feeds you can add"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "- `searchfeeds Tech Business` Searches for `Tech` or `Business` feeds"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Showing reading statistics: `stats` `[coming in v2.0]`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "Shows helpful and fun statistics about your reading progress and habits."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `stats`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d In `list` context (displays link list)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Adding links: `add`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a single link from a URL to the manager. Content is automatically downloaded to disk."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Format: `add URL [ti/TITLE_OVERRIDE] [c/COMMENT] [t/TAG]...`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "A link can have any number of tags (including 0)."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Title will be automatically filled by parsing the link if you do not provide it."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "- `add https://www.theatlantic.com/magazine/archive/2019/03/ford-ceo-jim-hackett-ux-design-thinking/580438/ c/explains why UX is important t/Business` Adds a single link with a description and tagged with “Business”"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Editing a link: `edit`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "Edits an existing link in the manager."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Format: `edit INDEX [u/URL] [ti/TITLE_OVERRIDE] [s/STATUS] [c/COMMENT] [t/TAG]...`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "- Edits the link at the specified `INDEX`. The index refers to the index number shown in the displayed link list. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "- At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "- Existing values will be updated to the input values."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "- When editing tags, the existing tags of the link will be removed i.e adding of tags is not cumulative."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "- You can remove all the link\u0027s tags by typing `t/` without specifying any tags after it."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "- `edit 1 c/need to read again` Edits the description attached to the 1st link"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "- `edit 2 t/` Clears all existing tags from the 2nd link"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a link: `delete`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes specified links from the manager."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDICES`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "- Deletes the links at the specified `INDICES`."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed link list."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete all`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "- Deletes all shown links"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- `delete 1,6-10` Deletes the 1st, and 2nd to 6th links"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Redownloading links: `redownload`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "Redownload the specified links to get the latest version of their content."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `redownload INDICES`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "- Refreshes the links at the specified `INDICES`."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed link list."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `redownload all`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "- `redownload all` Redownload all shown links"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "- `redownload 1,3-5` Redownloads the 1st and 3rd to 5th links."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Marking links as read: `read`"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "Marks links as read."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `read INDICES`"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `read all`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "- Equivalent to `edit INDEX r/read` on multiple indices"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "- `read all` Marks all shown links as read"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- `read 1,2,6-10` Marks the 1st, 2nd and 4th to 6th links as read"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Marking links as unread: `unread`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "Marks links as unread."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `unread INDICES`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `unread all`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "- Equivalent to `edit INDEX r/unread` on multiple indices"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "- `unread all` Marks all shown links as unread"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "- `unread 1,2,6-10` Marks the 1st, 2nd and 4th to 6th links as unread"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Selecting a link: `select`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Selects the link identified by the index number used in the displayed link list for viewing."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `select INDEX`"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "- Selects the link and loads the content of the link at the specified `INDEX`."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed link list."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1`, 2, 3, ...`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "- `select 2` Selects the 2nd link in the manager"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Changing the viewing mode: `view`"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "Changes the viewing mode between reader view and original view."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `view MODE [s/style] [o/options]`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "- `view browser` Use browser view"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader` Use reader view"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader s/dark` Use reader view with dark style"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader o/fullscreen` Use reader view with maximised window"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader s/solarized o/fullscreen` Use reader view with \"Solarized\" style and maximised window"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Archiving links: `archive`"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "Moves the links to the archive and remove downloaded content for those links."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `archive INDICES`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `archive all`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "- `archive all` Archives all shown links"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "- `archive 1,2,4-6` Archives the 1st, 2nd and 4th to 6th links"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Clearing all entries : `clear`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "Clears all saved links from the manager."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d List links in reader: `readerlist` `[coming in v2.0]`"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "Lists all the hyperlinks in the reader."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `readerlist`"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "- `readerlist` Lists all the hyperlinks in the reader."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Share link: `share` `[coming in v2.0]`"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "Shares link through connected social media"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d In `search` context (displays link list)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Adding links: `add`"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "Adds links from search results to the manager. Content is automatically downloaded to disk."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Format: `add INDEX [ti/TITLE_OVERRIDE] [c/COMMENT] [t/TAG]...`"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add INDICES [c/COMMENT] [t/TAG]...`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add all`"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "A link can have any number of tags (including 0)."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Title will be automatically filled by parsing the link if you do not provide it."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "- `add 1 c/explains why UX is important t/Business` Adds the 1st link with a description and tagged with “Business”"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "- `add 4-6 c/read by Monday t/School` Adds the 4th to 6th links with the same description and tagged with “School\""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Selecting a link: `select`"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "Selects the link identified by the index number used in the displayed link list for viewing."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `select INDEX`"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "- Selects the link and loads the content of the link at the specified `INDEX`."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed link list."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1`, 2, 3, ...`"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "- `select 2` Selects the 2nd link in the manager"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Changing the viewing mode: `view`"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "Changes the viewing mode between reader view and original view."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `view MODE [s/style] [o/options]`"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "- `view browser` Use browser view"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader` Use reader view"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader s/dark` Use reader view with dark style"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader o/fullscreen` Use reader view with maximised window"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "- `view reader s/solarized o/fullscreen` Use reader view with \"Solarized\" style and maximised window"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d In `feeds` context (displays feed list)"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Adding a feed: `add`"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a feed to the manager and subscribes to updates."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add URL [n/NAME] [t/TAG]...`"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "A feed can have any number of tags (including 0)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "- `add https://www.engadget.com/rss.xml n/Engadget t/Tech` Adds a feed whose name is “Engadget” and whose links will be tagged with “Tech”"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Updating links from feeds: `update`"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Refreshes all feeds."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `update INDICES`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `update all`"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "- `update all` Updates links from all feeds"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "- `update 2` Updates links from the 2nd feed"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Selecting a feed: `select`"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "Selects the feed identified by the index number used in the displayed feed list and displays its links."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `select INDEX`"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "- Selects the feed and displays its links."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "- Equivalent to `search [URL_OF_INDEXED_FEED]`"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed feed list."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1`, 2, 3, ...`"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "- `select 2` Selects the 2nd feed in the manager and displays its links"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Editing a feed: `edit`"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "Edits an existing feed in the manager."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit INDEX [u/URL] [n/NAME] [t/TAG]...`"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "- Edits the feed at the specified `INDEX`. The index refers to the index number shown in the displayed feed list. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "- At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "- Existing values will be updated to the input values."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "- When editing tags, the existing tags of the feed will be removed i.e adding of tags is not cumulative."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "- You can remove all the feed’s tags by typing `t/` without specifying any tags after it."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "- `edit 1 n/HackerNews` Edits the name of the 1st feed"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "- `edit 2 t/` Clears all existing tags from the 2nd feed"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a feed: `delete`"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the specified feeds from the manager and unsubscribes from them, but existing links obtained from that feed will not be deleted."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDICES`"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "- Deletes the feeds at the specified indices."
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed feed list."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete all`"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "- `delete all` Deletes all shown feeds"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "- `delete 2` Deletes the 2nd feed"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Clearing all entries : `clear`"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "Clears all followed feeds from the manager."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d In `searchfeeds` context (displays feed list)"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Adding a feed: `add`"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a feed from the search results to the manager and subscribes to updates."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add INDEX [n/NAME] [t/TAG]...`"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add INDICES [t/TAG]...`"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add all`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "A feed can have any number of tags (including 0)"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "- `add all` Adds all shown feeds"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "- `add 1 n/Engadget t/Tech` Adds a feed whose name is “Engadget” and whose links will be tagged with `Tech`"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "- `add 5-9 t/Work` Adds the 5th to 9th feeds whose links will be tagged with `Work`"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Selecting a feed: `select`"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "Selects the feed identified by the index number used in the displayed feed list and displays its links."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `select INDEX`"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "- Selects the feed and displays its links."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "- Equivalent to `search [URL_OF_INDEXED_FEED]`"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed feed list."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1`, 2, 3, ...`"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "- `select 2` Selects the 2nd feed in the manager and displays its links"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Show recommended feeds: `recommend` `[coming in v2.0]`"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "Based on user\u0027s current preferences, display a list of recommended feeds."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `recommend`"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "- `recommend` A list of recommended feeds will be displayed, similar to searching a feed."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d In `archives` context (displays link list)"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Unarchiving links: `unarchive`"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "Adds the links back to the link list and downloads their content onto disk."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `unarchive INDICES`"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `unarchive all`"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "- `unarchive all` Unarchives all shown links"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "- `unarchive 1,2,4-6` Unarchives the 1st, 2nd and 4th to 6th links"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting an archived link: `delete`"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes specified archived links from the manager."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDICES`"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "- Deletes the links at the specified `INDICES`."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "- The index refers to the index number shown in the displayed link list."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "- The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete all`"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "- Deletes all shown links"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "- `delete 1,2-6` Deletes the 1st, and 2nd to 6th links"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Clearing all entries : `clear`"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "Clears all archived links from the manager."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non-contextual commands"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "These commands can be called from any context."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Custom user command macro: `macro` `[coming in v2.0]`"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "Creates macros that compose commands together."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `macro MACRO_NAME NUM_ARGS command1; command2; ... commandN`"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "- `macro archive-tags-which-are-old 1 find t/$1 d/3 days ago; archive all`"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Export settings and data to an export file : `export`"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "Exports the feeds, saved data, history, and other preferences to an export file."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `export FILE_PATH`"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "- Serializes all the feeds and other preferences to a file."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "- Copies all saved data into the export folder"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "- Compresses export folder to a export file."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "- `export /home/tt/Desktop` Saves an export file to desktop"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "- `export C:\\Users\\Name\\Desktop` Saves an export file to desktop"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Import settings and data from an export file : `import`"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "Imports the feeds, saved data, history, and other preferences from an export file."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `import FILE_PATH`"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "- Decompresses export file"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "- Deserializes all the feeds and other preferences from the export file and save it to the application"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "- Copies all saved data from the export folder to application database"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "- `import /home/tt/Desktop/export.jtjr` Saves an export file to desktop"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "- `import C:\\Users\\Name\\Desktop\\export.jtjr` Saves an export file to desktop"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Listing entered commands : `history`"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "Lists all the commands that you have entered in reverse chronological order. +"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `history`"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "Pressing the kbd:[\u0026uarr;] and kbd:[\u0026darr;] arrows will display the previous and next input respectively in the command box."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Undoing previous command : `undo`"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "Restores the README to the state before the previous _undoable_ command was executed. +"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "Undoable commands: those commands that modify the README\u0027s content (`add`, `delete`, `edit` and `clear`)."
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "- `delete 1` +"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "`list` +"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "- `select 1` +"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "`list` +"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` +"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "The `undo` command fails as there are no undoable commands executed previously."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "- `delete 1` +"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "`clear` +"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `clear` command) +"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Redoing the previously undone command : `redo`"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "Reverses the most recent `undo` command. +"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `redo`"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` (reapplies the `delete 1` command) +"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` +"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command fails as there are no `undo` commands executed previously."
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "`clear` +"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `clear` command) +"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` (reapplies the `delete 1` command) +"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` (reapplies the `clear` command) +"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Exiting the program : `exit`"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "////"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Encrypting data files `[coming in v2.0]`"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "_{explain how the user can enable/disable data encryption}_"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "////"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "////"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Address Book folder."
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "////"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "////"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "* *Add* `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...` +"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "* *Clear* : `clear`"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "* *Delete* : `delete INDEX` +"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `delete 3`"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "* *Edit* : `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...` +"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `edit 2 n/James Lee e/jameslee@example.com`"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "* *Find* : `find KEYWORD [MORE_KEYWORDS]` +"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `find James Jake`"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "* *List* : `list`"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "* *Help* : `help`"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "* *Select* : `select INDEX` +"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "e.g.`select 2`"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "* *History* : `history`"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "* *Undo* : `undo`"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "* *Redo* : `redo`"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "////"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 27,
      "-": 682
    }
  },
  {
    "path": "docs/networktests/index.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003chtml\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cp\u003eIt works!\u003c/p\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 3
    }
  },
  {
    "path": "docs/networktests/rss.xml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003crss version\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cchannel\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime Revies\u003c/title\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime\u003c/link\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "My stupid and completely irrelevant anime reviews."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/description\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cimage\u003ehttps://blog.GNU.moe/anime/icon.svg\u003c/image\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cauthor\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Tsutsukakushi Tsukiko \u0026lt;yui@cock.li\u0026gt; (7B29 6212 4A73 E1E9 15E8  A7D4 7F96 C964 9CBC BF51)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/author\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ccopyright\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "CC0 \u0026lt;https://creativecommons.org/publicdomain/zero/1.0/legalcode\u0026gt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/copyright\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clastBuildDate\u003eSun May 27 04:15:47 EEST 2018\u003c/lastBuildDate\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Mahoujin Guru Guru  \u003c/title\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/mahoujin-guru-guru.html\u003c/link\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Gamers!  \u003c/title\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/gamers.html\u003c/link\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review 2"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Made in Abyss  \u003c/title\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/made-in-abyss.html\u003c/link\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review n"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Mob Psycho 100  \u003c/title\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/mob-psycho.html\u003c/link\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: New Game!!  \u003c/title\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/new-game-2.html\u003c/link\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime revieww"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Saiki Kusuo no Psi-nan  \u003c/title\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/saiki-kusuo.html\u003c/link\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "sigh"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Durarara!!  \u003c/title\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/durarara.html\u003c/link\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Battle Programmer Shirase  \u003c/title\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/bps.html\u003c/link\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "lol"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Re:Zero  \u003c/title\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/re_zero.html\u003c/link\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "idk"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Youjo Senki  \u003c/title\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/youjo_senki.html\u003c/link\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "I like this reviewer"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/channel\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/rss\u003e"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 98
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/XmlUtil.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import java.io.StringReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.parsers.DocumentBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.parsers.DocumentBuilderFactory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.OutputKeys;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.Transformer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.TransformerException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.TransformerFactory;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.dom.DOMSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.stream.StreamResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.w3c.dom.Document;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.xml.sax.InputSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Converts between XML Document and String."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Code modified from https://www.journaldev.com/1237/java-convert-string-to-xml-document-and-xml-document-to-string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "public class XmlUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Converts a XML Document to string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param doc XML Document"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @return string from doc"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @throws TransformerException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static String convertDocumentToString(Document doc) throws TransformerException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Transformer transformer \u003d TransformerFactory.newInstance().newTransformer();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        StringWriter writer \u003d new StringWriter();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        transformer.transform(new DOMSource(doc), new StreamResult(writer));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String output \u003d writer.getBuffer().toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Converts a string to XML Document"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param xmlStr string representation of a XML Document"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @return XML Document from xmlStr"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static Document convertStringToDocument(String xmlStr) throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        DocumentBuilder builder \u003d DocumentBuilderFactory.newInstance().newDocumentBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Document doc \u003d builder.parse(new InputSource(new StringReader(xmlStr)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return doc;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyEntryBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException If an error occurs during parsing."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the EntryBook."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#getEntryBook()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyEntryBook getEntryBook();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of entries */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cEntry\u003e getFilteredEntryList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of commands entered by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * The list is ordered from the least recent command to the most recent command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cString\u003e getHistory();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 entry book file path."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getEntryBookFilePath();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Selected entry in the filtered entry list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no entry is selected."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#selectedEntryProperty()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyProperty\u003cEntry\u003e selectedEntryProperty();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the selected entry in the filtered entry list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#setSelectedEntry(Entry)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    void setSelectedEntry(Entry entry);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Current view mode."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @see seedu.address.model.Model#viewModeProperty()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    ReadOnlyProperty\u003cViewMode\u003e viewModeProperty();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the view mode."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @see seedu.address.model.Model#setViewMode(ViewMode)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    void setViewMode(ViewMode viewMode);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Propagated exception."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * null if no exception."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @see seedu.address.model.Model#exceptionProperty()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    ReadOnlyProperty\u003cException\u003e exceptionProperty();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the exception to be propagated."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @see seedu.address.model.Model#setException(Exception)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    void setException(Exception exception);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Command result from manual setting."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * null if no manually set command result."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * FUTURE: Command result from latest command execution or manual setting."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @see seedu.address.model.Model#commandResultProperty()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    ReadOnlyProperty\u003cCommandResult\u003e commandResultProperty();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the command result manually."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @see seedu.address.model.Model#setCommandResult(CommandResult)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    void setCommandResult(CommandResult commandResult);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 46,
      "-": 72
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.EntryBookParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyEntryBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final CommandHistory history;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final EntryBookParser entryBookParser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        history \u003d new CommandHistory();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        entryBookParser \u003d new EntryBookParser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            Command command \u003d entryBookParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model, history);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            history.add(commandText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyEntryBook getEntryBook() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getEntryBook();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cEntry\u003e getFilteredEntryList() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getFilteredEntryList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cString\u003e getHistory() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return history.getHistory();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getEntryBookFilePath() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getEntryBookFilePath();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cEntry\u003e selectedEntryProperty() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.selectedEntryProperty();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setSelectedEntry(Entry entry) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setSelectedEntry(entry);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public ReadOnlyProperty\u003cViewMode\u003e viewModeProperty() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return model.viewModeProperty();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void setViewMode(ViewMode viewMode) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        model.setViewMode(viewMode);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public ReadOnlyProperty\u003cException\u003e exceptionProperty() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return model.exceptionProperty();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void setException(Exception exception) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        model.setException(exception);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public ReadOnlyProperty\u003cCommandResult\u003e commandResultProperty() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return model.commandResultProperty();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void setCommandResult(CommandResult commandResult) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        model.setCommandResult(commandResult);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 28,
      "-": 93
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FeedCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import com.rometools.rome.feed.synd.SyndEntry;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import com.rometools.rome.feed.synd.SyndFeed;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import com.rometools.rome.io.FeedException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import com.rometools.rome.io.SyndFeedInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import com.rometools.rome.io.XmlReader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Address;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Link;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.network.Network;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": " * Shows a feed given an URL."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "public class FeedCommand extends Command {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"feed\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Opened feed %s\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public static final String MESSAGE_FAILURE_NET \u003d \"Network connection failed:\\n%s\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public static final String MESSAGE_FAILURE_XML \u003d \"%s is not a valid RSS/Atom feed!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            + \": Opens a link as an RSS feed and adds all its entries.\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            + \"Parameters: LINK\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" https://open.kattis.com/rss/new-problems\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_DESCRIPTION_TEXT \u003d \"imported from %s\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private String feedUrl;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public FeedCommand(String feedUrl) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        this.feedUrl \u003d feedUrl;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            InputStream inputStream \u003d Network.fetchAsStream(feedUrl);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            SyndFeed syndFeed \u003d new SyndFeedInput().build(new XmlReader(inputStream));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            convertToEntryList(syndFeed).forEach(model::addEntry);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            throw new CommandException(String.format(MESSAGE_FAILURE_NET, e), e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        } catch (FeedException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            throw new CommandException(String.format(MESSAGE_FAILURE_XML, feedUrl), e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            throw new CommandException(\"Some other problem: \" + StringUtil.getDetails(e), e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredEntryList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, feedUrl));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private List\u003cEntry\u003e convertToEntryList(SyndFeed syndFeed) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return syndFeed.getEntries().stream()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                .map(this::syndEntryToEntryBookEntry)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    /** Converts a SyndEntry into an EntryBook Entry. */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private Entry syndEntryToEntryBookEntry(SyndEntry syndEntry) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return new Entry("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                new Title(syndEntry.getTitle().trim()),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                extractDescription(syndEntry),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                new Link(syndEntry.getLink()),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                new Address(\"unused\"),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                Collections.emptySet()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Extracts a useful description from a SyndEntry. */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    private Description extractDescription(SyndEntry syndEntry) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        String description \u003d syndEntry.getDescription().getValue().replace(\u0027\\n\u0027, \u0027 \u0027).trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            description \u003d String.format(DEFAULT_DESCRIPTION_TEXT, feedUrl);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Description(description);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                || (other instanceof FeedCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                \u0026\u0026 feedUrl.equals(((FeedCommand) other).feedUrl)); // state check"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 94,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ViewModeCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Sets the view mode."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": "public class ViewModeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final String COMMAND_ALIAS \u003d \"v\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    // TODO: Generate message by iterating over enum"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            + \": Sets the view mode.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            + \"Parameters: VIEW_MODE (browser, reader)\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \" + ViewMode.READER.toString().toLowerCase();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final String MESSAGE_SET_VIEW_MODE_SUCCESS \u003d \"View Mode: %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private final ViewMode viewMode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public ViewModeCommand(ViewMode viewMode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        this.viewMode \u003d viewMode;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public CommandResult execute(Model model, CommandHistory history) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        model.setViewMode(this.viewMode);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SET_VIEW_MODE_SUCCESS, this.viewMode.toString()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                || (other instanceof ViewModeCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                \u0026\u0026 viewMode.equals(((ViewModeCommand) other).viewMode)); // state check"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/EntryBookParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.commands.FeedCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HistoryCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.SelectCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.ViewModeCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class EntryBookParser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        case SelectCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        case SelectCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            return new SelectCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        case HistoryCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case HistoryCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HistoryCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        case ViewModeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        case ViewModeCommand.COMMAND_ALIAS:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            return new ViewModeCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        case FeedCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            return new FeedCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 4,
      "qjqqyy": 3,
      "-": 93
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/FeedCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.commands.FeedCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": " * Parses input arguments and creates a new FeedCommand object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "public class FeedCommandParser implements Parser\u003cFeedCommand\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public FeedCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        if (userInput.trim().isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FeedCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return new FeedCommand(userInput.trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ViewModeCommandParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.ViewModeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Parses input arguments and creates a new ViewCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "public class ViewModeCommandParser implements Parser\u003cViewModeCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the ViewCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * and returns a ViewCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public ViewModeCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            ViewMode viewMode \u003d ViewMode.valueOf(trimmedArgs.toUpperCase(Locale.ENGLISH));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            return new ViewModeCommand(viewMode);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } catch (IllegalArgumentException ioe) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewModeCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Predicate\u003cEntry\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the storage backing this model."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    Storage getStorage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 entry book file path."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getEntryBookFilePath();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 entry book file path."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    void setEntryBookFilePath(Path entryBookFilePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 article data directory path."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getArticleDataDirectoryPath();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 article data directory path."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    void setArticleDataDirectoryPath(Path articleDataDirectoryPath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces entry book data with the data in {@code entryBook}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    void setEntryBook(ReadOnlyEntryBook entryBook);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns the EntryBook */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyEntryBook getEntryBook();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a entry with the same identity as {@code entry} exists in the entry book."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean hasEntry(Entry entry);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the given entry."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * The entry must exist in the entry book."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    void deleteEntry(Entry target);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the given entry."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code entry} must not already exist in the entry book."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    void addEntry(Entry entry);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the given entry {@code target} with {@code editedEntry}."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the entry book."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * The entry identity of {@code editedEntry} must not be the same as another existing entry in the entry book."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    void setEntry(Entry target, Entry editedEntry);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clears the entire entry book."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    void clearEntryBook();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered entry list */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cEntry\u003e getFilteredEntryList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the filter of the filtered entry list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    void updateFilteredEntryList(Predicate\u003cEntry\u003e predicate);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * Selected entry in the filtered entry list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no entry is selected."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyProperty\u003cEntry\u003e selectedEntryProperty();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the selected entry in the filtered entry list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * null if no entry is selected."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    Entry getSelectedEntry();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the selected entry in the filtered entry list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    void setSelectedEntry(Entry entry);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Current view mode."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    ReadOnlyProperty\u003cViewMode\u003e viewModeProperty();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Returns the current view mode."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    ViewMode getViewMode();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the view mode."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    void setViewMode(ViewMode viewMode);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Propagated exception."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * null if no exception."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    ReadOnlyProperty\u003cException\u003e exceptionProperty();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Returns the propagated exception."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * null if no exception."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    Exception getException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the exception to be propagated."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    void setException(Exception exceptionToBePropagated);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Command result from manual setting."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * null if no manually set command result."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * FUTURE: Command result from latest command execution or manual setting."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    ReadOnlyProperty\u003cCommandResult\u003e commandResultProperty();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Returns the manually set command result."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * null if no manually set command result."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    CommandResult getCommandResult();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the command result manually."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    void setCommandResult(CommandResult result);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * Makes a copy of the model."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "     * Mainly created because clone is needed a lot in tests."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    Model clone();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 31,
      "-": 153
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.Observable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.exceptions.EntryNotFoundException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.network.Network;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private final EntryBook entryBook;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilteredList\u003cEntry\u003e filteredEntries;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private final SimpleObjectProperty\u003cEntry\u003e selectedEntry \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private final SimpleObjectProperty\u003cViewMode\u003e currentViewMode \u003d new SimpleObjectProperty\u003c\u003e(ViewMode.BROWSER);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private final SimpleObjectProperty\u003cException\u003e exception \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private final SimpleObjectProperty\u003cCommandResult\u003e commandResult \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes a ModelManager with the given addressBook, userPrefs, and storage"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager(ReadOnlyEntryBook addressBook, ReadOnlyUserPrefs userPrefs, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(addressBook, userPrefs);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        entryBook \u003d new EntryBook(addressBook);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredEntries \u003d new FilteredList\u003c\u003e(entryBook.getEntryList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredEntries.addListener(this::ensureSelectedPersonIsValid);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // Save the entry book to storage whenever it is modified."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        entryBook.addListener(this::saveToStorageListener);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getEntryBookFilePath() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getAddressBookFilePath();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setEntryBookFilePath(Path entryBookFilePath) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(entryBookFilePath);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setAddressBookFilePath(entryBookFilePath);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getArticleDataDirectoryPath() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getArticleDataDirectoryPath();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setArticleDataDirectoryPath(Path articleDataDirectoryPath) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(articleDataDirectoryPath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setArticleDataDirectoryPath(articleDataDirectoryPath);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EntryBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setEntryBook(ReadOnlyEntryBook entryBook) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        this.entryBook.resetData(entryBook);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyEntryBook getEntryBook() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        return entryBook;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasEntry(Entry entry) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(entry);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        return entryBook.hasPerson(entry);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteEntry(Entry target) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        entryBook.removePerson(target);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addEntry(Entry entry) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        entryBook.addPerson(entry);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] articleContent \u003d Network.fetchAsBytes(entry.getLink().value);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.addArticle(entry.getLink().value, articleContent);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            // Do nothing if we fail to fetch the page."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        updateFilteredEntryList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setEntry(Entry target, Entry editedEntry) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedEntry);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        entryBook.setPerson(target, editedEntry);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clearEntryBook() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        entryBook.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Storage \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Entry List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Entry} backed by the internal list of"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code entryBook}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cEntry\u003e getFilteredEntryList() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        return filteredEntries;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFilteredEntryList(Predicate\u003cEntry\u003e predicate) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredEntries.setPredicate(predicate);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Selected entry \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cEntry\u003e selectedEntryProperty() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        return selectedEntry;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public Entry getSelectedEntry() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        return selectedEntry.getValue();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setSelectedEntry(Entry entry) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        if (entry !\u003d null \u0026\u0026 !filteredEntries.contains(entry)) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntryNotFoundException();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        selectedEntry.setValue(entry);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d View mode \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public ReadOnlyProperty\u003cViewMode\u003e viewModeProperty() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return currentViewMode;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public ViewMode getViewMode() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return currentViewMode.getValue();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void setViewMode(ViewMode viewMode) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        currentViewMode.setValue(viewMode);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exception propagation \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cException\u003e exceptionProperty() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        return exception;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    public Exception getException() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        return exception.getValue();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setException(Exception exceptionToBePropagated) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        exception.setValue(exceptionToBePropagated);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command result \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyProperty\u003cCommandResult\u003e commandResultProperty() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult getCommandResult() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult.getValue();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        commandResult.setValue(result);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ensures {@code selectedEntry} is a valid entry in {@code filteredEntries}."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    private void ensureSelectedPersonIsValid(ListChangeListener.Change\u003c? extends Entry\u003e change) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        while (change.next()) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedEntry.getValue() \u003d\u003d null) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                // null is always a valid selected entry, so we do not need to check that it is valid anymore."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean wasSelectedPersonReplaced \u003d change.wasReplaced() \u0026\u0026 change.getAddedSize() \u003d\u003d change.getRemovedSize()"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 change.getRemoved().contains(selectedEntry.getValue());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            if (wasSelectedPersonReplaced) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                // Update selectedEntry to its new value."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                int index \u003d change.getRemoved().indexOf(selectedEntry.getValue());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedEntry.setValue(change.getAddedSubList().get(index));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean wasSelectedPersonRemoved \u003d change.getRemoved().stream()"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                    .anyMatch(removedPerson -\u003e selectedEntry.getValue().isSameEntry(removedPerson));"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            if (wasSelectedPersonRemoved) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                // Select the entry that came before it in the list,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                // or clear the selection if there is no such entry."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedEntry.setValue(change.getFrom() \u003e 0 ? change.getList().get(change.getFrom() - 1) : null);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ensures that storage is updated whenever entry book is modified."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    private void saveToStorageListener(Observable observable) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Address book modified, saving to file.\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveAddressBook(entryBook);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            setException(new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean stateCheck \u003d entryBook.equals(other.entryBook)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 filteredEntries.equals(other.filteredEntries)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(selectedEntry.get(), other.selectedEntry.get())"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                \u0026\u0026 Objects.equals(currentViewMode.get(), other.currentViewMode.get())"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                \u0026\u0026 Objects.equals(commandResult.get(), other.commandResult.get());"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        if (exception.get() \u003d\u003d null \u0026\u0026 other.exception.get() \u003d\u003d null) { // both don\u0027t have exceptions set"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            return stateCheck;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } else if (exception.get() !\u003d null \u0026\u0026 other.exception.get() !\u003d null) { // both have exceptions set"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            return stateCheck"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                    \u0026\u0026 exception.get().getClass().equals(other.exception.get().getClass())"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                    \u0026\u0026 exception.get().getMessage().equals(other.exception.get().getMessage());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } else { // not equal as one has exception set and the other does not"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    public Model clone() {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(this.entryBook, this.userPrefs, this.storage);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 32,
      "-": 302
    }
  },
  {
    "path": "src/main/java/seedu/address/network/Network.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.network;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Manager of Network component"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Network {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fetches the resource (i.e. webpage) at url, returning it as an InputStream."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param url"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The input stream containing the content fetched."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static InputStream fetchAsStream(String url) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return new URL(url).openStream();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fetches the resource (i.e. webpage) at url, returning it as a String."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param url"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The content fetched."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String fetchAsString(String url) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String(new URL(url).openStream().readAllBytes(), \"utf-8\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fetches the resource (i.e. webpage) at url, returning it as a byte array"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param url"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The content fetched."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static byte[] fetchAsBytes(String url) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return new URL(url).openStream().readAllBytes();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 3,
      "-": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BrowserPanel.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.TransformerException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.jsoup.Jsoup;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.jsoup.nodes.Document;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.jsoup.nodes.Element;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.jsoup.parser.Tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import com.chimbori.crux.articles.Article;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import com.chimbori.crux.articles.ArticleExtractor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.value.ObservableValue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.Event;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javafx.scene.web.WebEngine;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.web.WebView;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.commons.util.XmlUtil;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * The Browser Panel of the App."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class BrowserPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private static final String BROWSER_FILE_FOLDER \u003d \"/browser/\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final URL DEFAULT_PAGE \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            requireNonNull(MainApp.class.getResource(BROWSER_FILE_FOLDER + \"default.html\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final URL ERROR_PAGE \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            requireNonNull(MainApp.class.getResource(BROWSER_FILE_FOLDER + \"error.html\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final URL STYLESHEET \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            requireNonNull(MainApp.class.getResource(BROWSER_FILE_FOLDER + \"default.css\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"BrowserPanel.fxml\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebView browser;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private WebEngine webEngine \u003d browser.getEngine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private String currentLocation;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private boolean isCurrentlyReaderView;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private ViewMode viewMode;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public BrowserPanel(ObservableValue\u003cEntry\u003e selectedEntry, ObservableValue\u003cViewMode\u003e viewMode) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        this.currentLocation \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        this.isCurrentlyReaderView \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        this.viewMode \u003d viewMode.getValue();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        // To prevent triggering events for typing inside the loaded Web page."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().setOnKeyPressed(Event::consume);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        // Load entry page when selected entry changes."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        selectedEntry.addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            if (newValue \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                loadDefaultPage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            loadEntryPage(newValue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // Reload when view mode changes."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        viewMode.addListener((observable, oldViewMode, newViewMode) -\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            this.viewMode \u003d newViewMode;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            loadPage(currentLocation);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // Respond to browser state events."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        webEngine.getLoadWorker().stateProperty().addListener((observable, oldState, newState) -\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            switch (newState) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            case RUNNING:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                handleRunning();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            case SUCCEEDED:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                handleSucceeded();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            case FAILED:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                handleFailed();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // Load default page on startup."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        loadDefaultPage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Displays loading message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void handleRunning() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        if (isCurrentlyReaderView) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String message \u003d String.format(\"Loading reader view for %s...\", this.currentLocation);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            logger.info(message);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String message \u003d String.format(\"Loading %s...\", this.currentLocation);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            logger.info(message);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Displays loaded message, and loads reader view if necessary."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void handleSucceeded() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // Log and display loaded message"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        if (isCurrentlyReaderView) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String message \u003d String.format(\"Successfully loaded reader view for %s\", this.currentLocation);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            logger.info(message);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String message \u003d String.format(\"Successfully loaded %s\", this.currentLocation);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            logger.info(message);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // Load reader view if reader view mode is selected but not loaded"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        if (viewMode.equals(ViewMode.READER) \u0026\u0026 !isCurrentlyReaderView) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            loadReader(currentLocation);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Displays failed to load message, and loads error page."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void handleFailed() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String message \u003d String.format(\"Failed to load %s\", this.currentLocation);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        logger.warning(message);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        loadErrorPage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Loads an entry."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param entry entry to load"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void loadEntryPage(Entry entry) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        loadPage(entry.getLink().value);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads a default HTML file with a background that matches the general theme."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadDefaultPage() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        loadPage(DEFAULT_PAGE.toExternalForm());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Loads an error HTML file with a background that matches the general theme."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void loadErrorPage() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        loadPage(ERROR_PAGE.toExternalForm());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Loads a Web page."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param url URL of the Web page to load"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void loadPage(String url) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        isCurrentlyReaderView \u003d false;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        currentLocation \u003d url;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Platform.runLater(() -\u003e {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            webEngine.setUserStyleSheetLocation(null);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            webEngine.load(url);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Loads reader view of current content."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Assumes original Web page is already loaded."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param url base URL"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void loadReader(String url) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        isCurrentlyReaderView \u003d true;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // don\u0027t load reader view of default and error pages"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        if (url.equals(DEFAULT_PAGE.toExternalForm()) || url.equals(ERROR_PAGE.toExternalForm())) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // set stylesheet for reader view"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            Platform.runLater(() -\u003e webEngine.setUserStyleSheetLocation(STYLESHEET.toExternalForm()));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } catch (IllegalArgumentException | NullPointerException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String message \u003d \"Failed to set user style sheet location\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            logger.warning(message);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // process loaded content, then load processed content"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String rawHtml \u003d XmlUtil.convertDocumentToString(webEngine.getDocument());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            Document readerDocument \u003d getReaderDocumentFrom(url, rawHtml);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String processedHtml \u003d readerDocument.outerHtml();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            Platform.runLater(() -\u003e webEngine.loadContent(processedHtml));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } catch (TransformerException | IllegalArgumentException e) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            String message \u003d String.format(\"Failed to load reader view for %s\", this.currentLocation);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            logger.warning(message);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Gets browser\u0027s web engine."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @return browser\u0027s web engine"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    protected WebEngine getWebEngine() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return webEngine;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Gets a document representing the reader view of the given HTML."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param baseUrl base URL"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param rawHtml raw HTML to process"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @return document representing the reader view of rawHtml"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    protected Document getReaderDocumentFrom(String baseUrl, String rawHtml) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // extract article metadata and content using Crux"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Article article \u003d ArticleExtractor.with(baseUrl, rawHtml)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                .extractMetadata()"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                .extractContent()"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                .estimateReadingTime()"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                .article();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // reparse using Jsoup"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String processedHtml \u003d article.document.outerHtml();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Document document \u003d Jsoup.parse(processedHtml);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // wrap body in container"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        document.body().addClass(\"container py-5\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // add estimated reading time"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Element timeElement \u003d new Element(Tag.valueOf(\"small\"), \"\")"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                .text(article.estimatedReadingTimeMinutes + \" minutes\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Element timeWrapperElement \u003d new Element(Tag.valueOf(\"p\"), \"\").appendChild(timeElement);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        document.body().prependChild(timeWrapperElement);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // add title"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        if (!article.title.isEmpty()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            Element titleElement \u003d new Element(Tag.valueOf(\"h1\"), \"\").text(article.title).addClass(\"pb-3\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            document.body().prependChild(titleElement);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // add site name"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        if (!article.siteName.isEmpty()) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            Element siteNameElement \u003d new Element(Tag.valueOf(\"p\"), \"\").text(article.siteName).addClass(\"lead\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            document.body().prependChild(siteNameElement);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        return document;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 212,
      "-": 64
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommandBox.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cString\u003e history;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private ListElementPointer historySnapshot;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandBox(CommandExecutor commandExecutor, List\u003cString\u003e history) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.history \u003d history;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        historySnapshot \u003d new ListElementPointer(history);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the key press event, {@code keyEvent}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleKeyPress(KeyEvent keyEvent) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (keyEvent.getCode()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        case UP:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            // As up and down buttons will alter the position of the caret,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            // consuming it causes the caret\u0027s position to remain unchanged"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            navigateToPreviousInput();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        case DOWN:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            navigateToNextInput();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            // let JavaFx handle the keypress"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the text field with the previous input in {@code historySnapshot},"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * if there exists a previous input in {@code historySnapshot}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private void navigateToPreviousInput() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assert historySnapshot !\u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!historySnapshot.hasPrevious()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        replaceText(historySnapshot.previous());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the text field with the next input in {@code historySnapshot},"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * if there exists a next input in {@code historySnapshot}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    private void navigateToNextInput() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assert historySnapshot !\u003d null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!historySnapshot.hasNext()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        replaceText(historySnapshot.next());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets {@code CommandBox}\u0027s text field with {@code text} and"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * positions the caret to the end of the {@code text}."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private void replaceText(String text) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.setText(text);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.positionCaret(commandTextField.getText().length());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            commandExecutor.execute(commandTextField.getText());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            processCommandSuccess();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            processCommandFailure();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Processes a command success."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void processCommandSuccess() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        initHistory();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        historySnapshot.next();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Processes a command failure."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void processCommandFailure() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        initHistory();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes the history snapshot."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initHistory() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        historySnapshot \u003d new ListElementPointer(history);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        // add an empty string to represent the most-recent end of historySnapshot, to be shown to"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        // the user if she tries to navigate past the most-recent end of the historySnapshot."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        historySnapshot.add(\"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "         * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 12,
      "-": 156
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private BrowserPanel browserPanel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private EntryListPanel entryListPanel;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private CommandBox commandBox;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private StatusBarFooter statusBarFooter;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane browserPlaceholder;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane entryListPanelPlaceholder;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        browserPanel \u003d new BrowserPanel(logic.selectedEntryProperty(), logic.viewModeProperty());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        browserPlaceholder.getChildren().add(browserPanel.getRoot());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        entryListPanel \u003d new EntryListPanel(logic.getFilteredEntryList(), logic.selectedEntryProperty(),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                logic::setSelectedEntry);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        entryListPanelPlaceholder.getChildren().add(entryListPanel.getRoot());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        statusBarFooter \u003d new StatusBarFooter(logic.getEntryBookFilePath(), logic.getEntryBook(),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getFilteredEntryList());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        commandBox \u003d new CommandBox(this::executeCommand, logic.getHistory());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        this.logic.commandResultProperty().addListener((observable, oldCommandResult, newCommandResult) -\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            processManualSuccess(newCommandResult);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        this.logic.exceptionProperty().addListener((observable, oldException, newException) -\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            processManualFailure(newException);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    public EntryListPanel getEntryListPanel() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        return entryListPanel;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            processCommandSuccess(commandResult);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            processCommandFailure(e, commandText);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Processes a successful command entered into the command box."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void processCommandSuccess(CommandResult commandResult) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setFeedbackSuccessToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            handleHelp();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            handleExit();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Processes a successful manually set command result."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void processManualSuccess(CommandResult commandResult) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        processCommandSuccess(commandResult);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        commandBox.processCommandSuccess();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Processes a failed command entered into the command box."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void processCommandFailure(Exception e, String commandText) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setFeedbackErrorToUser(e.getMessage());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Processes a propagated manually set exception."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void processManualFailure(Exception e) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        logger.info(\"Operation failed: \" + e.getMessage());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        resultDisplay.setFeedbackErrorToUser(e.getMessage());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        commandBox.processCommandFailure();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 39,
      "-": 203
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ResultDisplay.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the header of the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ResultDisplay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"ResultDisplay.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextArea resultDisplay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public ResultDisplay() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the result display style to use the default style."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the result display style to indicate a failed command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d resultDisplay.getStyleClass();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFeedbackErrorToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFeedbackSuccessToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        setStyleToDefault();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 2,
      "-": 56
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/StatusBarFooter.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Clock;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyEntryBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the footer of the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class StatusBarFooter extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SYNC_STATUS_INITIAL \u003d \"Not updated yet in this session\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SYNC_STATUS_UPDATED \u003d \"Last Updated: %s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TARGET_COUNT_STATUS \u003d \"Found %d entries\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used to generate time stamps."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * TODO: change clock to an instance variable."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * We leave it as a static variable because manual dependency injection"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * will require passing down the clock reference all the way from MainApp,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * but it should be easier once we have factories/DI frameworks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Clock clock \u003d Clock.systemDefaultZone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"StatusBarFooter.fxml\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label syncStatus;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label saveLocationStatus;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private Label targetCountStatus;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public StatusBarFooter(Path saveLocation, ReadOnlyEntryBook addressBook, ObservableList\u003cEntry\u003e entryList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addListener(observable -\u003e updateSyncStatus());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        syncStatus.setText(SYNC_STATUS_INITIAL);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        entryList.addListener(this::updateTargetCount);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        targetCountStatus.setText(String.format(TARGET_COUNT_STATUS, entryList.size()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the target count whenever the displayed entry list changes."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateTargetCount(ListChangeListener.Change\u003c? extends Entry\u003e change) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        targetCountStatus.setText(String.format(TARGET_COUNT_STATUS, change.getList().size()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the clock used to determine the current time."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void setClock(Clock clock) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooter.clock \u003d clock;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the clock currently in use."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Clock getClock() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return clock;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates \"last updated\" status to the current time."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateSyncStatus() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        long now \u003d clock.millis();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        String lastUpdated \u003d new Date(now).toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        syncStatus.setText(String.format(SYNC_STATUS_UPDATED, lastUpdated));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 9,
      "-": 75
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ViewMode.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * View modes available."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "public enum ViewMode {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    READER, BROWSER"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 8
    }
  },
  {
    "path": "src/main/resources/browser/default.css",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "/*!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Bootswatch v4.3.1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Homepage: https://bootswatch.com"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Copyright 2012-2019 Thomas Park"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Licensed under MIT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Based on Bootstrap"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "*//*!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Bootstrap v4.3.1 (https://getbootstrap.com/)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Copyright 2011-2019 The Bootstrap Authors"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Copyright 2011-2019 Twitter, Inc."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": " */:root{--blue: #4582EC;--indigo: #6610f2;--purple: #6f42c1;--pink: #e83e8c;--red: #d9534f;--orange: #fd7e14;--yellow: #f0ad4e;--green: #02B875;--teal: #20c997;--cyan: #17a2b8;--white: #fff;--gray: #868e96;--gray-dark: #343a40;--primary: #4582EC;--secondary: #adb5bd;--success: #02B875;--info: #17a2b8;--warning: #f0ad4e;--danger: #d9534f;--light: #f8f9fa;--dark: #343a40;--breakpoint-xs: 0;--breakpoint-sm: 576px;--breakpoint-md: 768px;--breakpoint-lg: 992px;--breakpoint-xl: 1200px;--font-family-sans-serif: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";--font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace}*,*::before,*::after{-webkit-box-sizing:border-box;box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0)}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-size:1.063rem;font-weight:400;line-height:1.5;color:#343a40;text-align:left;background-color:#fff}[tabindex\u003d\"-1\"]:focus{outline:0 !important}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0.5rem}p{margin-top:0;margin-bottom:1rem}abbr[title],abbr[data-original-title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul,dl{margin-top:0;margin-bottom:1rem}ol ol,ul ul,ol ul,ul ol{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#4582EC;text-decoration:none;background-color:transparent}a:hover{color:#1559cf;text-decoration:underline}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):hover,a:not([href]):not([tabindex]):focus{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}pre,code,kbd,samp{font-family:SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:0.75rem;padding-bottom:0.75rem;color:#868e96;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:0.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}button,[type\u003d\"button\"],[type\u003d\"reset\"],[type\u003d\"submit\"]{-webkit-appearance:button}button:not(:disabled),[type\u003d\"button\"]:not(:disabled),[type\u003d\"reset\"]:not(:disabled),[type\u003d\"submit\"]:not(:disabled){cursor:pointer}button::-moz-focus-inner,[type\u003d\"button\"]::-moz-focus-inner,[type\u003d\"reset\"]::-moz-focus-inner,[type\u003d\"submit\"]::-moz-focus-inner{padding:0;border-style:none}input[type\u003d\"radio\"],input[type\u003d\"checkbox\"]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type\u003d\"date\"],input[type\u003d\"time\"],input[type\u003d\"datetime-local\"],input[type\u003d\"month\"]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type\u003d\"number\"]::-webkit-inner-spin-button,[type\u003d\"number\"]::-webkit-outer-spin-button{height:auto}[type\u003d\"search\"]{outline-offset:-2px;-webkit-appearance:none}[type\u003d\"search\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none !important}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-bottom:0.5rem;font-weight:700;line-height:1.2}h1,.h1{font-size:2.6575rem}h2,.h2{font-size:2.126rem}h3,.h3{font-size:1.86025rem}h4,.h4{font-size:1.5945rem}h5,.h5{font-size:1.32875rem}h6,.h6{font-size:1.063rem}.lead{font-size:1.32875rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,0.1)}small,.small{font-size:80%;font-weight:400}mark,.mark{padding:0.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:0.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.32875rem}.blockquote-footer{display:block;font-size:80%;color:#868e96}.blockquote-footer::before{content:\"\\2014\\00A0\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:0.25rem;background-color:#fff;border:1px solid #ddd;border-radius:0.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:0.5rem;line-height:1}.figure-caption{font-size:90%;color:#868e96}code{font-size:87.5%;color:#e83e8c;word-break:break-word}a\u003ecode{color:inherit}kbd{padding:0.2rem 0.4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:0.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container{max-width:540px}}@media (min-width: 768px){.container{max-width:720px}}@media (min-width: 992px){.container{max-width:960px}}@media (min-width: 1200px){.container{max-width:1140px}}.container-fluid{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.no-gutters{margin-right:0;margin-left:0}.no-gutters\u003e.col,.no-gutters\u003e[class*\u003d\"col-\"]{padding-right:0;padding-left:0}.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col,.col-auto,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm,.col-sm-auto,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md,.col-md-auto,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg,.col-lg-auto,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl,.col-xl-auto{position:relative;width:100%;padding-right:15px;padding-left:15px}.col{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-auto{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-1{-webkit-box-flex:0;-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-2{-webkit-box-flex:0;-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-3{-webkit-box-flex:0;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-webkit-box-flex:0;-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-5{-webkit-box-flex:0;-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-6{-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-webkit-box-flex:0;-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-8{-webkit-box-flex:0;-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-9{-webkit-box-flex:0;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-webkit-box-flex:0;-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-11{-webkit-box-flex:0;-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-12{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}.order-last{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.order-0{-webkit-box-ordinal-group:1;-ms-flex-order:0;order:0}.order-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.order-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.order-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.order-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.order-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.order-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.order-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.order-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.order-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.order-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.order-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.order-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.offset-1{margin-left:8.3333333333%}.offset-2{margin-left:16.6666666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.3333333333%}.offset-5{margin-left:41.6666666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.3333333333%}.offset-8{margin-left:66.6666666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.3333333333%}.offset-11{margin-left:91.6666666667%}@media (min-width: 576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-sm-auto{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-sm-1{-webkit-box-flex:0;-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-sm-2{-webkit-box-flex:0;-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-sm-3{-webkit-box-flex:0;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-webkit-box-flex:0;-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-sm-5{-webkit-box-flex:0;-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-sm-6{-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-webkit-box-flex:0;-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-sm-8{-webkit-box-flex:0;-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-sm-9{-webkit-box-flex:0;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-webkit-box-flex:0;-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-sm-11{-webkit-box-flex:0;-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-sm-12{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}.order-sm-last{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.order-sm-0{-webkit-box-ordinal-group:1;-ms-flex-order:0;order:0}.order-sm-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.order-sm-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.order-sm-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.order-sm-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.order-sm-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.order-sm-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.order-sm-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.order-sm-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.order-sm-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.order-sm-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.order-sm-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.order-sm-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.3333333333%}.offset-sm-2{margin-left:16.6666666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.3333333333%}.offset-sm-5{margin-left:41.6666666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.3333333333%}.offset-sm-8{margin-left:66.6666666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.3333333333%}.offset-sm-11{margin-left:91.6666666667%}}@media (min-width: 768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-md-auto{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-md-1{-webkit-box-flex:0;-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-md-2{-webkit-box-flex:0;-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-md-3{-webkit-box-flex:0;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-webkit-box-flex:0;-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-md-5{-webkit-box-flex:0;-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-md-6{-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-webkit-box-flex:0;-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-md-8{-webkit-box-flex:0;-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-md-9{-webkit-box-flex:0;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-webkit-box-flex:0;-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-md-11{-webkit-box-flex:0;-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-md-12{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}.order-md-last{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.order-md-0{-webkit-box-ordinal-group:1;-ms-flex-order:0;order:0}.order-md-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.order-md-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.order-md-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.order-md-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.order-md-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.order-md-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.order-md-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.order-md-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.order-md-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.order-md-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.order-md-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.order-md-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.3333333333%}.offset-md-2{margin-left:16.6666666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.3333333333%}.offset-md-5{margin-left:41.6666666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.3333333333%}.offset-md-8{margin-left:66.6666666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.3333333333%}.offset-md-11{margin-left:91.6666666667%}}@media (min-width: 992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-lg-auto{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-lg-1{-webkit-box-flex:0;-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-lg-2{-webkit-box-flex:0;-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-lg-3{-webkit-box-flex:0;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-webkit-box-flex:0;-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-lg-5{-webkit-box-flex:0;-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-lg-6{-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-webkit-box-flex:0;-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-lg-8{-webkit-box-flex:0;-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-lg-9{-webkit-box-flex:0;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-webkit-box-flex:0;-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-lg-11{-webkit-box-flex:0;-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-lg-12{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}.order-lg-last{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.order-lg-0{-webkit-box-ordinal-group:1;-ms-flex-order:0;order:0}.order-lg-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.order-lg-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.order-lg-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.order-lg-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.order-lg-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.order-lg-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.order-lg-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.order-lg-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.order-lg-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.order-lg-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.order-lg-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.order-lg-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.3333333333%}.offset-lg-2{margin-left:16.6666666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.3333333333%}.offset-lg-5{margin-left:41.6666666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.3333333333%}.offset-lg-8{margin-left:66.6666666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.3333333333%}.offset-lg-11{margin-left:91.6666666667%}}@media (min-width: 1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-xl-auto{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-xl-1{-webkit-box-flex:0;-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-xl-2{-webkit-box-flex:0;-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-xl-3{-webkit-box-flex:0;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-webkit-box-flex:0;-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-xl-5{-webkit-box-flex:0;-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-xl-6{-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-webkit-box-flex:0;-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-xl-8{-webkit-box-flex:0;-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-xl-9{-webkit-box-flex:0;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-webkit-box-flex:0;-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-xl-11{-webkit-box-flex:0;-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-xl-12{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}.order-xl-last{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.order-xl-0{-webkit-box-ordinal-group:1;-ms-flex-order:0;order:0}.order-xl-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.order-xl-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.order-xl-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.order-xl-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.order-xl-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.order-xl-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.order-xl-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.order-xl-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.order-xl-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.order-xl-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.order-xl-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.order-xl-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.3333333333%}.offset-xl-2{margin-left:16.6666666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.3333333333%}.offset-xl-5{margin-left:41.6666666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.3333333333%}.offset-xl-8{margin-left:66.6666666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.3333333333%}.offset-xl-11{margin-left:91.6666666667%}}.table{width:100%;margin-bottom:1rem;color:#343a40}.table th,.table td{padding:0.75rem;vertical-align:top;border-top:1px solid rgba(0,0,0,0.1)}.table thead th{vertical-align:bottom;border-bottom:2px solid rgba(0,0,0,0.1)}.table tbody+tbody{border-top:2px solid rgba(0,0,0,0.1)}.table-sm th,.table-sm td{padding:0.3rem}.table-bordered{border:1px solid rgba(0,0,0,0.1)}.table-bordered th,.table-bordered td{border:1px solid rgba(0,0,0,0.1)}.table-bordered thead th,.table-bordered thead td{border-bottom-width:2px}.table-borderless th,.table-borderless td,.table-borderless thead th,.table-borderless tbody+tbody{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,0.05)}.table-hover tbody tr:hover{color:#343a40;background-color:rgba(0,0,0,0.075)}.table-primary,.table-primary\u003eth,.table-primary\u003etd{background-color:#cbdcfa}.table-primary th,.table-primary td,.table-primary thead th,.table-primary tbody+tbody{border-color:#9ebef5}.table-hover .table-primary:hover{background-color:#b4ccf8}.table-hover .table-primary:hover\u003etd,.table-hover .table-primary:hover\u003eth{background-color:#b4ccf8}.table-secondary,.table-secondary\u003eth,.table-secondary\u003etd{background-color:#e8eaed}.table-secondary th,.table-secondary td,.table-secondary thead th,.table-secondary tbody+tbody{border-color:#d4d9dd}.table-hover .table-secondary:hover{background-color:#dadde2}.table-hover .table-secondary:hover\u003etd,.table-hover .table-secondary:hover\u003eth{background-color:#dadde2}.table-success,.table-success\u003eth,.table-success\u003etd{background-color:#b8ebd8}.table-success th,.table-success td,.table-success thead th,.table-success tbody+tbody{border-color:#7bdab7}.table-hover .table-success:hover{background-color:#a4e5cd}.table-hover .table-success:hover\u003etd,.table-hover .table-success:hover\u003eth{background-color:#a4e5cd}.table-info,.table-info\u003eth,.table-info\u003etd{background-color:#bee5eb}.table-info th,.table-info td,.table-info thead th,.table-info tbody+tbody{border-color:#86cfda}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover\u003etd,.table-hover .table-info:hover\u003eth{background-color:#abdde5}.table-warning,.table-warning\u003eth,.table-warning\u003etd{background-color:#fbe8cd}.table-warning th,.table-warning td,.table-warning thead th,.table-warning tbody+tbody{border-color:#f7d4a3}.table-hover .table-warning:hover{background-color:#f9ddb5}.table-hover .table-warning:hover\u003etd,.table-hover .table-warning:hover\u003eth{background-color:#f9ddb5}.table-danger,.table-danger\u003eth,.table-danger\u003etd{background-color:#f4cfce}.table-danger th,.table-danger td,.table-danger thead th,.table-danger tbody+tbody{border-color:#eba6a3}.table-hover .table-danger:hover{background-color:#efbbb9}.table-hover .table-danger:hover\u003etd,.table-hover .table-danger:hover\u003eth{background-color:#efbbb9}.table-light,.table-light\u003eth,.table-light\u003etd{background-color:#fdfdfe}.table-light th,.table-light td,.table-light thead th,.table-light tbody+tbody{border-color:#fbfcfc}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover\u003etd,.table-hover .table-light:hover\u003eth{background-color:#ececf6}.table-dark,.table-dark\u003eth,.table-dark\u003etd{background-color:#c6c8ca}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:#95999c}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover\u003etd,.table-hover .table-dark:hover\u003eth{background-color:#b9bbbe}.table-active,.table-active\u003eth,.table-active\u003etd{background-color:rgba(0,0,0,0.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,0.075)}.table-hover .table-active:hover\u003etd,.table-hover .table-active:hover\u003eth{background-color:rgba(0,0,0,0.075)}.table .thead-dark th{color:#fff;background-color:#343a40;border-color:#454d55}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:rgba(0,0,0,0.1)}.table-dark{color:#fff;background-color:#343a40}.table-dark th,.table-dark td,.table-dark thead th{border-color:#454d55}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,0.05)}.table-dark.table-hover tbody tr:hover{color:#fff;background-color:rgba(255,255,255,0.075)}@media (max-width: 575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-sm\u003e.table-bordered{border:0}}@media (max-width: 767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-md\u003e.table-bordered{border:0}}@media (max-width: 991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-lg\u003e.table-bordered{border:0}}@media (max-width: 1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-xl\u003e.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive\u003e.table-bordered{border:0}.form-control{display:block;width:100%;height:calc(1.5em + 1rem + 2px);padding:0.5rem 1.1rem;font-size:1.063rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.1);border-radius:0.25rem;-webkit-transition:border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.form-control{-webkit-transition:none;transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#495057;background-color:#fff;border-color:#b9d0f8;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25)}.form-control::-webkit-input-placeholder{color:#868e96;opacity:1}.form-control::-ms-input-placeholder{color:#868e96;opacity:1}.form-control::placeholder{color:#868e96;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(0.5rem + 1px);padding-bottom:calc(0.5rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(0.5rem + 1px);padding-bottom:calc(0.5rem + 1px);font-size:1.32875rem;line-height:1.5}.col-form-label-sm{padding-top:calc(0.25rem + 1px);padding-bottom:calc(0.25rem + 1px);font-size:0.930125rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding-top:0.5rem;padding-bottom:0.5rem;margin-bottom:0;line-height:1.5;color:#343a40;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-sm,.form-control-plaintext.form-control-lg{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.5em + 0.5rem + 2px);padding:0.25rem 0.5rem;font-size:0.930125rem;line-height:1.5;border-radius:0.2rem}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:0.5rem 1rem;font-size:1.32875rem;line-height:1.5;border-radius:0.3rem}select.form-control[size],select.form-control[multiple]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:0.25rem}.form-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row\u003e.col,.form-row\u003e[class*\u003d\"col-\"]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:0.3rem;margin-left:-1.25rem}.form-check-input:disabled ~ .form-check-label{color:#868e96}.form-check-label{margin-bottom:0}.form-check-inline{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:0.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:0.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#02B875}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:.1rem;font-size:0.930125rem;line-height:1.5;color:#fff;background-color:rgba(2,184,117,0.9);border-radius:0.25rem}.was-validated .form-control:valid,.form-control.is-valid{border-color:#02B875;padding-right:calc(1.5em + 1rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u00270 0 8 8\u0027%3e%3cpath fill\u003d\u0027%2302B875\u0027 d\u003d\u0027M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\u0027/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:center right calc(0.375em + 0.25rem);background-size:calc(0.75em + 0.5rem) calc(0.75em + 0.5rem)}.was-validated .form-control:valid:focus,.form-control.is-valid:focus{border-color:#02B875;-webkit-box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25);box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25)}.was-validated .form-control:valid ~ .valid-feedback,.was-validated .form-control:valid ~ .valid-tooltip,.form-control.is-valid ~ .valid-feedback,.form-control.is-valid ~ .valid-tooltip{display:block}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + 1rem);background-position:top calc(0.375em + 0.25rem) right calc(0.375em + 0.25rem)}.was-validated .custom-select:valid,.custom-select.is-valid{border-color:#02B875;padding-right:calc((1em + 1rem) * 3 / 4 + 2.1rem);background:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u00270 0 4 5\u0027%3e%3cpath fill\u003d\u0027%23343a40\u0027 d\u003d\u0027M2 0L0 2h4zm0 5L0 3h4z\u0027/%3e%3c/svg%3e\") no-repeat right 1.1rem center/8px 10px,url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u00270 0 8 8\u0027%3e%3cpath fill\u003d\u0027%2302B875\u0027 d\u003d\u0027M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\u0027/%3e%3c/svg%3e\") #fff no-repeat center right 2.1rem/calc(0.75em + 0.5rem) calc(0.75em + 0.5rem)}.was-validated .custom-select:valid:focus,.custom-select.is-valid:focus{border-color:#02B875;-webkit-box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25);box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25)}.was-validated .custom-select:valid ~ .valid-feedback,.was-validated .custom-select:valid ~ .valid-tooltip,.custom-select.is-valid ~ .valid-feedback,.custom-select.is-valid ~ .valid-tooltip{display:block}.was-validated .form-control-file:valid ~ .valid-feedback,.was-validated .form-control-file:valid ~ .valid-tooltip,.form-control-file.is-valid ~ .valid-feedback,.form-control-file.is-valid ~ .valid-tooltip{display:block}.was-validated .form-check-input:valid ~ .form-check-label,.form-check-input.is-valid ~ .form-check-label{color:#02B875}.was-validated .form-check-input:valid ~ .valid-feedback,.was-validated .form-check-input:valid ~ .valid-tooltip,.form-check-input.is-valid ~ .valid-feedback,.form-check-input.is-valid ~ .valid-tooltip{display:block}.was-validated .custom-control-input:valid ~ .custom-control-label,.custom-control-input.is-valid ~ .custom-control-label{color:#02B875}.was-validated .custom-control-input:valid ~ .custom-control-label::before,.custom-control-input.is-valid ~ .custom-control-label::before{border-color:#02B875}.was-validated .custom-control-input:valid ~ .valid-feedback,.was-validated .custom-control-input:valid ~ .valid-tooltip,.custom-control-input.is-valid ~ .valid-feedback,.custom-control-input.is-valid ~ .valid-tooltip{display:block}.was-validated .custom-control-input:valid:checked ~ .custom-control-label::before,.custom-control-input.is-valid:checked ~ .custom-control-label::before{border-color:#03ea95;background-color:#03ea95}.was-validated .custom-control-input:valid:focus ~ .custom-control-label::before,.custom-control-input.is-valid:focus ~ .custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25);box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25)}.was-validated .custom-control-input:valid:focus:not(:checked) ~ .custom-control-label::before,.custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label::before{border-color:#02B875}.was-validated .custom-file-input:valid ~ .custom-file-label,.custom-file-input.is-valid ~ .custom-file-label{border-color:#02B875}.was-validated .custom-file-input:valid ~ .valid-feedback,.was-validated .custom-file-input:valid ~ .valid-tooltip,.custom-file-input.is-valid ~ .valid-feedback,.custom-file-input.is-valid ~ .valid-tooltip{display:block}.was-validated .custom-file-input:valid:focus ~ .custom-file-label,.custom-file-input.is-valid:focus ~ .custom-file-label{border-color:#02B875;-webkit-box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25);box-shadow:0 0 0 0.2rem rgba(2,184,117,0.25)}.invalid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#d9534f}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:.1rem;font-size:0.930125rem;line-height:1.5;color:#fff;background-color:rgba(217,83,79,0.9);border-radius:0.25rem}.was-validated .form-control:invalid,.form-control.is-invalid{border-color:#d9534f;padding-right:calc(1.5em + 1rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 fill\u003d\u0027%23d9534f\u0027 viewBox\u003d\u0027-2 -2 7 7\u0027%3e%3cpath stroke\u003d\u0027%23d9534f\u0027 d\u003d\u0027M0 0l3 3m0-3L0 3\u0027/%3e%3ccircle r\u003d\u0027.5\u0027/%3e%3ccircle cx\u003d\u00273\u0027 r\u003d\u0027.5\u0027/%3e%3ccircle cy\u003d\u00273\u0027 r\u003d\u0027.5\u0027/%3e%3ccircle cx\u003d\u00273\u0027 cy\u003d\u00273\u0027 r\u003d\u0027.5\u0027/%3e%3c/svg%3E\");background-repeat:no-repeat;background-position:center right calc(0.375em + 0.25rem);background-size:calc(0.75em + 0.5rem) calc(0.75em + 0.5rem)}.was-validated .form-control:invalid:focus,.form-control.is-invalid:focus{border-color:#d9534f;-webkit-box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25);box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25)}.was-validated .form-control:invalid ~ .invalid-feedback,.was-validated .form-control:invalid ~ .invalid-tooltip,.form-control.is-invalid ~ .invalid-feedback,.form-control.is-invalid ~ .invalid-tooltip{display:block}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + 1rem);background-position:top calc(0.375em + 0.25rem) right calc(0.375em + 0.25rem)}.was-validated .custom-select:invalid,.custom-select.is-invalid{border-color:#d9534f;padding-right:calc((1em + 1rem) * 3 / 4 + 2.1rem);background:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u00270 0 4 5\u0027%3e%3cpath fill\u003d\u0027%23343a40\u0027 d\u003d\u0027M2 0L0 2h4zm0 5L0 3h4z\u0027/%3e%3c/svg%3e\") no-repeat right 1.1rem center/8px 10px,url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 fill\u003d\u0027%23d9534f\u0027 viewBox\u003d\u0027-2 -2 7 7\u0027%3e%3cpath stroke\u003d\u0027%23d9534f\u0027 d\u003d\u0027M0 0l3 3m0-3L0 3\u0027/%3e%3ccircle r\u003d\u0027.5\u0027/%3e%3ccircle cx\u003d\u00273\u0027 r\u003d\u0027.5\u0027/%3e%3ccircle cy\u003d\u00273\u0027 r\u003d\u0027.5\u0027/%3e%3ccircle cx\u003d\u00273\u0027 cy\u003d\u00273\u0027 r\u003d\u0027.5\u0027/%3e%3c/svg%3E\") #fff no-repeat center right 2.1rem/calc(0.75em + 0.5rem) calc(0.75em + 0.5rem)}.was-validated .custom-select:invalid:focus,.custom-select.is-invalid:focus{border-color:#d9534f;-webkit-box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25);box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25)}.was-validated .custom-select:invalid ~ .invalid-feedback,.was-validated .custom-select:invalid ~ .invalid-tooltip,.custom-select.is-invalid ~ .invalid-feedback,.custom-select.is-invalid ~ .invalid-tooltip{display:block}.was-validated .form-control-file:invalid ~ .invalid-feedback,.was-validated .form-control-file:invalid ~ .invalid-tooltip,.form-control-file.is-invalid ~ .invalid-feedback,.form-control-file.is-invalid ~ .invalid-tooltip{display:block}.was-validated .form-check-input:invalid ~ .form-check-label,.form-check-input.is-invalid ~ .form-check-label{color:#d9534f}.was-validated .form-check-input:invalid ~ .invalid-feedback,.was-validated .form-check-input:invalid ~ .invalid-tooltip,.form-check-input.is-invalid ~ .invalid-feedback,.form-check-input.is-invalid ~ .invalid-tooltip{display:block}.was-validated .custom-control-input:invalid ~ .custom-control-label,.custom-control-input.is-invalid ~ .custom-control-label{color:#d9534f}.was-validated .custom-control-input:invalid ~ .custom-control-label::before,.custom-control-input.is-invalid ~ .custom-control-label::before{border-color:#d9534f}.was-validated .custom-control-input:invalid ~ .invalid-feedback,.was-validated .custom-control-input:invalid ~ .invalid-tooltip,.custom-control-input.is-invalid ~ .invalid-feedback,.custom-control-input.is-invalid ~ .invalid-tooltip{display:block}.was-validated .custom-control-input:invalid:checked ~ .custom-control-label::before,.custom-control-input.is-invalid:checked ~ .custom-control-label::before{border-color:#e27c79;background-color:#e27c79}.was-validated .custom-control-input:invalid:focus ~ .custom-control-label::before,.custom-control-input.is-invalid:focus ~ .custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25);box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25)}.was-validated .custom-control-input:invalid:focus:not(:checked) ~ .custom-control-label::before,.custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-label::before{border-color:#d9534f}.was-validated .custom-file-input:invalid ~ .custom-file-label,.custom-file-input.is-invalid ~ .custom-file-label{border-color:#d9534f}.was-validated .custom-file-input:invalid ~ .invalid-feedback,.was-validated .custom-file-input:invalid ~ .invalid-tooltip,.custom-file-input.is-invalid ~ .invalid-feedback,.custom-file-input.is-invalid ~ .invalid-tooltip{display:block}.was-validated .custom-file-input:invalid:focus ~ .custom-file-label,.custom-file-input.is-invalid:focus ~ .custom-file-label{border-color:#d9534f;-webkit-box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25);box-shadow:0 0 0 0.2rem rgba(217,83,79,0.25)}.form-inline{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width: 576px){.form-inline label{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .input-group,.form-inline .custom-select{width:auto}.form-inline .form-check{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:0.25rem;margin-left:0}.form-inline .custom-control{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#343a40;text-align:center;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:0.5rem 1.1rem;font-size:1.063rem;line-height:1.5;border-radius:0.25rem;-webkit-transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.btn{-webkit-transition:none;transition:none}}.btn:hover{color:#343a40;text-decoration:none}.btn:focus,.btn.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25)}.btn.disabled,.btn:disabled{opacity:0.65}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#4582EC;border-color:#4582EC}.btn-primary:hover{color:#fff;background-color:#226be8;border-color:#1863e6}.btn-primary:focus,.btn-primary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(97,149,239,0.5);box-shadow:0 0 0 0.2rem rgba(97,149,239,0.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#4582EC;border-color:#4582EC}.btn-primary:not(:disabled):not(.disabled):active,.btn-primary:not(:disabled):not(.disabled).active,.show\u003e.btn-primary.dropdown-toggle{color:#fff;background-color:#1863e6;border-color:#165edb}.btn-primary:not(:disabled):not(.disabled):active:focus,.btn-primary:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-primary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(97,149,239,0.5);box-shadow:0 0 0 0.2rem rgba(97,149,239,0.5)}.btn-secondary{color:#fff;background-color:#adb5bd;border-color:#adb5bd}.btn-secondary:hover{color:#fff;background-color:#98a2ac;border-color:#919ca6}.btn-secondary:focus,.btn-secondary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(185,192,199,0.5);box-shadow:0 0 0 0.2rem rgba(185,192,199,0.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#adb5bd;border-color:#adb5bd}.btn-secondary:not(:disabled):not(.disabled):active,.btn-secondary:not(:disabled):not(.disabled).active,.show\u003e.btn-secondary.dropdown-toggle{color:#fff;background-color:#919ca6;border-color:#8a95a1}.btn-secondary:not(:disabled):not(.disabled):active:focus,.btn-secondary:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-secondary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(185,192,199,0.5);box-shadow:0 0 0 0.2rem rgba(185,192,199,0.5)}.btn-success{color:#fff;background-color:#02B875;border-color:#02B875}.btn-success:hover{color:#fff;background-color:#02925d;border-color:#018655}.btn-success:focus,.btn-success.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(40,195,138,0.5);box-shadow:0 0 0 0.2rem rgba(40,195,138,0.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#02B875;border-color:#02B875}.btn-success:not(:disabled):not(.disabled):active,.btn-success:not(:disabled):not(.disabled).active,.show\u003e.btn-success.dropdown-toggle{color:#fff;background-color:#018655;border-color:#01794d}.btn-success:not(:disabled):not(.disabled):active:focus,.btn-success:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-success.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(40,195,138,0.5);box-shadow:0 0 0 0.2rem rgba(40,195,138,0.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info:focus,.btn-info.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5);box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled):active,.btn-info:not(:disabled):not(.disabled).active,.show\u003e.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled):active:focus,.btn-info:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-info.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5);box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5)}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-warning:hover{color:#fff;background-color:#ed9d2b;border-color:#ec971f}.btn-warning:focus,.btn-warning.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(242,185,105,0.5);box-shadow:0 0 0 0.2rem rgba(242,185,105,0.5)}.btn-warning.disabled,.btn-warning:disabled{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-warning:not(:disabled):not(.disabled):active,.btn-warning:not(:disabled):not(.disabled).active,.show\u003e.btn-warning.dropdown-toggle{color:#fff;background-color:#ec971f;border-color:#ea9214}.btn-warning:not(:disabled):not(.disabled):active:focus,.btn-warning:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-warning.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(242,185,105,0.5);box-shadow:0 0 0 0.2rem rgba(242,185,105,0.5)}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-danger:hover{color:#fff;background-color:#d23430;border-color:#c9302c}.btn-danger:focus,.btn-danger.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(223,109,105,0.5);box-shadow:0 0 0 0.2rem rgba(223,109,105,0.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-danger:not(:disabled):not(.disabled):active,.btn-danger:not(:disabled):not(.disabled).active,.show\u003e.btn-danger.dropdown-toggle{color:#fff;background-color:#c9302c;border-color:#bf2e29}.btn-danger:not(:disabled):not(.disabled):active:focus,.btn-danger:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-danger.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(223,109,105,0.5);box-shadow:0 0 0 0.2rem rgba(223,109,105,0.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light:focus,.btn-light.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5);box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled):active,.btn-light:not(:disabled):not(.disabled).active,.show\u003e.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled):active:focus,.btn-light:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-light.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5);box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark:focus,.btn-dark.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5);box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled):active,.btn-dark:not(:disabled):not(.disabled).active,.show\u003e.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled):active:focus,.btn-dark:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-dark.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5);box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5)}.btn-outline-primary{color:#4582EC;border-color:#4582EC}.btn-outline-primary:hover{color:#fff;background-color:#4582EC;border-color:#4582EC}.btn-outline-primary:focus,.btn-outline-primary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.5);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#4582EC;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled):active,.btn-outline-primary:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#4582EC;border-color:#4582EC}.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-primary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.5);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.5)}.btn-outline-secondary{color:#adb5bd;border-color:#adb5bd}.btn-outline-secondary:hover{color:#fff;background-color:#adb5bd;border-color:#adb5bd}.btn-outline-secondary:focus,.btn-outline-secondary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(173,181,189,0.5);box-shadow:0 0 0 0.2rem rgba(173,181,189,0.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#adb5bd;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled):active,.btn-outline-secondary:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#adb5bd;border-color:#adb5bd}.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-secondary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(173,181,189,0.5);box-shadow:0 0 0 0.2rem rgba(173,181,189,0.5)}.btn-outline-success{color:#02B875;border-color:#02B875}.btn-outline-success:hover{color:#fff;background-color:#02B875;border-color:#02B875}.btn-outline-success:focus,.btn-outline-success.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(2,184,117,0.5);box-shadow:0 0 0 0.2rem rgba(2,184,117,0.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#02B875;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled):active,.btn-outline-success:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-success.dropdown-toggle{color:#fff;background-color:#02B875;border-color:#02B875}.btn-outline-success:not(:disabled):not(.disabled):active:focus,.btn-outline-success:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-success.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(2,184,117,0.5);box-shadow:0 0 0 0.2rem rgba(2,184,117,0.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:focus,.btn-outline-info.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5);box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled):active,.btn-outline-info:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled):active:focus,.btn-outline-info:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-info.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5);box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.btn-outline-warning{color:#f0ad4e;border-color:#f0ad4e}.btn-outline-warning:hover{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-outline-warning:focus,.btn-outline-warning.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(240,173,78,0.5);box-shadow:0 0 0 0.2rem rgba(240,173,78,0.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#f0ad4e;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled):active,.btn-outline-warning:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-warning.dropdown-toggle{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-warning.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(240,173,78,0.5);box-shadow:0 0 0 0.2rem rgba(240,173,78,0.5)}.btn-outline-danger{color:#d9534f;border-color:#d9534f}.btn-outline-danger:hover{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-outline-danger:focus,.btn-outline-danger.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(217,83,79,0.5);box-shadow:0 0 0 0.2rem rgba(217,83,79,0.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#d9534f;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled):active,.btn-outline-danger:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-danger.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(217,83,79,0.5);box-shadow:0 0 0 0.2rem rgba(217,83,79,0.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:focus,.btn-outline-light.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5);box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled):active,.btn-outline-light:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled):active:focus,.btn-outline-light:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-light.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5);box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:focus,.btn-outline-dark.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5);box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled):active,.btn-outline-dark:not(:disabled):not(.disabled).active,.show\u003e.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.show\u003e.btn-outline-dark.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5);box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.btn-link{font-weight:400;color:#4582EC;text-decoration:none}.btn-link:hover{color:#1559cf;text-decoration:underline}.btn-link:focus,.btn-link.focus{text-decoration:underline;-webkit-box-shadow:none;box-shadow:none}.btn-link:disabled,.btn-link.disabled{color:#868e96;pointer-events:none}.btn-lg,.btn-group-lg\u003e.btn{padding:0.5rem 1rem;font-size:1.32875rem;line-height:1.5;border-radius:0.3rem}.btn-sm,.btn-group-sm\u003e.btn{padding:0.25rem 0.5rem;font-size:0.930125rem;line-height:1.5;border-radius:0.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:0.5rem}input[type\u003d\"submit\"].btn-block,input[type\u003d\"reset\"].btn-block,input[type\u003d\"button\"].btn-block{width:100%}.fade{-webkit-transition:opacity 0.15s linear;transition:opacity 0.15s linear}@media (prefers-reduced-motion: reduce){.fade{-webkit-transition:none;transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition:height 0.35s ease;transition:height 0.35s ease}@media (prefers-reduced-motion: reduce){.collapsing{-webkit-transition:none;transition:none}}.dropup,.dropright,.dropdown,.dropleft{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid;border-right:0.3em solid transparent;border-bottom:0;border-left:0.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:0.5rem 0;margin:0.125rem 0 0;font-size:1.063rem;color:#343a40;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.15);border-radius:0.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width: 576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width: 768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width: 992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width: 1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:0.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0;border-right:0.3em solid transparent;border-bottom:0.3em solid;border-left:0.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:0.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid transparent;border-right:0;border-bottom:0.3em solid transparent;border-left:0.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:0.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\"}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid transparent;border-right:0.3em solid;border-bottom:0.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^\u003d\"top\"],.dropdown-menu[x-placement^\u003d\"right\"],.dropdown-menu[x-placement^\u003d\"bottom\"],.dropdown-menu[x-placement^\u003d\"left\"]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:0.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:0.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:hover,.dropdown-item:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#4582EC}.dropdown-item.disabled,.dropdown-item:disabled{color:#868e96;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:0.5rem 1.5rem;margin-bottom:0;font-size:0.930125rem;color:#868e96;white-space:nowrap}.dropdown-item-text{display:block;padding:0.25rem 1.5rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group\u003e.btn,.btn-group-vertical\u003e.btn{position:relative;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.btn-group\u003e.btn:hover,.btn-group-vertical\u003e.btn:hover{z-index:1}.btn-group\u003e.btn:focus,.btn-group\u003e.btn:active,.btn-group\u003e.btn.active,.btn-group-vertical\u003e.btn:focus,.btn-group-vertical\u003e.btn:active,.btn-group-vertical\u003e.btn.active{z-index:1}.btn-toolbar{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group\u003e.btn:not(:first-child),.btn-group\u003e.btn-group:not(:first-child){margin-left:-1px}.btn-group\u003e.btn:not(:last-child):not(.dropdown-toggle),.btn-group\u003e.btn-group:not(:last-child)\u003e.btn{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group\u003e.btn:not(:first-child),.btn-group\u003e.btn-group:not(:first-child)\u003e.btn{border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:0.825rem;padding-left:0.825rem}.dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-sm+.dropdown-toggle-split,.btn-group-sm\u003e.btn+.dropdown-toggle-split{padding-right:0.375rem;padding-left:0.375rem}.btn-lg+.dropdown-toggle-split,.btn-group-lg\u003e.btn+.dropdown-toggle-split{padding-right:0.75rem;padding-left:0.75rem}.btn-group-vertical{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.btn-group-vertical\u003e.btn,.btn-group-vertical\u003e.btn-group{width:100%}.btn-group-vertical\u003e.btn:not(:first-child),.btn-group-vertical\u003e.btn-group:not(:first-child){margin-top:-1px}.btn-group-vertical\u003e.btn:not(:last-child):not(.dropdown-toggle),.btn-group-vertical\u003e.btn-group:not(:last-child)\u003e.btn{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical\u003e.btn:not(:first-child),.btn-group-vertical\u003e.btn-group:not(:first-child)\u003e.btn{border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle\u003e.btn,.btn-group-toggle\u003e.btn-group\u003e.btn{margin-bottom:0}.btn-group-toggle\u003e.btn input[type\u003d\"radio\"],.btn-group-toggle\u003e.btn input[type\u003d\"checkbox\"],.btn-group-toggle\u003e.btn-group\u003e.btn input[type\u003d\"radio\"],.btn-group-toggle\u003e.btn-group\u003e.btn input[type\u003d\"checkbox\"]{position:absolute;clip:rect(0, 0, 0, 0);pointer-events:none}.input-group{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group\u003e.form-control,.input-group\u003e.form-control-plaintext,.input-group\u003e.custom-select,.input-group\u003e.custom-file{position:relative;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;margin-bottom:0}.input-group\u003e.form-control+.form-control,.input-group\u003e.form-control+.custom-select,.input-group\u003e.form-control+.custom-file,.input-group\u003e.form-control-plaintext+.form-control,.input-group\u003e.form-control-plaintext+.custom-select,.input-group\u003e.form-control-plaintext+.custom-file,.input-group\u003e.custom-select+.form-control,.input-group\u003e.custom-select+.custom-select,.input-group\u003e.custom-select+.custom-file,.input-group\u003e.custom-file+.form-control,.input-group\u003e.custom-file+.custom-select,.input-group\u003e.custom-file+.custom-file{margin-left:-1px}.input-group\u003e.form-control:focus,.input-group\u003e.custom-select:focus,.input-group\u003e.custom-file .custom-file-input:focus ~ .custom-file-label{z-index:3}.input-group\u003e.custom-file .custom-file-input:focus{z-index:4}.input-group\u003e.form-control:not(:last-child),.input-group\u003e.custom-select:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group\u003e.form-control:not(:first-child),.input-group\u003e.custom-select:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group\u003e.custom-file{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.input-group\u003e.custom-file:not(:last-child) .custom-file-label,.input-group\u003e.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group\u003e.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-prepend,.input-group-append{display:-webkit-box;display:-ms-flexbox;display:flex}.input-group-prepend .btn,.input-group-append .btn{position:relative;z-index:2}.input-group-prepend .btn:focus,.input-group-append .btn:focus{z-index:3}.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.input-group-text,.input-group-append .input-group-text+.btn{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0.5rem 1.1rem;margin-bottom:0;font-size:1.063rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid rgba(0,0,0,0.1);border-radius:0.25rem}.input-group-text input[type\u003d\"radio\"],.input-group-text input[type\u003d\"checkbox\"]{margin-top:0}.input-group-lg\u003e.form-control:not(textarea),.input-group-lg\u003e.custom-select{height:calc(1.5em + 1rem + 2px)}.input-group-lg\u003e.form-control,.input-group-lg\u003e.custom-select,.input-group-lg\u003e.input-group-prepend\u003e.input-group-text,.input-group-lg\u003e.input-group-append\u003e.input-group-text,.input-group-lg\u003e.input-group-prepend\u003e.btn,.input-group-lg\u003e.input-group-append\u003e.btn{padding:0.5rem 1rem;font-size:1.32875rem;line-height:1.5;border-radius:0.3rem}.input-group-sm\u003e.form-control:not(textarea),.input-group-sm\u003e.custom-select{height:calc(1.5em + 0.5rem + 2px)}.input-group-sm\u003e.form-control,.input-group-sm\u003e.custom-select,.input-group-sm\u003e.input-group-prepend\u003e.input-group-text,.input-group-sm\u003e.input-group-append\u003e.input-group-text,.input-group-sm\u003e.input-group-prepend\u003e.btn,.input-group-sm\u003e.input-group-append\u003e.btn{padding:0.25rem 0.5rem;font-size:0.930125rem;line-height:1.5;border-radius:0.2rem}.input-group-lg\u003e.custom-select,.input-group-sm\u003e.custom-select{padding-right:2.1rem}.input-group\u003e.input-group-prepend\u003e.btn,.input-group\u003e.input-group-prepend\u003e.input-group-text,.input-group\u003e.input-group-append:not(:last-child)\u003e.btn,.input-group\u003e.input-group-append:not(:last-child)\u003e.input-group-text,.input-group\u003e.input-group-append:last-child\u003e.btn:not(:last-child):not(.dropdown-toggle),.input-group\u003e.input-group-append:last-child\u003e.input-group-text:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group\u003e.input-group-append\u003e.btn,.input-group\u003e.input-group-append\u003e.input-group-text,.input-group\u003e.input-group-prepend:not(:first-child)\u003e.btn,.input-group\u003e.input-group-prepend:not(:first-child)\u003e.input-group-text,.input-group\u003e.input-group-prepend:first-child\u003e.btn:not(:first-child),.input-group\u003e.input-group-prepend:first-child\u003e.input-group-text:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5945rem;padding-left:1.5rem}.custom-control-inline{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked ~ .custom-control-label::before{color:#fff;border-color:#4582EC;background-color:#4582EC}.custom-control-input:focus ~ .custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25)}.custom-control-input:focus:not(:checked) ~ .custom-control-label::before{border-color:#b9d0f8}.custom-control-input:not(:disabled):active ~ .custom-control-label::before{color:#fff;background-color:#e7effd;border-color:#e7effd}.custom-control-input:disabled ~ .custom-control-label{color:#868e96}.custom-control-input:disabled ~ .custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:0.29725rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:\"\";background-color:#fff;border:#adb5bd solid 1px}.custom-control-label::after{position:absolute;top:0.29725rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:\"\";background:no-repeat 50% / 50% 50%}.custom-checkbox .custom-control-label::before{border-radius:0.25rem}.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u00270 0 8 8\u0027%3e%3cpath fill\u003d\u0027%23fff\u0027 d\u003d\u0027M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z\u0027/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before{border-color:#4582EC;background-color:#4582EC}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u00270 0 4 4\u0027%3e%3cpath stroke\u003d\u0027%23fff\u0027 d\u003d\u0027M0 2h4\u0027/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(69,130,236,0.5)}.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-control-label::before{background-color:rgba(69,130,236,0.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked ~ .custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u0027-4 -4 8 8\u0027%3e%3ccircle r\u003d\u00273\u0027 fill\u003d\u0027%23fff\u0027/%3e%3c/svg%3e\")}.custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(69,130,236,0.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:0.5rem}.custom-switch .custom-control-label::after{top:calc(0.29725rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:0.5rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-switch .custom-control-label::after{-webkit-transition:none;transition:none}}.custom-switch .custom-control-input:checked ~ .custom-control-label::after{background-color:#fff;-webkit-transform:translateX(0.75rem);transform:translateX(0.75rem)}.custom-switch .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(69,130,236,0.5)}.custom-select{display:inline-block;width:100%;height:calc(1.5em + 1rem + 2px);padding:0.5rem 2.1rem 0.5rem 1.1rem;font-size:1.063rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 viewBox\u003d\u00270 0 4 5\u0027%3e%3cpath fill\u003d\u0027%23343a40\u0027 d\u003d\u0027M2 0L0 2h4zm0 5L0 3h4z\u0027/%3e%3c/svg%3e\") no-repeat right 1.1rem center/8px 10px;background-color:#fff;border:1px solid rgba(0,0,0,0.1);border-radius:0.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#b9d0f8;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size\u003d\"1\"]){height:auto;padding-right:1.1rem;background-image:none}.custom-select:disabled{color:#868e96;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select-sm{height:calc(1.5em + 0.5rem + 2px);padding-top:0.25rem;padding-bottom:0.25rem;padding-left:0.5rem;font-size:0.930125rem}.custom-select-lg{height:calc(1.5em + 1rem + 2px);padding-top:0.5rem;padding-bottom:0.5rem;padding-left:1rem;font-size:1.32875rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1.5em + 1rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1.5em + 1rem + 2px);margin:0;opacity:0}.custom-file-input:focus ~ .custom-file-label{border-color:#b9d0f8;-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25)}.custom-file-input:disabled ~ .custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en) ~ .custom-file-label::after{content:\"Browse\"}.custom-file-input ~ .custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + 1rem + 2px);padding:0.5rem 1.1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid rgba(0,0,0,0.1);border-radius:0.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + 1rem);padding:0.5rem 1.1rem;line-height:1.5;color:#495057;content:\"Browse\";background-color:#e9ecef;border-left:inherit;border-radius:0 0.25rem 0.25rem 0}.custom-range{width:100%;height:calc(1rem + 0.4rem);padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:none}.custom-range:focus::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(69,130,236,0.25);box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(69,130,236,0.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(69,130,236,0.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(69,130,236,0.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-0.25rem;background-color:#4582EC;border:0;border-radius:1rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#e7effd}.custom-range::-webkit-slider-runnable-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#ddd;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#4582EC;border:0;border-radius:1rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-moz-range-thumb{-webkit-transition:none;transition:none}}.custom-range::-moz-range-thumb:active{background-color:#e7effd}.custom-range::-moz-range-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#ddd;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:0.2rem;margin-left:0.2rem;background-color:#4582EC;border:0;border-radius:1rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-ms-thumb{-webkit-transition:none;transition:none}}.custom-range::-ms-thumb:active{background-color:#e7effd}.custom-range::-ms-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:0.5rem}.custom-range::-ms-fill-lower{background-color:#ddd;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#ddd;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-control-label::before,.custom-file-label,.custom-select{-webkit-transition:none;transition:none}}.nav{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:0.5rem 1rem}.nav-link:hover,.nav-link:focus{text-decoration:none}.nav-link.disabled{color:#868e96;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.nav-tabs .nav-link:hover,.nav-tabs .nav-link:focus{border-color:#e9ecef #e9ecef #ddd}.nav-tabs .nav-link.disabled{color:#868e96;background-color:transparent;border-color:transparent}.nav-tabs .nav-link.active,.nav-tabs .nav-item.show .nav-link{color:#495057;background-color:#fff;border-color:#ddd #ddd #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:0.25rem}.nav-pills .nav-link.active,.nav-pills .show\u003e.nav-link{color:#fff;background-color:#4582EC}.nav-fill .nav-item{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content\u003e.tab-pane{display:none}.tab-content\u003e.active{display:block}.navbar{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0.5rem 1rem}.navbar\u003e.container,.navbar\u003e.container-fluid{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:0.3006875rem;padding-bottom:0.3006875rem;margin-right:1rem;font-size:1.32875rem;line-height:inherit;white-space:nowrap}.navbar-brand:hover,.navbar-brand:focus{text-decoration:none}.navbar-nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:0.5rem;padding-bottom:0.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:0.25rem 0.75rem;font-size:1.32875rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:0.25rem}.navbar-toggler:hover,.navbar-toggler:focus{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width: 575.98px){.navbar-expand-sm\u003e.container,.navbar-expand-sm\u003e.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 576px){.navbar-expand-sm{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-sm\u003e.container,.navbar-expand-sm\u003e.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width: 767.98px){.navbar-expand-md\u003e.container,.navbar-expand-md\u003e.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 768px){.navbar-expand-md{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-md\u003e.container,.navbar-expand-md\u003e.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width: 991.98px){.navbar-expand-lg\u003e.container,.navbar-expand-lg\u003e.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 992px){.navbar-expand-lg{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-lg\u003e.container,.navbar-expand-lg\u003e.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width: 1199.98px){.navbar-expand-xl\u003e.container,.navbar-expand-xl\u003e.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 1200px){.navbar-expand-xl{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-xl\u003e.container,.navbar-expand-xl\u003e.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand\u003e.container,.navbar-expand\u003e.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand\u003e.container,.navbar-expand\u003e.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:#343a40}.navbar-light .navbar-brand:hover,.navbar-light .navbar-brand:focus{color:#343a40}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,0.5)}.navbar-light .navbar-nav .nav-link:hover,.navbar-light .navbar-nav .nav-link:focus{color:#343a40}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,0.3)}.navbar-light .navbar-nav .show\u003e.nav-link,.navbar-light .navbar-nav .active\u003e.nav-link,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .nav-link.active{color:#343a40}.navbar-light .navbar-toggler{color:rgba(0,0,0,0.5);border-color:rgba(0,0,0,0.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg viewBox\u003d\u00270 0 30 30\u0027 xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027%3e%3cpath stroke\u003d\u0027rgba(0, 0, 0, 0.5)\u0027 stroke-width\u003d\u00272\u0027 stroke-linecap\u003d\u0027round\u0027 stroke-miterlimit\u003d\u002710\u0027 d\u003d\u0027M4 7h22M4 15h22M4 23h22\u0027/%3e%3c/svg%3e\")}.navbar-light .navbar-text{color:rgba(0,0,0,0.5)}.navbar-light .navbar-text a{color:#343a40}.navbar-light .navbar-text a:hover,.navbar-light .navbar-text a:focus{color:#343a40}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:hover,.navbar-dark .navbar-brand:focus{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,0.6)}.navbar-dark .navbar-nav .nav-link:hover,.navbar-dark .navbar-nav .nav-link:focus{color:#fff}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,0.25)}.navbar-dark .navbar-nav .show\u003e.nav-link,.navbar-dark .navbar-nav .active\u003e.nav-link,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .nav-link.active{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,0.6);border-color:rgba(255,255,255,0.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg viewBox\u003d\u00270 0 30 30\u0027 xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027%3e%3cpath stroke\u003d\u0027rgba(255, 255, 255, 0.6)\u0027 stroke-width\u003d\u00272\u0027 stroke-linecap\u003d\u0027round\u0027 stroke-miterlimit\u003d\u002710\u0027 d\u003d\u0027M4 7h22M4 15h22M4 23h22\u0027/%3e%3c/svg%3e\")}.navbar-dark .navbar-text{color:rgba(255,255,255,0.6)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:hover,.navbar-dark .navbar-text a:focus{color:#fff}.card{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,0.125);border-radius:0.25rem}.card\u003ehr{margin-right:0;margin-left:0}.card\u003e.list-group:first-child .list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.card\u003e.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.card-body{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:0.75rem}.card-subtitle{margin-top:-0.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:0.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,0.03);border-bottom:1px solid rgba(0,0,0,0.125)}.card-header:first-child{border-radius:calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:0.75rem 1.25rem;background-color:rgba(0,0,0,0.03);border-top:1px solid rgba(0,0,0,0.125)}.card-footer:last-child{border-radius:0 0 calc(0.25rem - 1px) calc(0.25rem - 1px)}.card-header-tabs{margin-right:-0.625rem;margin-bottom:-0.75rem;margin-left:-0.625rem;border-bottom:0}.card-header-pills{margin-right:-0.625rem;margin-left:-0.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img{width:100%;border-radius:calc(0.25rem - 1px)}.card-img-top{width:100%;border-top-left-radius:calc(0.25rem - 1px);border-top-right-radius:calc(0.25rem - 1px)}.card-img-bottom{width:100%;border-bottom-right-radius:calc(0.25rem - 1px);border-bottom-left-radius:calc(0.25rem - 1px)}.card-deck{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.card-deck .card{margin-bottom:15px}@media (min-width: 576px){.card-deck{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 0 0%;flex:1 0 0%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-right:15px;margin-bottom:0;margin-left:15px}}.card-group{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.card-group\u003e.card{margin-bottom:15px}@media (min-width: 576px){.card-group{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group\u003e.card{-webkit-box-flex:1;-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group\u003e.card+.card{margin-left:0;border-left:0}.card-group\u003e.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group\u003e.card:not(:last-child) .card-img-top,.card-group\u003e.card:not(:last-child) .card-header{border-top-right-radius:0}.card-group\u003e.card:not(:last-child) .card-img-bottom,.card-group\u003e.card:not(:last-child) .card-footer{border-bottom-right-radius:0}.card-group\u003e.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group\u003e.card:not(:first-child) .card-img-top,.card-group\u003e.card:not(:first-child) .card-header{border-top-left-radius:0}.card-group\u003e.card:not(:first-child) .card-img-bottom,.card-group\u003e.card:not(:first-child) .card-footer{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:0.75rem}@media (min-width: 576px){.card-columns{-webkit-column-count:3;column-count:3;-webkit-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion\u003e.card{overflow:hidden}.accordion\u003e.card:not(:first-of-type) .card-header:first-child{border-radius:0}.accordion\u003e.card:not(:first-of-type):not(:last-of-type){border-bottom:0;border-radius:0}.accordion\u003e.card:first-of-type{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion\u003e.card:last-of-type{border-top-left-radius:0;border-top-right-radius:0}.accordion\u003e.card .card-header{margin-bottom:-1px}.breadcrumb{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:0.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:0.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:0.5rem;color:#868e96;content:\"/\"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#868e96}.pagination{display:-webkit-box;display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:0.25rem}.page-link{position:relative;display:block;padding:0.5rem 0.75rem;margin-left:-1px;line-height:1.25;color:#4582EC;background-color:#fff;border:1px solid #ddd}.page-link:hover{z-index:2;color:#1559cf;text-decoration:none;background-color:#e9ecef;border-color:#ddd}.page-link:focus{z-index:2;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem}.page-item:last-child .page-link{border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem}.page-item.active .page-link{z-index:1;color:#fff;background-color:#4582EC;border-color:#4582EC}.page-item.disabled .page-link{color:#868e96;pointer-events:none;cursor:auto;background-color:#fff;border-color:#ddd}.pagination-lg .page-link{padding:0.75rem 1.5rem;font-size:1.32875rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:0.3rem;border-bottom-left-radius:0.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:0.3rem;border-bottom-right-radius:0.3rem}.pagination-sm .page-link{padding:0.25rem 0.5rem;font-size:0.930125rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:0.2rem;border-bottom-left-radius:0.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:0.2rem;border-bottom-right-radius:0.2rem}.badge{display:inline-block;padding:0.6em 1.2em;font-size:75%;font-weight:normal;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0.25rem;-webkit-transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.badge{-webkit-transition:none;transition:none}}a.badge:hover,a.badge:focus{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:0.6em;padding-left:0.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#4582EC}a.badge-primary:hover,a.badge-primary:focus{color:#fff;background-color:#1863e6}a.badge-primary:focus,a.badge-primary.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(69,130,236,0.5);box-shadow:0 0 0 0.2rem rgba(69,130,236,0.5)}.badge-secondary{color:#fff;background-color:#adb5bd}a.badge-secondary:hover,a.badge-secondary:focus{color:#fff;background-color:#919ca6}a.badge-secondary:focus,a.badge-secondary.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(173,181,189,0.5);box-shadow:0 0 0 0.2rem rgba(173,181,189,0.5)}.badge-success{color:#fff;background-color:#02B875}a.badge-success:hover,a.badge-success:focus{color:#fff;background-color:#018655}a.badge-success:focus,a.badge-success.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(2,184,117,0.5);box-shadow:0 0 0 0.2rem rgba(2,184,117,0.5)}.badge-info{color:#fff;background-color:#17a2b8}a.badge-info:hover,a.badge-info:focus{color:#fff;background-color:#117a8b}a.badge-info:focus,a.badge-info.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5);box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.badge-warning{color:#fff;background-color:#f0ad4e}a.badge-warning:hover,a.badge-warning:focus{color:#fff;background-color:#ec971f}a.badge-warning:focus,a.badge-warning.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(240,173,78,0.5);box-shadow:0 0 0 0.2rem rgba(240,173,78,0.5)}.badge-danger{color:#fff;background-color:#d9534f}a.badge-danger:hover,a.badge-danger:focus{color:#fff;background-color:#c9302c}a.badge-danger:focus,a.badge-danger.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(217,83,79,0.5);box-shadow:0 0 0 0.2rem rgba(217,83,79,0.5)}.badge-light{color:#212529;background-color:#f8f9fa}a.badge-light:hover,a.badge-light:focus{color:#212529;background-color:#dae0e5}a.badge-light:focus,a.badge-light.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5);box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.badge-dark{color:#fff;background-color:#343a40}a.badge-dark:hover,a.badge-dark:focus{color:#fff;background-color:#1d2124}a.badge-dark:focus,a.badge-dark.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5);box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:0.3rem}@media (min-width: 576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:0.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:0.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4.0945rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:0.75rem 1.25rem;color:inherit}.alert-primary{color:#24447b;background-color:#dae6fb;border-color:#cbdcfa}.alert-primary hr{border-top-color:#b4ccf8}.alert-primary .alert-link{color:#182e54}.alert-secondary{color:#5a5e62;background-color:#eff0f2;border-color:#e8eaed}.alert-secondary hr{border-top-color:#dadde2}.alert-secondary .alert-link{color:#424547}.alert-success{color:#01603d;background-color:#ccf1e3;border-color:#b8ebd8}.alert-success hr{border-top-color:#a4e5cd}.alert-success .alert-link{color:#002e1d}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#7d5a29;background-color:#fcefdc;border-color:#fbe8cd}.alert-warning hr{border-top-color:#f9ddb5}.alert-warning .alert-link{color:#573e1c}.alert-danger{color:#712b29;background-color:#f7dddc;border-color:#f4cfce}.alert-danger hr{border-top-color:#efbbb9}.alert-danger .alert-link{color:#4c1d1b}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-webkit-box;display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;font-size:0.79725rem;background-color:#e9ecef;border-radius:0.25rem}.progress-bar{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#fff;text-align:center;white-space:nowrap;background-color:#4582EC;-webkit-transition:width 0.6s ease;transition:width 0.6s ease}@media (prefers-reduced-motion: reduce){.progress-bar{-webkit-transition:none;transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg, rgba(255,255,255,0.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.15) 50%, rgba(255,255,255,0.15) 75%, transparent 75%, transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.media{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.media-body{-webkit-box-flex:1;-ms-flex:1;flex:1}.list-group{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:hover,.list-group-item-action:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#343a40;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:0.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,0.125)}.list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.list-group-item.disabled,.list-group-item:disabled{color:#868e96;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#4582EC;border-color:#4582EC}.list-group-horizontal{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.list-group-horizontal .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}@media (min-width: 576px){.list-group-horizontal-sm{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-sm .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-sm .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}@media (min-width: 768px){.list-group-horizontal-md{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-md .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-md .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}@media (min-width: 992px){.list-group-horizontal-lg{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-lg .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-lg .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}@media (min-width: 1200px){.list-group-horizontal-xl{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-xl .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-xl .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}.list-group-flush .list-group-item{border-right:0;border-left:0;border-radius:0}.list-group-flush .list-group-item:last-child{margin-bottom:-1px}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{margin-bottom:0;border-bottom:0}.list-group-item-primary{color:#24447b;background-color:#cbdcfa}.list-group-item-primary.list-group-item-action:hover,.list-group-item-primary.list-group-item-action:focus{color:#24447b;background-color:#b4ccf8}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#24447b;border-color:#24447b}.list-group-item-secondary{color:#5a5e62;background-color:#e8eaed}.list-group-item-secondary.list-group-item-action:hover,.list-group-item-secondary.list-group-item-action:focus{color:#5a5e62;background-color:#dadde2}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#5a5e62;border-color:#5a5e62}.list-group-item-success{color:#01603d;background-color:#b8ebd8}.list-group-item-success.list-group-item-action:hover,.list-group-item-success.list-group-item-action:focus{color:#01603d;background-color:#a4e5cd}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#01603d;border-color:#01603d}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:hover,.list-group-item-info.list-group-item-action:focus{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#7d5a29;background-color:#fbe8cd}.list-group-item-warning.list-group-item-action:hover,.list-group-item-warning.list-group-item-action:focus{color:#7d5a29;background-color:#f9ddb5}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#7d5a29;border-color:#7d5a29}.list-group-item-danger{color:#712b29;background-color:#f4cfce}.list-group-item-danger.list-group-item-action:hover,.list-group-item-danger.list-group-item-action:focus{color:#712b29;background-color:#efbbb9}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#712b29;border-color:#712b29}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:hover,.list-group-item-light.list-group-item-action:focus{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:hover,.list-group-item-dark.list-group-item-action:focus{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5945rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):hover,.close:not(:disabled):not(.disabled):focus{opacity:.75}button.close{padding:0;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}a.close.disabled{pointer-events:none}.toast{max-width:350px;overflow:hidden;font-size:0.875rem;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border:1px solid rgba(0,0,0,0.1);-webkit-box-shadow:0 0.25rem 0.75rem rgba(0,0,0,0.1);box-shadow:0 0.25rem 0.75rem rgba(0,0,0,0.1);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);opacity:0;border-radius:0.25rem}.toast:not(:last-child){margin-bottom:0.75rem}.toast.showing{opacity:1}.toast.show{display:block;opacity:1}.toast.hide{display:none}.toast-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0.25rem 0.75rem;color:#868e96;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,0.05)}.toast-body{padding:0.75rem}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:0.5rem;pointer-events:none}.modal.fade .modal-dialog{-webkit-transition:-webkit-transform 0.3s ease-out;transition:-webkit-transform 0.3s ease-out;transition:transform 0.3s ease-out;transition:transform 0.3s ease-out, -webkit-transform 0.3s ease-out;-webkit-transform:translate(0, -50px);transform:translate(0, -50px)}@media (prefers-reduced-motion: reduce){.modal.fade .modal-dialog{-webkit-transition:none;transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal-dialog-scrollable{display:-webkit-box;display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-header,.modal-dialog-scrollable .modal-footer{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);content:\"\"}.modal-dialog-centered.modal-dialog-scrollable{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:0.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:0.5}.modal-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #ddd;border-top-left-radius:0.3rem;border-top-right-radius:0.3rem}.modal-header .close{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;padding:1rem;border-top:1px solid #ddd;border-bottom-right-radius:0.3rem;border-bottom-left-radius:0.3rem}.modal-footer\u003e:not(:first-child){margin-left:.25rem}.modal-footer\u003e:not(:last-child){margin-right:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width: 576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem)}.modal-sm{max-width:300px}}@media (min-width: 992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width: 1200px){.modal-xl{max-width:1140px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.930125rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:0.9}.tooltip .arrow{position:absolute;display:block;width:0.8rem;height:0.4rem}.tooltip .arrow::before{position:absolute;content:\"\";border-color:transparent;border-style:solid}.bs-tooltip-top,.bs-tooltip-auto[x-placement^\u003d\"top\"]{padding:0.4rem 0}.bs-tooltip-top .arrow,.bs-tooltip-auto[x-placement^\u003d\"top\"] .arrow{bottom:0}.bs-tooltip-top .arrow::before,.bs-tooltip-auto[x-placement^\u003d\"top\"] .arrow::before{top:0;border-width:0.4rem 0.4rem 0;border-top-color:#000}.bs-tooltip-right,.bs-tooltip-auto[x-placement^\u003d\"right\"]{padding:0 0.4rem}.bs-tooltip-right .arrow,.bs-tooltip-auto[x-placement^\u003d\"right\"] .arrow{left:0;width:0.4rem;height:0.8rem}.bs-tooltip-right .arrow::before,.bs-tooltip-auto[x-placement^\u003d\"right\"] .arrow::before{right:0;border-width:0.4rem 0.4rem 0.4rem 0;border-right-color:#000}.bs-tooltip-bottom,.bs-tooltip-auto[x-placement^\u003d\"bottom\"]{padding:0.4rem 0}.bs-tooltip-bottom .arrow,.bs-tooltip-auto[x-placement^\u003d\"bottom\"] .arrow{top:0}.bs-tooltip-bottom .arrow::before,.bs-tooltip-auto[x-placement^\u003d\"bottom\"] .arrow::before{bottom:0;border-width:0 0.4rem 0.4rem;border-bottom-color:#000}.bs-tooltip-left,.bs-tooltip-auto[x-placement^\u003d\"left\"]{padding:0 0.4rem}.bs-tooltip-left .arrow,.bs-tooltip-auto[x-placement^\u003d\"left\"] .arrow{right:0;width:0.4rem;height:0.8rem}.bs-tooltip-left .arrow::before,.bs-tooltip-auto[x-placement^\u003d\"left\"] .arrow::before{left:0;border-width:0.4rem 0 0.4rem 0.4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:0.25rem 0.5rem;color:#fff;text-align:center;background-color:#000;border-radius:0.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.930125rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:0.3rem}.popover .arrow{position:absolute;display:block;width:1rem;height:0.5rem;margin:0 0.3rem}.popover .arrow::before,.popover .arrow::after{position:absolute;display:block;content:\"\";border-color:transparent;border-style:solid}.bs-popover-top,.bs-popover-auto[x-placement^\u003d\"top\"]{margin-bottom:0.5rem}.bs-popover-top\u003e.arrow,.bs-popover-auto[x-placement^\u003d\"top\"]\u003e.arrow{bottom:calc((0.5rem + 1px) * -1)}.bs-popover-top\u003e.arrow::before,.bs-popover-auto[x-placement^\u003d\"top\"]\u003e.arrow::before{bottom:0;border-width:0.5rem 0.5rem 0;border-top-color:rgba(0,0,0,0.25)}.bs-popover-top\u003e.arrow::after,.bs-popover-auto[x-placement^\u003d\"top\"]\u003e.arrow::after{bottom:1px;border-width:0.5rem 0.5rem 0;border-top-color:#fff}.bs-popover-right,.bs-popover-auto[x-placement^\u003d\"right\"]{margin-left:0.5rem}.bs-popover-right\u003e.arrow,.bs-popover-auto[x-placement^\u003d\"right\"]\u003e.arrow{left:calc((0.5rem + 1px) * -1);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-right\u003e.arrow::before,.bs-popover-auto[x-placement^\u003d\"right\"]\u003e.arrow::before{left:0;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:rgba(0,0,0,0.25)}.bs-popover-right\u003e.arrow::after,.bs-popover-auto[x-placement^\u003d\"right\"]\u003e.arrow::after{left:1px;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:#fff}.bs-popover-bottom,.bs-popover-auto[x-placement^\u003d\"bottom\"]{margin-top:0.5rem}.bs-popover-bottom\u003e.arrow,.bs-popover-auto[x-placement^\u003d\"bottom\"]\u003e.arrow{top:calc((0.5rem + 1px) * -1)}.bs-popover-bottom\u003e.arrow::before,.bs-popover-auto[x-placement^\u003d\"bottom\"]\u003e.arrow::before{top:0;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:rgba(0,0,0,0.25)}.bs-popover-bottom\u003e.arrow::after,.bs-popover-auto[x-placement^\u003d\"bottom\"]\u003e.arrow::after{top:1px;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:#fff}.bs-popover-bottom .popover-header::before,.bs-popover-auto[x-placement^\u003d\"bottom\"] .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-0.5rem;content:\"\";border-bottom:1px solid #f7f7f7}.bs-popover-left,.bs-popover-auto[x-placement^\u003d\"left\"]{margin-right:0.5rem}.bs-popover-left\u003e.arrow,.bs-popover-auto[x-placement^\u003d\"left\"]\u003e.arrow{right:calc((0.5rem + 1px) * -1);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-left\u003e.arrow::before,.bs-popover-auto[x-placement^\u003d\"left\"]\u003e.arrow::before{right:0;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:rgba(0,0,0,0.25)}.bs-popover-left\u003e.arrow::after,.bs-popover-auto[x-placement^\u003d\"left\"]\u003e.arrow::after{right:1px;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:#fff}.popover-header{padding:0.5rem 0.75rem;margin-bottom:0;font-size:1.063rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(0.3rem - 1px);border-top-right-radius:calc(0.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:0.5rem 0.75rem;color:#343a40}.carousel{position:relative}.carousel.pointer-event{-ms-touch-action:pan-y;touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:\"\"}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transition:-webkit-transform 0.6s ease-in-out;transition:-webkit-transform 0.6s ease-in-out;transition:transform 0.6s ease-in-out;transition:transform 0.6s ease-in-out, -webkit-transform 0.6s ease-in-out}@media (prefers-reduced-motion: reduce){.carousel-item{-webkit-transition:none;transition:none}}.carousel-item.active,.carousel-item-next,.carousel-item-prev{display:block}.carousel-item-next:not(.carousel-item-left),.active.carousel-item-right{-webkit-transform:translateX(100%);transform:translateX(100%)}.carousel-item-prev:not(.carousel-item-right),.active.carousel-item-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;-webkit-transition-property:opacity;transition-property:opacity;-webkit-transform:none;transform:none}.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right{z-index:1;opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{z-index:0;opacity:0;-webkit-transition:0s 0.6s opacity;transition:0s 0.6s opacity}@media (prefers-reduced-motion: reduce){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{-webkit-transition:none;transition:none}}.carousel-control-prev,.carousel-control-next{position:absolute;top:0;bottom:0;z-index:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:0.5;-webkit-transition:opacity 0.15s ease;transition:opacity 0.15s ease}@media (prefers-reduced-motion: reduce){.carousel-control-prev,.carousel-control-next{-webkit-transition:none;transition:none}}.carousel-control-prev:hover,.carousel-control-prev:focus,.carousel-control-next:hover,.carousel-control-next:focus{color:#fff;text-decoration:none;outline:0;opacity:0.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-prev-icon,.carousel-control-next-icon{display:inline-block;width:20px;height:20px;background:no-repeat 50% / 100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 fill\u003d\u0027%23fff\u0027 viewBox\u003d\u00270 0 8 8\u0027%3e%3cpath d\u003d\u0027M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z\u0027/%3e%3c/svg%3e\")}.carousel-control-next-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027 fill\u003d\u0027%23fff\u0027 viewBox\u003d\u00270 0 8 8\u0027%3e%3cpath d\u003d\u0027M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z\u0027/%3e%3c/svg%3e\")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:15;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{-webkit-box-sizing:content-box;box-sizing:content-box;-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;-webkit-transition:opacity 0.6s ease;transition:opacity 0.6s ease}@media (prefers-reduced-motion: reduce){.carousel-indicators li{-webkit-transition:none;transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}@-webkit-keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:0.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:spinner-border .75s linear infinite;animation:spinner-border .75s linear infinite}.spinner-border-sm{width:1rem;height:1rem;border-width:0.2em}@-webkit-keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}@keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:spinner-grow .75s linear infinite;animation:spinner-grow .75s linear infinite}.spinner-grow-sm{width:1rem;height:1rem}.align-baseline{vertical-align:baseline !important}.align-top{vertical-align:top !important}.align-middle{vertical-align:middle !important}.align-bottom{vertical-align:bottom !important}.align-text-bottom{vertical-align:text-bottom !important}.align-text-top{vertical-align:text-top !important}.bg-primary{background-color:#4582EC !important}a.bg-primary:hover,a.bg-primary:focus,button.bg-primary:hover,button.bg-primary:focus{background-color:#1863e6 !important}.bg-secondary{background-color:#adb5bd !important}a.bg-secondary:hover,a.bg-secondary:focus,button.bg-secondary:hover,button.bg-secondary:focus{background-color:#919ca6 !important}.bg-success{background-color:#02B875 !important}a.bg-success:hover,a.bg-success:focus,button.bg-success:hover,button.bg-success:focus{background-color:#018655 !important}.bg-info{background-color:#17a2b8 !important}a.bg-info:hover,a.bg-info:focus,button.bg-info:hover,button.bg-info:focus{background-color:#117a8b !important}.bg-warning{background-color:#f0ad4e !important}a.bg-warning:hover,a.bg-warning:focus,button.bg-warning:hover,button.bg-warning:focus{background-color:#ec971f !important}.bg-danger{background-color:#d9534f !important}a.bg-danger:hover,a.bg-danger:focus,button.bg-danger:hover,button.bg-danger:focus{background-color:#c9302c !important}.bg-light{background-color:#f8f9fa !important}a.bg-light:hover,a.bg-light:focus,button.bg-light:hover,button.bg-light:focus{background-color:#dae0e5 !important}.bg-dark{background-color:#343a40 !important}a.bg-dark:hover,a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus{background-color:#1d2124 !important}.bg-white{background-color:#fff !important}.bg-transparent{background-color:transparent !important}.border{border:1px solid #ddd !important}.border-top{border-top:1px solid #ddd !important}.border-right{border-right:1px solid #ddd !important}.border-bottom{border-bottom:1px solid #ddd !important}.border-left{border-left:1px solid #ddd !important}.border-0{border:0 !important}.border-top-0{border-top:0 !important}.border-right-0{border-right:0 !important}.border-bottom-0{border-bottom:0 !important}.border-left-0{border-left:0 !important}.border-primary{border-color:#4582EC !important}.border-secondary{border-color:#adb5bd !important}.border-success{border-color:#02B875 !important}.border-info{border-color:#17a2b8 !important}.border-warning{border-color:#f0ad4e !important}.border-danger{border-color:#d9534f !important}.border-light{border-color:#f8f9fa !important}.border-dark{border-color:#343a40 !important}.border-white{border-color:#fff !important}.rounded-sm{border-radius:0.2rem !important}.rounded{border-radius:0.25rem !important}.rounded-top{border-top-left-radius:0.25rem !important;border-top-right-radius:0.25rem !important}.rounded-right{border-top-right-radius:0.25rem !important;border-bottom-right-radius:0.25rem !important}.rounded-bottom{border-bottom-right-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-left{border-top-left-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-lg{border-radius:0.3rem !important}.rounded-circle{border-radius:50% !important}.rounded-pill{border-radius:50rem !important}.rounded-0{border-radius:0 !important}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none !important}.d-inline{display:inline !important}.d-inline-block{display:inline-block !important}.d-block{display:block !important}.d-table{display:table !important}.d-table-row{display:table-row !important}.d-table-cell{display:table-cell !important}.d-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}@media (min-width: 576px){.d-sm-none{display:none !important}.d-sm-inline{display:inline !important}.d-sm-inline-block{display:inline-block !important}.d-sm-block{display:block !important}.d-sm-table{display:table !important}.d-sm-table-row{display:table-row !important}.d-sm-table-cell{display:table-cell !important}.d-sm-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-sm-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 768px){.d-md-none{display:none !important}.d-md-inline{display:inline !important}.d-md-inline-block{display:inline-block !important}.d-md-block{display:block !important}.d-md-table{display:table !important}.d-md-table-row{display:table-row !important}.d-md-table-cell{display:table-cell !important}.d-md-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-md-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 992px){.d-lg-none{display:none !important}.d-lg-inline{display:inline !important}.d-lg-inline-block{display:inline-block !important}.d-lg-block{display:block !important}.d-lg-table{display:table !important}.d-lg-table-row{display:table-row !important}.d-lg-table-cell{display:table-cell !important}.d-lg-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-lg-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 1200px){.d-xl-none{display:none !important}.d-xl-inline{display:inline !important}.d-xl-inline-block{display:inline-block !important}.d-xl-block{display:block !important}.d-xl-table{display:table !important}.d-xl-table-row{display:table-row !important}.d-xl-table-cell{display:table-cell !important}.d-xl-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-xl-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}@media print{.d-print-none{display:none !important}.d-print-inline{display:inline !important}.d-print-inline-block{display:inline-block !important}.d-print-block{display:block !important}.d-print-table{display:table !important}.d-print-table-row{display:table-row !important}.d-print-table-cell{display:table-cell !important}.d-print-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-print-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive iframe,.embed-responsive embed,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.8571428571%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-webkit-box-orient:horizontal !important;-webkit-box-direction:normal !important;-ms-flex-direction:row !important;flex-direction:row !important}.flex-column{-webkit-box-orient:vertical !important;-webkit-box-direction:normal !important;-ms-flex-direction:column !important;flex-direction:column !important}.flex-row-reverse{-webkit-box-orient:horizontal !important;-webkit-box-direction:reverse !important;-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-column-reverse{-webkit-box-orient:vertical !important;-webkit-box-direction:reverse !important;-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-fill{-webkit-box-flex:1 !important;-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-grow-0{-webkit-box-flex:0 !important;-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-grow-1{-webkit-box-flex:1 !important;-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-start{-webkit-box-pack:start !important;-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-end{-webkit-box-pack:end !important;-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-center{-webkit-box-pack:center !important;-ms-flex-pack:center !important;justify-content:center !important}.justify-content-between{-webkit-box-pack:justify !important;-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-start{-webkit-box-align:start !important;-ms-flex-align:start !important;align-items:flex-start !important}.align-items-end{-webkit-box-align:end !important;-ms-flex-align:end !important;align-items:flex-end !important}.align-items-center{-webkit-box-align:center !important;-ms-flex-align:center !important;align-items:center !important}.align-items-baseline{-webkit-box-align:baseline !important;-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-stretch{-webkit-box-align:stretch !important;-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}@media (min-width: 576px){.flex-sm-row{-webkit-box-orient:horizontal !important;-webkit-box-direction:normal !important;-ms-flex-direction:row !important;flex-direction:row !important}.flex-sm-column{-webkit-box-orient:vertical !important;-webkit-box-direction:normal !important;-ms-flex-direction:column !important;flex-direction:column !important}.flex-sm-row-reverse{-webkit-box-orient:horizontal !important;-webkit-box-direction:reverse !important;-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-sm-column-reverse{-webkit-box-orient:vertical !important;-webkit-box-direction:reverse !important;-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-sm-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-sm-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-sm-fill{-webkit-box-flex:1 !important;-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-sm-grow-0{-webkit-box-flex:0 !important;-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-sm-grow-1{-webkit-box-flex:1 !important;-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-sm-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-sm-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-sm-start{-webkit-box-pack:start !important;-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-sm-end{-webkit-box-pack:end !important;-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-sm-center{-webkit-box-pack:center !important;-ms-flex-pack:center !important;justify-content:center !important}.justify-content-sm-between{-webkit-box-pack:justify !important;-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-sm-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-sm-start{-webkit-box-align:start !important;-ms-flex-align:start !important;align-items:flex-start !important}.align-items-sm-end{-webkit-box-align:end !important;-ms-flex-align:end !important;align-items:flex-end !important}.align-items-sm-center{-webkit-box-align:center !important;-ms-flex-align:center !important;align-items:center !important}.align-items-sm-baseline{-webkit-box-align:baseline !important;-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-sm-stretch{-webkit-box-align:stretch !important;-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-sm-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-sm-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-sm-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-sm-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-sm-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-sm-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-sm-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-sm-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-sm-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-sm-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-sm-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-sm-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 768px){.flex-md-row{-webkit-box-orient:horizontal !important;-webkit-box-direction:normal !important;-ms-flex-direction:row !important;flex-direction:row !important}.flex-md-column{-webkit-box-orient:vertical !important;-webkit-box-direction:normal !important;-ms-flex-direction:column !important;flex-direction:column !important}.flex-md-row-reverse{-webkit-box-orient:horizontal !important;-webkit-box-direction:reverse !important;-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-md-column-reverse{-webkit-box-orient:vertical !important;-webkit-box-direction:reverse !important;-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-md-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-md-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-md-fill{-webkit-box-flex:1 !important;-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-md-grow-0{-webkit-box-flex:0 !important;-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-md-grow-1{-webkit-box-flex:1 !important;-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-md-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-md-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-md-start{-webkit-box-pack:start !important;-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-md-end{-webkit-box-pack:end !important;-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-md-center{-webkit-box-pack:center !important;-ms-flex-pack:center !important;justify-content:center !important}.justify-content-md-between{-webkit-box-pack:justify !important;-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-md-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-md-start{-webkit-box-align:start !important;-ms-flex-align:start !important;align-items:flex-start !important}.align-items-md-end{-webkit-box-align:end !important;-ms-flex-align:end !important;align-items:flex-end !important}.align-items-md-center{-webkit-box-align:center !important;-ms-flex-align:center !important;align-items:center !important}.align-items-md-baseline{-webkit-box-align:baseline !important;-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-md-stretch{-webkit-box-align:stretch !important;-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-md-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-md-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-md-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-md-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-md-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-md-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-md-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-md-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-md-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-md-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-md-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-md-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 992px){.flex-lg-row{-webkit-box-orient:horizontal !important;-webkit-box-direction:normal !important;-ms-flex-direction:row !important;flex-direction:row !important}.flex-lg-column{-webkit-box-orient:vertical !important;-webkit-box-direction:normal !important;-ms-flex-direction:column !important;flex-direction:column !important}.flex-lg-row-reverse{-webkit-box-orient:horizontal !important;-webkit-box-direction:reverse !important;-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-lg-column-reverse{-webkit-box-orient:vertical !important;-webkit-box-direction:reverse !important;-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-lg-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-lg-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-lg-fill{-webkit-box-flex:1 !important;-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-lg-grow-0{-webkit-box-flex:0 !important;-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-lg-grow-1{-webkit-box-flex:1 !important;-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-lg-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-lg-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-lg-start{-webkit-box-pack:start !important;-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-lg-end{-webkit-box-pack:end !important;-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-lg-center{-webkit-box-pack:center !important;-ms-flex-pack:center !important;justify-content:center !important}.justify-content-lg-between{-webkit-box-pack:justify !important;-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-lg-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-lg-start{-webkit-box-align:start !important;-ms-flex-align:start !important;align-items:flex-start !important}.align-items-lg-end{-webkit-box-align:end !important;-ms-flex-align:end !important;align-items:flex-end !important}.align-items-lg-center{-webkit-box-align:center !important;-ms-flex-align:center !important;align-items:center !important}.align-items-lg-baseline{-webkit-box-align:baseline !important;-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-lg-stretch{-webkit-box-align:stretch !important;-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-lg-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-lg-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-lg-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-lg-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-lg-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-lg-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-lg-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-lg-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-lg-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-lg-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-lg-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-lg-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 1200px){.flex-xl-row{-webkit-box-orient:horizontal !important;-webkit-box-direction:normal !important;-ms-flex-direction:row !important;flex-direction:row !important}.flex-xl-column{-webkit-box-orient:vertical !important;-webkit-box-direction:normal !important;-ms-flex-direction:column !important;flex-direction:column !important}.flex-xl-row-reverse{-webkit-box-orient:horizontal !important;-webkit-box-direction:reverse !important;-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-xl-column-reverse{-webkit-box-orient:vertical !important;-webkit-box-direction:reverse !important;-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-xl-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-xl-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-xl-fill{-webkit-box-flex:1 !important;-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-xl-grow-0{-webkit-box-flex:0 !important;-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-xl-grow-1{-webkit-box-flex:1 !important;-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-xl-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-xl-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-xl-start{-webkit-box-pack:start !important;-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-xl-end{-webkit-box-pack:end !important;-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-xl-center{-webkit-box-pack:center !important;-ms-flex-pack:center !important;justify-content:center !important}.justify-content-xl-between{-webkit-box-pack:justify !important;-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-xl-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-xl-start{-webkit-box-align:start !important;-ms-flex-align:start !important;align-items:flex-start !important}.align-items-xl-end{-webkit-box-align:end !important;-ms-flex-align:end !important;align-items:flex-end !important}.align-items-xl-center{-webkit-box-align:center !important;-ms-flex-align:center !important;align-items:center !important}.align-items-xl-baseline{-webkit-box-align:baseline !important;-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-xl-stretch{-webkit-box-align:stretch !important;-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-xl-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-xl-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-xl-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-xl-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-xl-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-xl-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-xl-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-xl-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-xl-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-xl-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-xl-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-xl-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}.float-left{float:left !important}.float-right{float:right !important}.float-none{float:none !important}@media (min-width: 576px){.float-sm-left{float:left !important}.float-sm-right{float:right !important}.float-sm-none{float:none !important}}@media (min-width: 768px){.float-md-left{float:left !important}.float-md-right{float:right !important}.float-md-none{float:none !important}}@media (min-width: 992px){.float-lg-left{float:left !important}.float-lg-right{float:right !important}.float-lg-none{float:none !important}}@media (min-width: 1200px){.float-xl-left{float:left !important}.float-xl-right{float:right !important}.float-xl-none{float:none !important}}.overflow-auto{overflow:auto !important}.overflow-hidden{overflow:hidden !important}.position-static{position:static !important}.position-relative{position:relative !important}.position-absolute{position:absolute !important}.position-fixed{position:fixed !important}.position-sticky{position:-webkit-sticky !important;position:sticky !important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports (position: -webkit-sticky) or (position: sticky){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{-webkit-box-shadow:0 0.125rem 0.25rem rgba(0,0,0,0.075) !important;box-shadow:0 0.125rem 0.25rem rgba(0,0,0,0.075) !important}.shadow{-webkit-box-shadow:0 0.5rem 1rem rgba(0,0,0,0.15) !important;box-shadow:0 0.5rem 1rem rgba(0,0,0,0.15) !important}.shadow-lg{-webkit-box-shadow:0 1rem 3rem rgba(0,0,0,0.175) !important;box-shadow:0 1rem 3rem rgba(0,0,0,0.175) !important}.shadow-none{-webkit-box-shadow:none !important;box-shadow:none !important}.w-25{width:25% !important}.w-50{width:50% !important}.w-75{width:75% !important}.w-100{width:100% !important}.w-auto{width:auto !important}.h-25{height:25% !important}.h-50{height:50% !important}.h-75{height:75% !important}.h-100{height:100% !important}.h-auto{height:auto !important}.mw-100{max-width:100% !important}.mh-100{max-height:100% !important}.min-vw-100{min-width:100vw !important}.min-vh-100{min-height:100vh !important}.vw-100{width:100vw !important}.vh-100{height:100vh !important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:\"\";background-color:rgba(0,0,0,0)}.m-0{margin:0 !important}.mt-0,.my-0{margin-top:0 !important}.mr-0,.mx-0{margin-right:0 !important}.mb-0,.my-0{margin-bottom:0 !important}.ml-0,.mx-0{margin-left:0 !important}.m-1{margin:0.25rem !important}.mt-1,.my-1{margin-top:0.25rem !important}.mr-1,.mx-1{margin-right:0.25rem !important}.mb-1,.my-1{margin-bottom:0.25rem !important}.ml-1,.mx-1{margin-left:0.25rem !important}.m-2{margin:0.5rem !important}.mt-2,.my-2{margin-top:0.5rem !important}.mr-2,.mx-2{margin-right:0.5rem !important}.mb-2,.my-2{margin-bottom:0.5rem !important}.ml-2,.mx-2{margin-left:0.5rem !important}.m-3{margin:1rem !important}.mt-3,.my-3{margin-top:1rem !important}.mr-3,.mx-3{margin-right:1rem !important}.mb-3,.my-3{margin-bottom:1rem !important}.ml-3,.mx-3{margin-left:1rem !important}.m-4{margin:1.5rem !important}.mt-4,.my-4{margin-top:1.5rem !important}.mr-4,.mx-4{margin-right:1.5rem !important}.mb-4,.my-4{margin-bottom:1.5rem !important}.ml-4,.mx-4{margin-left:1.5rem !important}.m-5{margin:3rem !important}.mt-5,.my-5{margin-top:3rem !important}.mr-5,.mx-5{margin-right:3rem !important}.mb-5,.my-5{margin-bottom:3rem !important}.ml-5,.mx-5{margin-left:3rem !important}.p-0{padding:0 !important}.pt-0,.py-0{padding-top:0 !important}.pr-0,.px-0{padding-right:0 !important}.pb-0,.py-0{padding-bottom:0 !important}.pl-0,.px-0{padding-left:0 !important}.p-1{padding:0.25rem !important}.pt-1,.py-1{padding-top:0.25rem !important}.pr-1,.px-1{padding-right:0.25rem !important}.pb-1,.py-1{padding-bottom:0.25rem !important}.pl-1,.px-1{padding-left:0.25rem !important}.p-2{padding:0.5rem !important}.pt-2,.py-2{padding-top:0.5rem !important}.pr-2,.px-2{padding-right:0.5rem !important}.pb-2,.py-2{padding-bottom:0.5rem !important}.pl-2,.px-2{padding-left:0.5rem !important}.p-3{padding:1rem !important}.pt-3,.py-3{padding-top:1rem !important}.pr-3,.px-3{padding-right:1rem !important}.pb-3,.py-3{padding-bottom:1rem !important}.pl-3,.px-3{padding-left:1rem !important}.p-4{padding:1.5rem !important}.pt-4,.py-4{padding-top:1.5rem !important}.pr-4,.px-4{padding-right:1.5rem !important}.pb-4,.py-4{padding-bottom:1.5rem !important}.pl-4,.px-4{padding-left:1.5rem !important}.p-5{padding:3rem !important}.pt-5,.py-5{padding-top:3rem !important}.pr-5,.px-5{padding-right:3rem !important}.pb-5,.py-5{padding-bottom:3rem !important}.pl-5,.px-5{padding-left:3rem !important}.m-n1{margin:-0.25rem !important}.mt-n1,.my-n1{margin-top:-0.25rem !important}.mr-n1,.mx-n1{margin-right:-0.25rem !important}.mb-n1,.my-n1{margin-bottom:-0.25rem !important}.ml-n1,.mx-n1{margin-left:-0.25rem !important}.m-n2{margin:-0.5rem !important}.mt-n2,.my-n2{margin-top:-0.5rem !important}.mr-n2,.mx-n2{margin-right:-0.5rem !important}.mb-n2,.my-n2{margin-bottom:-0.5rem !important}.ml-n2,.mx-n2{margin-left:-0.5rem !important}.m-n3{margin:-1rem !important}.mt-n3,.my-n3{margin-top:-1rem !important}.mr-n3,.mx-n3{margin-right:-1rem !important}.mb-n3,.my-n3{margin-bottom:-1rem !important}.ml-n3,.mx-n3{margin-left:-1rem !important}.m-n4{margin:-1.5rem !important}.mt-n4,.my-n4{margin-top:-1.5rem !important}.mr-n4,.mx-n4{margin-right:-1.5rem !important}.mb-n4,.my-n4{margin-bottom:-1.5rem !important}.ml-n4,.mx-n4{margin-left:-1.5rem !important}.m-n5{margin:-3rem !important}.mt-n5,.my-n5{margin-top:-3rem !important}.mr-n5,.mx-n5{margin-right:-3rem !important}.mb-n5,.my-n5{margin-bottom:-3rem !important}.ml-n5,.mx-n5{margin-left:-3rem !important}.m-auto{margin:auto !important}.mt-auto,.my-auto{margin-top:auto !important}.mr-auto,.mx-auto{margin-right:auto !important}.mb-auto,.my-auto{margin-bottom:auto !important}.ml-auto,.mx-auto{margin-left:auto !important}@media (min-width: 576px){.m-sm-0{margin:0 !important}.mt-sm-0,.my-sm-0{margin-top:0 !important}.mr-sm-0,.mx-sm-0{margin-right:0 !important}.mb-sm-0,.my-sm-0{margin-bottom:0 !important}.ml-sm-0,.mx-sm-0{margin-left:0 !important}.m-sm-1{margin:0.25rem !important}.mt-sm-1,.my-sm-1{margin-top:0.25rem !important}.mr-sm-1,.mx-sm-1{margin-right:0.25rem !important}.mb-sm-1,.my-sm-1{margin-bottom:0.25rem !important}.ml-sm-1,.mx-sm-1{margin-left:0.25rem !important}.m-sm-2{margin:0.5rem !important}.mt-sm-2,.my-sm-2{margin-top:0.5rem !important}.mr-sm-2,.mx-sm-2{margin-right:0.5rem !important}.mb-sm-2,.my-sm-2{margin-bottom:0.5rem !important}.ml-sm-2,.mx-sm-2{margin-left:0.5rem !important}.m-sm-3{margin:1rem !important}.mt-sm-3,.my-sm-3{margin-top:1rem !important}.mr-sm-3,.mx-sm-3{margin-right:1rem !important}.mb-sm-3,.my-sm-3{margin-bottom:1rem !important}.ml-sm-3,.mx-sm-3{margin-left:1rem !important}.m-sm-4{margin:1.5rem !important}.mt-sm-4,.my-sm-4{margin-top:1.5rem !important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem !important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem !important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem !important}.m-sm-5{margin:3rem !important}.mt-sm-5,.my-sm-5{margin-top:3rem !important}.mr-sm-5,.mx-sm-5{margin-right:3rem !important}.mb-sm-5,.my-sm-5{margin-bottom:3rem !important}.ml-sm-5,.mx-sm-5{margin-left:3rem !important}.p-sm-0{padding:0 !important}.pt-sm-0,.py-sm-0{padding-top:0 !important}.pr-sm-0,.px-sm-0{padding-right:0 !important}.pb-sm-0,.py-sm-0{padding-bottom:0 !important}.pl-sm-0,.px-sm-0{padding-left:0 !important}.p-sm-1{padding:0.25rem !important}.pt-sm-1,.py-sm-1{padding-top:0.25rem !important}.pr-sm-1,.px-sm-1{padding-right:0.25rem !important}.pb-sm-1,.py-sm-1{padding-bottom:0.25rem !important}.pl-sm-1,.px-sm-1{padding-left:0.25rem !important}.p-sm-2{padding:0.5rem !important}.pt-sm-2,.py-sm-2{padding-top:0.5rem !important}.pr-sm-2,.px-sm-2{padding-right:0.5rem !important}.pb-sm-2,.py-sm-2{padding-bottom:0.5rem !important}.pl-sm-2,.px-sm-2{padding-left:0.5rem !important}.p-sm-3{padding:1rem !important}.pt-sm-3,.py-sm-3{padding-top:1rem !important}.pr-sm-3,.px-sm-3{padding-right:1rem !important}.pb-sm-3,.py-sm-3{padding-bottom:1rem !important}.pl-sm-3,.px-sm-3{padding-left:1rem !important}.p-sm-4{padding:1.5rem !important}.pt-sm-4,.py-sm-4{padding-top:1.5rem !important}.pr-sm-4,.px-sm-4{padding-right:1.5rem !important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem !important}.pl-sm-4,.px-sm-4{padding-left:1.5rem !important}.p-sm-5{padding:3rem !important}.pt-sm-5,.py-sm-5{padding-top:3rem !important}.pr-sm-5,.px-sm-5{padding-right:3rem !important}.pb-sm-5,.py-sm-5{padding-bottom:3rem !important}.pl-sm-5,.px-sm-5{padding-left:3rem !important}.m-sm-n1{margin:-0.25rem !important}.mt-sm-n1,.my-sm-n1{margin-top:-0.25rem !important}.mr-sm-n1,.mx-sm-n1{margin-right:-0.25rem !important}.mb-sm-n1,.my-sm-n1{margin-bottom:-0.25rem !important}.ml-sm-n1,.mx-sm-n1{margin-left:-0.25rem !important}.m-sm-n2{margin:-0.5rem !important}.mt-sm-n2,.my-sm-n2{margin-top:-0.5rem !important}.mr-sm-n2,.mx-sm-n2{margin-right:-0.5rem !important}.mb-sm-n2,.my-sm-n2{margin-bottom:-0.5rem !important}.ml-sm-n2,.mx-sm-n2{margin-left:-0.5rem !important}.m-sm-n3{margin:-1rem !important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem !important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem !important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem !important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem !important}.m-sm-n4{margin:-1.5rem !important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem !important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem !important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem !important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem !important}.m-sm-n5{margin:-3rem !important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem !important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem !important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem !important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem !important}.m-sm-auto{margin:auto !important}.mt-sm-auto,.my-sm-auto{margin-top:auto !important}.mr-sm-auto,.mx-sm-auto{margin-right:auto !important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto !important}.ml-sm-auto,.mx-sm-auto{margin-left:auto !important}}@media (min-width: 768px){.m-md-0{margin:0 !important}.mt-md-0,.my-md-0{margin-top:0 !important}.mr-md-0,.mx-md-0{margin-right:0 !important}.mb-md-0,.my-md-0{margin-bottom:0 !important}.ml-md-0,.mx-md-0{margin-left:0 !important}.m-md-1{margin:0.25rem !important}.mt-md-1,.my-md-1{margin-top:0.25rem !important}.mr-md-1,.mx-md-1{margin-right:0.25rem !important}.mb-md-1,.my-md-1{margin-bottom:0.25rem !important}.ml-md-1,.mx-md-1{margin-left:0.25rem !important}.m-md-2{margin:0.5rem !important}.mt-md-2,.my-md-2{margin-top:0.5rem !important}.mr-md-2,.mx-md-2{margin-right:0.5rem !important}.mb-md-2,.my-md-2{margin-bottom:0.5rem !important}.ml-md-2,.mx-md-2{margin-left:0.5rem !important}.m-md-3{margin:1rem !important}.mt-md-3,.my-md-3{margin-top:1rem !important}.mr-md-3,.mx-md-3{margin-right:1rem !important}.mb-md-3,.my-md-3{margin-bottom:1rem !important}.ml-md-3,.mx-md-3{margin-left:1rem !important}.m-md-4{margin:1.5rem !important}.mt-md-4,.my-md-4{margin-top:1.5rem !important}.mr-md-4,.mx-md-4{margin-right:1.5rem !important}.mb-md-4,.my-md-4{margin-bottom:1.5rem !important}.ml-md-4,.mx-md-4{margin-left:1.5rem !important}.m-md-5{margin:3rem !important}.mt-md-5,.my-md-5{margin-top:3rem !important}.mr-md-5,.mx-md-5{margin-right:3rem !important}.mb-md-5,.my-md-5{margin-bottom:3rem !important}.ml-md-5,.mx-md-5{margin-left:3rem !important}.p-md-0{padding:0 !important}.pt-md-0,.py-md-0{padding-top:0 !important}.pr-md-0,.px-md-0{padding-right:0 !important}.pb-md-0,.py-md-0{padding-bottom:0 !important}.pl-md-0,.px-md-0{padding-left:0 !important}.p-md-1{padding:0.25rem !important}.pt-md-1,.py-md-1{padding-top:0.25rem !important}.pr-md-1,.px-md-1{padding-right:0.25rem !important}.pb-md-1,.py-md-1{padding-bottom:0.25rem !important}.pl-md-1,.px-md-1{padding-left:0.25rem !important}.p-md-2{padding:0.5rem !important}.pt-md-2,.py-md-2{padding-top:0.5rem !important}.pr-md-2,.px-md-2{padding-right:0.5rem !important}.pb-md-2,.py-md-2{padding-bottom:0.5rem !important}.pl-md-2,.px-md-2{padding-left:0.5rem !important}.p-md-3{padding:1rem !important}.pt-md-3,.py-md-3{padding-top:1rem !important}.pr-md-3,.px-md-3{padding-right:1rem !important}.pb-md-3,.py-md-3{padding-bottom:1rem !important}.pl-md-3,.px-md-3{padding-left:1rem !important}.p-md-4{padding:1.5rem !important}.pt-md-4,.py-md-4{padding-top:1.5rem !important}.pr-md-4,.px-md-4{padding-right:1.5rem !important}.pb-md-4,.py-md-4{padding-bottom:1.5rem !important}.pl-md-4,.px-md-4{padding-left:1.5rem !important}.p-md-5{padding:3rem !important}.pt-md-5,.py-md-5{padding-top:3rem !important}.pr-md-5,.px-md-5{padding-right:3rem !important}.pb-md-5,.py-md-5{padding-bottom:3rem !important}.pl-md-5,.px-md-5{padding-left:3rem !important}.m-md-n1{margin:-0.25rem !important}.mt-md-n1,.my-md-n1{margin-top:-0.25rem !important}.mr-md-n1,.mx-md-n1{margin-right:-0.25rem !important}.mb-md-n1,.my-md-n1{margin-bottom:-0.25rem !important}.ml-md-n1,.mx-md-n1{margin-left:-0.25rem !important}.m-md-n2{margin:-0.5rem !important}.mt-md-n2,.my-md-n2{margin-top:-0.5rem !important}.mr-md-n2,.mx-md-n2{margin-right:-0.5rem !important}.mb-md-n2,.my-md-n2{margin-bottom:-0.5rem !important}.ml-md-n2,.mx-md-n2{margin-left:-0.5rem !important}.m-md-n3{margin:-1rem !important}.mt-md-n3,.my-md-n3{margin-top:-1rem !important}.mr-md-n3,.mx-md-n3{margin-right:-1rem !important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem !important}.ml-md-n3,.mx-md-n3{margin-left:-1rem !important}.m-md-n4{margin:-1.5rem !important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem !important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem !important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem !important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem !important}.m-md-n5{margin:-3rem !important}.mt-md-n5,.my-md-n5{margin-top:-3rem !important}.mr-md-n5,.mx-md-n5{margin-right:-3rem !important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem !important}.ml-md-n5,.mx-md-n5{margin-left:-3rem !important}.m-md-auto{margin:auto !important}.mt-md-auto,.my-md-auto{margin-top:auto !important}.mr-md-auto,.mx-md-auto{margin-right:auto !important}.mb-md-auto,.my-md-auto{margin-bottom:auto !important}.ml-md-auto,.mx-md-auto{margin-left:auto !important}}@media (min-width: 992px){.m-lg-0{margin:0 !important}.mt-lg-0,.my-lg-0{margin-top:0 !important}.mr-lg-0,.mx-lg-0{margin-right:0 !important}.mb-lg-0,.my-lg-0{margin-bottom:0 !important}.ml-lg-0,.mx-lg-0{margin-left:0 !important}.m-lg-1{margin:0.25rem !important}.mt-lg-1,.my-lg-1{margin-top:0.25rem !important}.mr-lg-1,.mx-lg-1{margin-right:0.25rem !important}.mb-lg-1,.my-lg-1{margin-bottom:0.25rem !important}.ml-lg-1,.mx-lg-1{margin-left:0.25rem !important}.m-lg-2{margin:0.5rem !important}.mt-lg-2,.my-lg-2{margin-top:0.5rem !important}.mr-lg-2,.mx-lg-2{margin-right:0.5rem !important}.mb-lg-2,.my-lg-2{margin-bottom:0.5rem !important}.ml-lg-2,.mx-lg-2{margin-left:0.5rem !important}.m-lg-3{margin:1rem !important}.mt-lg-3,.my-lg-3{margin-top:1rem !important}.mr-lg-3,.mx-lg-3{margin-right:1rem !important}.mb-lg-3,.my-lg-3{margin-bottom:1rem !important}.ml-lg-3,.mx-lg-3{margin-left:1rem !important}.m-lg-4{margin:1.5rem !important}.mt-lg-4,.my-lg-4{margin-top:1.5rem !important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem !important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem !important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem !important}.m-lg-5{margin:3rem !important}.mt-lg-5,.my-lg-5{margin-top:3rem !important}.mr-lg-5,.mx-lg-5{margin-right:3rem !important}.mb-lg-5,.my-lg-5{margin-bottom:3rem !important}.ml-lg-5,.mx-lg-5{margin-left:3rem !important}.p-lg-0{padding:0 !important}.pt-lg-0,.py-lg-0{padding-top:0 !important}.pr-lg-0,.px-lg-0{padding-right:0 !important}.pb-lg-0,.py-lg-0{padding-bottom:0 !important}.pl-lg-0,.px-lg-0{padding-left:0 !important}.p-lg-1{padding:0.25rem !important}.pt-lg-1,.py-lg-1{padding-top:0.25rem !important}.pr-lg-1,.px-lg-1{padding-right:0.25rem !important}.pb-lg-1,.py-lg-1{padding-bottom:0.25rem !important}.pl-lg-1,.px-lg-1{padding-left:0.25rem !important}.p-lg-2{padding:0.5rem !important}.pt-lg-2,.py-lg-2{padding-top:0.5rem !important}.pr-lg-2,.px-lg-2{padding-right:0.5rem !important}.pb-lg-2,.py-lg-2{padding-bottom:0.5rem !important}.pl-lg-2,.px-lg-2{padding-left:0.5rem !important}.p-lg-3{padding:1rem !important}.pt-lg-3,.py-lg-3{padding-top:1rem !important}.pr-lg-3,.px-lg-3{padding-right:1rem !important}.pb-lg-3,.py-lg-3{padding-bottom:1rem !important}.pl-lg-3,.px-lg-3{padding-left:1rem !important}.p-lg-4{padding:1.5rem !important}.pt-lg-4,.py-lg-4{padding-top:1.5rem !important}.pr-lg-4,.px-lg-4{padding-right:1.5rem !important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem !important}.pl-lg-4,.px-lg-4{padding-left:1.5rem !important}.p-lg-5{padding:3rem !important}.pt-lg-5,.py-lg-5{padding-top:3rem !important}.pr-lg-5,.px-lg-5{padding-right:3rem !important}.pb-lg-5,.py-lg-5{padding-bottom:3rem !important}.pl-lg-5,.px-lg-5{padding-left:3rem !important}.m-lg-n1{margin:-0.25rem !important}.mt-lg-n1,.my-lg-n1{margin-top:-0.25rem !important}.mr-lg-n1,.mx-lg-n1{margin-right:-0.25rem !important}.mb-lg-n1,.my-lg-n1{margin-bottom:-0.25rem !important}.ml-lg-n1,.mx-lg-n1{margin-left:-0.25rem !important}.m-lg-n2{margin:-0.5rem !important}.mt-lg-n2,.my-lg-n2{margin-top:-0.5rem !important}.mr-lg-n2,.mx-lg-n2{margin-right:-0.5rem !important}.mb-lg-n2,.my-lg-n2{margin-bottom:-0.5rem !important}.ml-lg-n2,.mx-lg-n2{margin-left:-0.5rem !important}.m-lg-n3{margin:-1rem !important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem !important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem !important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem !important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem !important}.m-lg-n4{margin:-1.5rem !important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem !important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem !important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem !important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem !important}.m-lg-n5{margin:-3rem !important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem !important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem !important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem !important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem !important}.m-lg-auto{margin:auto !important}.mt-lg-auto,.my-lg-auto{margin-top:auto !important}.mr-lg-auto,.mx-lg-auto{margin-right:auto !important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto !important}.ml-lg-auto,.mx-lg-auto{margin-left:auto !important}}@media (min-width: 1200px){.m-xl-0{margin:0 !important}.mt-xl-0,.my-xl-0{margin-top:0 !important}.mr-xl-0,.mx-xl-0{margin-right:0 !important}.mb-xl-0,.my-xl-0{margin-bottom:0 !important}.ml-xl-0,.mx-xl-0{margin-left:0 !important}.m-xl-1{margin:0.25rem !important}.mt-xl-1,.my-xl-1{margin-top:0.25rem !important}.mr-xl-1,.mx-xl-1{margin-right:0.25rem !important}.mb-xl-1,.my-xl-1{margin-bottom:0.25rem !important}.ml-xl-1,.mx-xl-1{margin-left:0.25rem !important}.m-xl-2{margin:0.5rem !important}.mt-xl-2,.my-xl-2{margin-top:0.5rem !important}.mr-xl-2,.mx-xl-2{margin-right:0.5rem !important}.mb-xl-2,.my-xl-2{margin-bottom:0.5rem !important}.ml-xl-2,.mx-xl-2{margin-left:0.5rem !important}.m-xl-3{margin:1rem !important}.mt-xl-3,.my-xl-3{margin-top:1rem !important}.mr-xl-3,.mx-xl-3{margin-right:1rem !important}.mb-xl-3,.my-xl-3{margin-bottom:1rem !important}.ml-xl-3,.mx-xl-3{margin-left:1rem !important}.m-xl-4{margin:1.5rem !important}.mt-xl-4,.my-xl-4{margin-top:1.5rem !important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem !important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem !important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem !important}.m-xl-5{margin:3rem !important}.mt-xl-5,.my-xl-5{margin-top:3rem !important}.mr-xl-5,.mx-xl-5{margin-right:3rem !important}.mb-xl-5,.my-xl-5{margin-bottom:3rem !important}.ml-xl-5,.mx-xl-5{margin-left:3rem !important}.p-xl-0{padding:0 !important}.pt-xl-0,.py-xl-0{padding-top:0 !important}.pr-xl-0,.px-xl-0{padding-right:0 !important}.pb-xl-0,.py-xl-0{padding-bottom:0 !important}.pl-xl-0,.px-xl-0{padding-left:0 !important}.p-xl-1{padding:0.25rem !important}.pt-xl-1,.py-xl-1{padding-top:0.25rem !important}.pr-xl-1,.px-xl-1{padding-right:0.25rem !important}.pb-xl-1,.py-xl-1{padding-bottom:0.25rem !important}.pl-xl-1,.px-xl-1{padding-left:0.25rem !important}.p-xl-2{padding:0.5rem !important}.pt-xl-2,.py-xl-2{padding-top:0.5rem !important}.pr-xl-2,.px-xl-2{padding-right:0.5rem !important}.pb-xl-2,.py-xl-2{padding-bottom:0.5rem !important}.pl-xl-2,.px-xl-2{padding-left:0.5rem !important}.p-xl-3{padding:1rem !important}.pt-xl-3,.py-xl-3{padding-top:1rem !important}.pr-xl-3,.px-xl-3{padding-right:1rem !important}.pb-xl-3,.py-xl-3{padding-bottom:1rem !important}.pl-xl-3,.px-xl-3{padding-left:1rem !important}.p-xl-4{padding:1.5rem !important}.pt-xl-4,.py-xl-4{padding-top:1.5rem !important}.pr-xl-4,.px-xl-4{padding-right:1.5rem !important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem !important}.pl-xl-4,.px-xl-4{padding-left:1.5rem !important}.p-xl-5{padding:3rem !important}.pt-xl-5,.py-xl-5{padding-top:3rem !important}.pr-xl-5,.px-xl-5{padding-right:3rem !important}.pb-xl-5,.py-xl-5{padding-bottom:3rem !important}.pl-xl-5,.px-xl-5{padding-left:3rem !important}.m-xl-n1{margin:-0.25rem !important}.mt-xl-n1,.my-xl-n1{margin-top:-0.25rem !important}.mr-xl-n1,.mx-xl-n1{margin-right:-0.25rem !important}.mb-xl-n1,.my-xl-n1{margin-bottom:-0.25rem !important}.ml-xl-n1,.mx-xl-n1{margin-left:-0.25rem !important}.m-xl-n2{margin:-0.5rem !important}.mt-xl-n2,.my-xl-n2{margin-top:-0.5rem !important}.mr-xl-n2,.mx-xl-n2{margin-right:-0.5rem !important}.mb-xl-n2,.my-xl-n2{margin-bottom:-0.5rem !important}.ml-xl-n2,.mx-xl-n2{margin-left:-0.5rem !important}.m-xl-n3{margin:-1rem !important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem !important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem !important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem !important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem !important}.m-xl-n4{margin:-1.5rem !important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem !important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem !important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem !important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem !important}.m-xl-n5{margin:-3rem !important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem !important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem !important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem !important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem !important}.m-xl-auto{margin:auto !important}.mt-xl-auto,.my-xl-auto{margin-top:auto !important}.mr-xl-auto,.mx-xl-auto{margin-right:auto !important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto !important}.ml-xl-auto,.mx-xl-auto{margin-left:auto !important}}.text-monospace{font-family:SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !important}.text-justify{text-align:justify !important}.text-wrap{white-space:normal !important}.text-nowrap{white-space:nowrap !important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left !important}.text-right{text-align:right !important}.text-center{text-align:center !important}@media (min-width: 576px){.text-sm-left{text-align:left !important}.text-sm-right{text-align:right !important}.text-sm-center{text-align:center !important}}@media (min-width: 768px){.text-md-left{text-align:left !important}.text-md-right{text-align:right !important}.text-md-center{text-align:center !important}}@media (min-width: 992px){.text-lg-left{text-align:left !important}.text-lg-right{text-align:right !important}.text-lg-center{text-align:center !important}}@media (min-width: 1200px){.text-xl-left{text-align:left !important}.text-xl-right{text-align:right !important}.text-xl-center{text-align:center !important}}.text-lowercase{text-transform:lowercase !important}.text-uppercase{text-transform:uppercase !important}.text-capitalize{text-transform:capitalize !important}.font-weight-light{font-weight:300 !important}.font-weight-lighter{font-weight:lighter !important}.font-weight-normal{font-weight:400 !important}.font-weight-bold{font-weight:700 !important}.font-weight-bolder{font-weight:bolder !important}.font-italic{font-style:italic !important}.text-white{color:#fff !important}.text-primary{color:#4582EC !important}a.text-primary:hover,a.text-primary:focus{color:#1559cf !important}.text-secondary{color:#adb5bd !important}a.text-secondary:hover,a.text-secondary:focus{color:#838f9b !important}.text-success{color:#02B875 !important}a.text-success:hover,a.text-success:focus{color:#016c45 !important}.text-info{color:#17a2b8 !important}a.text-info:hover,a.text-info:focus{color:#0f6674 !important}.text-warning{color:#f0ad4e !important}a.text-warning:hover,a.text-warning:focus{color:#df8a13 !important}.text-danger{color:#d9534f !important}a.text-danger:hover,a.text-danger:focus{color:#b52b27 !important}.text-light{color:#f8f9fa !important}a.text-light:hover,a.text-light:focus{color:#cbd3da !important}.text-dark{color:#343a40 !important}a.text-dark:hover,a.text-dark:focus{color:#121416 !important}.text-body{color:#343a40 !important}.text-muted{color:#868e96 !important}.text-black-50{color:rgba(0,0,0,0.5) !important}.text-white-50{color:rgba(255,255,255,0.5) !important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none !important}.text-break{word-break:break-word !important;overflow-wrap:break-word !important}.text-reset{color:inherit !important}.visible{visibility:visible !important}.invisible{visibility:hidden !important}@media print{*,*::before,*::after{text-shadow:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap !important}pre,blockquote{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px !important}.container{min-width:992px !important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse !important}.table td,.table th{background-color:#fff !important}.table-bordered th,.table-bordered td{border:1px solid #ddd !important}.table-dark{color:inherit}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:rgba(0,0,0,0.1)}.table .thead-dark th{color:inherit;border-color:rgba(0,0,0,0.1)}}.navbar{font-size:0.875em}.bg-dark{background-color:#02B875 !important}.bg-light{background-color:#fff !important;border:1px solid rgba(0,0,0,0.1)}.bg-light.navbar-fixed-top{border-width:0 0 1px 0}.bg-light.navbar-fixed-bottom{border-width:1px 0 0 0}.btn{border-radius:1.078em;font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-size:0.875em}.btn-lg,.btn-group-lg\u003e.btn{border-radius:2.688em}.btn-sm,.btn-group-sm\u003e.btn{border-radius:0.844em;font-size:0.688em}.btn-secondary,.btn-secondary:hover,.btn-warning,.btn-warning:hover{color:#fff}p{font-family:Georgia, Cambria, \"Times New Roman\", Times, serif}blockquote{font-style:italic}footer{font-size:0.875em}.lead{color:#868e96;font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"}table,.table{font-size:0.875em}table-primary,table-secondary,table-success,table-info,table-warning,table-danger,.table-primary,.table-secondary,.table-success,.table-info,.table-warning,.table-danger{color:#fff}.table-primary,.table-primary\u003eth,.table-primary\u003etd{background-color:#4582EC}.table-secondary,.table-secondary\u003eth,.table-secondary\u003etd{background-color:#adb5bd}.table-light,.table-light\u003eth,.table-light\u003etd{background-color:#f8f9fa}.table-dark,.table-dark\u003eth,.table-dark\u003etd{background-color:#343a40}.table-success,.table-success\u003eth,.table-success\u003etd{background-color:#02B875}.table-info,.table-info\u003eth,.table-info\u003etd{background-color:#17a2b8}.table-danger,.table-danger\u003eth,.table-danger\u003etd{background-color:#d9534f}.table-warning,.table-warning\u003eth,.table-warning\u003etd{background-color:#f0ad4e}.table-active,.table-active\u003eth,.table-active\u003etd{background-color:rgba(0,0,0,0.075)}.table-hover .table-primary:hover,.table-hover .table-primary:hover\u003eth,.table-hover .table-primary:hover\u003etd{background-color:#2e72ea}.table-hover .table-secondary:hover,.table-hover .table-secondary:hover\u003eth,.table-hover .table-secondary:hover\u003etd{background-color:#9fa8b2}.table-hover .table-light:hover,.table-hover .table-light:hover\u003eth,.table-hover .table-light:hover\u003etd{background-color:#e9ecef}.table-hover .table-dark:hover,.table-hover .table-dark:hover\u003eth,.table-hover .table-dark:hover\u003etd{background-color:#292d32}.table-hover .table-success:hover,.table-hover .table-success:hover\u003eth,.table-hover .table-success:hover\u003etd{background-color:#029f65}.table-hover .table-info:hover,.table-hover .table-info:hover\u003eth,.table-hover .table-info:hover\u003etd{background-color:#148ea1}.table-hover .table-danger:hover,.table-hover .table-danger:hover\u003eth,.table-hover .table-danger:hover\u003etd{background-color:#d43f3a}.table-hover .table-warning:hover,.table-hover .table-warning:hover\u003eth,.table-hover .table-warning:hover\u003etd{background-color:#eea236}.table-hover .table-active:hover,.table-hover .table-active:hover\u003eth,.table-hover .table-active:hover\u003etd{background-color:rgba(0,0,0,0.075)}.nav,.breadcrumb,.pagination{font-size:0.875em}.dropdown-menu{font-size:0.875em}.alert{border:none;color:#fff;font-size:0.875em}.alert,.alert p{font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"}.alert a,.alert .alert-link{color:#fff;font-weight:normal;text-decoration:underline}.alert-primary{background-color:#4582EC}.alert-secondary{background-color:#adb5bd}.alert-success{background-color:#02B875}.alert-info{background-color:#17a2b8}.alert-warning{background-color:#f0ad4e}.alert-danger{background-color:#d9534f}.alert-light{background-color:#f8f9fa}.alert-dark{background-color:#343a40}.alert-light,.alert-light a,.alert-light .alert-link{color:#343a40}.badge{vertical-align:bottom}.badge-secondary,.badge-warning{color:#fff}.tooltip{font-size:11px}.list-group{font-size:0.875em}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 12
    }
  },
  {
    "path": "src/main/resources/browser/default.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!DOCTYPE html\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chtml\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chead\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    \u003clink rel\u003d\"stylesheet\" href\u003d\"../view/DarkTheme.css\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/head\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbody class\u003d\"background\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/body\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "rlrh": 1,
      "-": 8
    }
  },
  {
    "path": "src/main/resources/browser/error.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!DOCTYPE html\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003chtml lang\u003d\"en\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    \u003chead\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        \u003ctitle\u003eError Occurred\u003c/title\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        \u003clink rel\u003d\"stylesheet\" href\u003d\"../view/DarkTheme.css\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    \u003c/head\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    \u003cbody class\u003d\"background\" style\u003d\"color: white; font-family: \u0027Segoe UI\u0027, Helvetica, Arial, sans-serif\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        \u003ch1\u003eAn error occurred.\u003c/h1\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        \u003cp\u003eTry:\u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        \u003cul\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            \u003cli\u003eChecking your Internet connection\u003c/li\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            \u003cli\u003eVerifying the URL is valid\u003c/li\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        \u003c/ul\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    \u003c/body\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "rlrh": 16
    }
  },
  {
    "path": "src/main/resources/view/StatusBarFooter.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" halignment\u003d\"RIGHT\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cLabel fx:id\u003d\"syncStatus\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "  \u003cLabel fx:id\u003d\"targetCountStatus\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "  \u003cLabel fx:id\u003d\"saveLocationStatus\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 2,
      "-": 13
    }
  },
  {
    "path": "src/test/java/guitests/GuiRobot.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package guitests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.BooleanSupplier;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testfx.api.FxRobot;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.exceptions.StageNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Robot used to simulate user actions on the GUI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Extends {@link FxRobot} by adding some customized functionality and workarounds."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiRobot extends FxRobot {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int PAUSE_FOR_HUMAN_DELAY_MILLISECONDS \u003d 250;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private static final int DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS \u003d 60000;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PROPERTY_TESTFX_HEADLESS \u003d \"testfx.headless\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean isHeadlessMode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiRobot() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        String headlessPropertyValue \u003d System.getProperty(PROPERTY_TESTFX_HEADLESS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        isHeadlessMode \u003d headlessPropertyValue !\u003d null \u0026\u0026 headlessPropertyValue.equals(\"true\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Pauses execution for {@code PAUSE_FOR_HUMAN_DELAY_MILLISECONDS} milliseconds for a human to examine the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * effects of the test. This method will be disabled when the GUI tests are executed in headless mode to avoid"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * unnecessary delays."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void pauseForHuman() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isHeadlessMode) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        sleep(PAUSE_FOR_HUMAN_DELAY_MILLISECONDS);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if tests are run in headless mode."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isHeadlessMode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return isHeadlessMode;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Waits for {@code event} to be true by {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS} milliseconds."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EventTimeoutException if the time taken exceeds {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * milliseconds."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void waitForEvent(BooleanSupplier event) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForEvent(event, DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Waits for {@code event} to be true."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param timeOut in milliseconds"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EventTimeoutException if the time taken exceeds {@code timeOut}."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void waitForEvent(BooleanSupplier event, int timeOut) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        int timePassed \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        final int retryInterval \u003d 50;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!event.getAsBoolean()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            sleep(retryInterval);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            timePassed +\u003d retryInterval;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timePassed \u003e\u003d timeOut) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new EventTimeoutException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        pauseForHuman();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the window with {@code stageTitle} is currently open."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isWindowShown(String stageTitle) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return getNumberOfWindowsShown(stageTitle) \u003e\u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the number of windows with {@code stageTitle} that are currently open."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getNumberOfWindowsShown(String stageTitle) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        return (int) listTargetWindows().stream()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(window -\u003e window instanceof Stage \u0026\u0026 ((Stage) window).getTitle().equals(stageTitle))"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                .count();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the first stage, ordered by proximity to the current target window, with the stage title."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * The order that the windows are searched are as follows (proximity): current target window,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * children of the target window, rest of the windows."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws StageNotFoundException if the stage is not found."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getStage(String stageTitle) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cStage\u003e targetStage \u003d listTargetWindows().stream()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(Stage.class::isInstance) // checks that the window is of type Stage"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(Stage.class::cast)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(stage -\u003e stage.getTitle().equals(stageTitle))"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                .findFirst();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return targetStage.orElseThrow(StageNotFoundException::new);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents an error which occurs when a timeout occurs when waiting for an event."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private class EventTimeoutException extends RuntimeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 1,
      "-": 118
    }
  },
  {
    "path": "src/test/java/guitests/guihandles/StatusBarFooterHandle.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package guitests.guihandles;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Labeled;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * A handle for the {@code StatusBarFooter} at the footer of the application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class StatusBarFooterHandle extends NodeHandle\u003cNode\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STATUS_BAR_PLACEHOLDER \u003d \"#statusbarPlaceholder\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String SYNC_STATUS_ID \u003d \"#syncStatus\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String SAVE_LOCATION_STATUS_ID \u003d \"#saveLocationStatus\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private static final String TARGET_COUNT_STATUS_ID \u003d \"#targetCountStatus\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Labeled syncStatusNode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Labeled saveLocationNode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private final Labeled targetCountNode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private String lastRememberedSyncStatus;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private String lastRememberedSaveLocation;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public StatusBarFooterHandle(Node statusBarFooterNode) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(statusBarFooterNode);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        syncStatusNode \u003d getChildNode(SYNC_STATUS_ID);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        saveLocationNode \u003d getChildNode(SAVE_LOCATION_STATUS_ID);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        targetCountNode \u003d getChildNode(TARGET_COUNT_STATUS_ID);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the text of the sync status portion of the status bar."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSyncStatus() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return syncStatusNode.getText();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the text of the \u0027save location\u0027 portion of the status bar."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSaveLocation() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return saveLocationNode.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "     * Returns the text of the \u0027targets counter\u0027 section of the status bar."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public String getTargetCount() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return targetCountNode.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remembers the content of the sync status portion of the status bar."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void rememberSyncStatus() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        lastRememberedSyncStatus \u003d getSyncStatus();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the current content of the sync status is different from the value remembered by the most recent"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code rememberSyncStatus()} call."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSyncStatusChanged() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return !lastRememberedSyncStatus.equals(getSyncStatus());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remembers the content of the \u0027save location\u0027 portion of the status bar."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public void rememberSaveLocation() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        lastRememberedSaveLocation \u003d getSaveLocation();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the current content of the \u0027save location\u0027 is different from the value remembered by the most"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * recent {@code rememberSaveLocation()} call."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSaveLocationChanged() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return !lastRememberedSaveLocation.equals(getSaveLocation());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 10,
      "-": 71
    }
  },
  {
    "path": "src/test/java/seedu/address/TestApp.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Screen;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.mocks.StorageStub;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.EntryBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyEntryBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonEntryBookStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.TestUtil;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import systemtests.ModelHelper;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * This class is meant to override some properties of MainApp so that it will be suited for"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * testing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestApp extends MainApp {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Path SAVE_LOCATION_FOR_TESTING \u003d TestUtil.getFilePathInSandboxFolder(\"sampleData.json\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final Path DEFAULT_PREF_FILE_LOCATION_FOR_TESTING \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            TestUtil.getFilePathInSandboxFolder(\"pref_testing.json\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Supplier\u003cReadOnlyEntryBook\u003e initialDataSupplier \u003d () -\u003e null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Path saveFileLocation \u003d SAVE_LOCATION_FOR_TESTING;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public TestApp() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public TestApp(Supplier\u003cReadOnlyEntryBook\u003e initialDataSupplier, Path saveFileLocation) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.initialDataSupplier \u003d initialDataSupplier;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        this.saveFileLocation \u003d saveFileLocation;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // If some initial local data has been provided, write those to the file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (initialDataSupplier.get() !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            JsonEntryBookStorage jsonAddressBookStorage \u003d new JsonEntryBookStorage(saveFileLocation);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                jsonAddressBookStorage.saveAddressBook(initialDataSupplier.get());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AssertionError(ioe);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Config config \u003d super.initConfig(configFilePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUserPrefsFilePath(DEFAULT_PREF_FILE_LOCATION_FOR_TESTING);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return config;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d super.initPrefs(storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        double x \u003d Screen.getPrimary().getVisualBounds().getMinX();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        double y \u003d Screen.getPrimary().getVisualBounds().getMinY();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(600.0, 600.0, (int) x, (int) y));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setAddressBookFilePath(saveFileLocation);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a defensive copy of the address book data stored inside the storage file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public EntryBook readStorageAddressBook() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EntryBook(storage.readAddressBook().get());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException dce) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Data is not in the EntryBook format.\", dce);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Storage file cannot be found.\", ioe);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the storage file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getStorageSaveLocation() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        return storage.getAddressBookFilePath();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a defensive copy of the model."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public Model getModel() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        Model copy \u003d new ModelManager((model.getEntryBook()), new UserPrefs(), new StorageStub());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelHelper.setFilteredList(copy, model.getFilteredEntryList());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return copy;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the command result in the app."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param commandResult command result to set"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void setCommandResult(CommandResult commandResult) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        model.setCommandResult(commandResult);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the exception in the app."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param e exception to set"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void setException(Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        model.setException(e);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        launch(args);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 17,
      "-": 110
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/LogicManagerTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static org.junit.Assert.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.LINK_DESC_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_AMY;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.TemporaryFolder;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HistoryCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.mocks.ModelManagerStub;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.EntryBook;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyEntryBook;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.ArticleStorage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.DataDirectoryArticleStorage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonEntryBookStorage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EntryBuilder;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManagerTest {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public TemporaryFolder temporaryFolder \u003d new TemporaryFolder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() throws Exception {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonEntryBookStorage addressBookStorage \u003d new JsonEntryBookStorage(temporaryFolder.newFile().toPath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.newFile().toPath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        ArticleStorage articleStorage \u003d new DataDirectoryArticleStorage(temporaryFolder.newFolder().toPath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, articleStorage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d new ModelManager(new EntryBook(), new UserPrefs(), storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidCommandFormat_throwsParseException() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidCommand \u003d \"uicfhmowqewca\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHistoryCorrect(invalidCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_commandExecutionError_throwsCommandException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        String deleteCommand \u003d \"delete 9\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHistoryCorrect(deleteCommand);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validCommand_success() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        String listCommand \u003d ListCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHistoryCorrect(listCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validAliasCommand_success() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        String listCommand \u003d ListCommand.COMMAND_ALIAS;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHistoryCorrect(listCommand);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_storageThrowsIoException_throwsCommandException() throws Exception {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        // Setup LogicManager with JsonEntryBookIoExceptionThrowingStub"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonEntryBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                new JsonEntryBookIoExceptionThrowingStub(temporaryFolder.newFile().toPath());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.newFile().toPath());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        ArticleStorage articleStorage \u003d new DataDirectoryArticleStorage(temporaryFolder.newFolder().toPath());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, articleStorage);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d new ModelManager(model.getEntryBook(), model.getUserPrefs(), storage);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Execute add command"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        String addCommand \u003d AddCommand.COMMAND_WORD + TITLE_DESC_AMY + DESCRIPTION_DESC_AMY + LINK_DESC_AMY"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        Entry expectedEntry \u003d new EntryBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManagerStub();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String expectedInitialMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, expectedEntry);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedFinalMessage \u003d ModelManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.addEntry(expectedEntry);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        expectedModel.setException(new CommandException(expectedFinalMessage));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertCommandSuccess(addCommand, expectedInitialMessage, expectedModel);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertManualExceptionPropagated(CommandException.class, expectedFinalMessage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertHistoryCorrect(addCommand);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void execute_manualCommandResultSet_success() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String expectedMessage \u003d \"Command result successfully set manually\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        CommandResult result \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        logic.setCommandResult(result);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertManualCommandResultSet(expectedMessage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void execute_manualExceptionPropagated_failure() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String expectedMessage \u003d \"Exception successfully set manually\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Exception exception \u003d new Exception(expectedMessage);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        logic.setException(exception);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertManualExceptionPropagated(Exception.class, expectedMessage);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(UnsupportedOperationException.class);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.getFilteredEntryList().remove(0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that no exceptions are thrown and that the result message is correct."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also confirms that {@code expectedModel} is as specified."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandBehavior(Class, String, String, Model)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandSuccess(String inputCommand, String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandBehavior(null, inputCommand, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandBehavior(Class, String, String, Model)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertParseException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandBehavior(Class, String, String, Model)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that the exception is thrown and that the result message is correct."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandBehavior(Class, String, String, Model)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String inputCommand, Class\u003c?\u003e expectedException, String expectedMessage) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getEntryBook(), model.getUserPrefs(), model.getStorage());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandBehavior(expectedException, inputCommand, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that the result message is correct and that the expected exception is thrown,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     * and also confirms that the following two parts of the LogicManager object\u0027s state are as expected:\u003cbr\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     *      - the internal model manager data are same as those in the {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     *      - {@code expectedModel}\u0027s address book was saved to the storage file."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandBehavior(Class\u003c?\u003e expectedException, String inputCommand,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                                           String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d logic.execute(inputCommand);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedException, null);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedMessage, result.getFeedbackToUser());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedException, e.getClass());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedMessage, e.getMessage());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * For manually set command result, confirms that the result message is correct."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Exception can be propagated from previous commands so it cannot be checked."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void assertManualCommandResultSet(String expectedMessage) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertNotNull(model.getCommandResult());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(expectedMessage, model.getCommandResult().getFeedbackToUser());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * For manually set exception, confirms that the expected exception is propagated."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Command result can be propagated from previous commands so it cannot be checked."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void assertManualExceptionPropagated(Class\u003c?\u003e expectedException, String expectedMessage) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertNotNull(model.getException());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(expectedException, model.getException().getClass());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(expectedMessage, model.getException().getMessage());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the result display shows all the {@code expectedCommands} upon the execution of"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code HistoryCommand}."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertHistoryCorrect(String... expectedCommands) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d logic.execute(HistoryCommand.COMMAND_WORD);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedMessage \u003d String.format("
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                    HistoryCommand.MESSAGE_SUCCESS, String.join(\"\\n\", expectedCommands));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedMessage, result.getFeedbackToUser());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException | CommandException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Parsing and execution of HistoryCommand.COMMAND_WORD should succeed.\", e);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class JsonEntryBookIoExceptionThrowingStub extends JsonEntryBookStorage {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        private JsonEntryBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        public void saveAddressBook(ReadOnlyEntryBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 40,
      "-": 202
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.ReadOnlyProperty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.EntryBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyEntryBook;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EntryBuilder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandHistory commandHistory \u003d new CommandHistory();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        new AddCommand(null);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_personAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Entry validEntry \u003d new EntryBuilder().build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new AddCommand(validEntry).execute(modelStub, commandHistory);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validEntry), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(validEntry), modelStub.personsAdded);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(EMPTY_COMMAND_HISTORY, commandHistory);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() throws Exception {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Entry validEntry \u003d new EntryBuilder().build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(validEntry);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithPerson(validEntry);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(CommandException.class);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expectMessage(AddCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        addCommand.execute(modelStub, commandHistory);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: Add tests for with/without Title/Description"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: Add tests for Crux, should return non-null Title/Description"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        Entry alice \u003d new EntryBuilder().withTitle(\"Alice\").build();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        Entry bob \u003d new EntryBuilder().withTitle(\"Bob\").build();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommand \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addBobCommand \u003d new AddCommand(bob);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // different entry -\u003e returns false"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        public Storage getStorage() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        public Path getEntryBookFilePath() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setEntryBookFilePath(Path entryBookFilePath) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        public Path getArticleDataDirectoryPath() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setArticleDataDirectoryPath(Path articleDataDirectoryPath) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addEntry(Entry entry) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setEntryBook(ReadOnlyEntryBook entryBook) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyEntryBook getEntryBook() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasEntry(Entry entry) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deleteEntry(Entry target) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setEntry(Entry target, Entry editedEntry) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        public void clearEntryBook() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cEntry\u003e getFilteredEntryList() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updateFilteredEntryList(Predicate\u003cEntry\u003e predicate) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyProperty\u003cEntry\u003e selectedEntryProperty() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        public Entry getSelectedEntry() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setSelectedEntry(Entry entry) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public ReadOnlyProperty\u003cViewMode\u003e viewModeProperty() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public ViewMode getViewMode() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public void setViewMode(ViewMode viewMode) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public ReadOnlyProperty\u003cException\u003e exceptionProperty() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public Exception getException() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public void setException(Exception exceptionToBePropagated) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public ReadOnlyProperty\u003cCommandResult\u003e commandResultProperty() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public CommandResult getCommandResult() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        public void setCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        public Model clone() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that contains a single entry."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubWithPerson extends ModelStub {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Entry entry;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubWithPerson(Entry entry) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(entry);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            this.entry \u003d entry;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasEntry(Entry entry) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(entry);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.entry.isSameEntry(entry);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that always accept the entry being added."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubAcceptingPersonAdded extends ModelStub {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        final ArrayList\u003cEntry\u003e personsAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasEntry(Entry entry) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(entry);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            return personsAdded.stream().anyMatch(entry::isSameEntry);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addEntry(Entry entry) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(entry);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            personsAdded.add(entry);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyEntryBook getEntryBook() {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EntryBook();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 24,
      "-": 274
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/FeedCommandTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.FeedCommand.DEFAULT_DESCRIPTION_TEXT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.logic.commands.FeedCommand.MESSAGE_FAILURE_NET;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.logic.commands.FeedCommand.MESSAGE_FAILURE_XML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.logic.commands.FeedCommand.MESSAGE_SUCCESS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.mocks.ModelManagerStub;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.EntryBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Address;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Link;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.model.entry.Title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "public class FeedCommandTest {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private static final String TEST_URL \u003d \"https://cs2103-ay1819s2-w10-1.github.io/main/networktests/rss.xml\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private static final String TEST_URL_LOCAL \u003d MainApp.class.getResource(\"/RssFeedTest/rss.xml\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "            .toExternalForm();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private static final String MALFORMED_URL \u003d \"notavalidprotocol://malformed.url/invalid\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private static final String NOTAFEED_URL \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        \"https://cs2103-ay1819s2-w10-1.github.io/main/networktests/notafeed.notxml\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private Model model \u003d new ModelManagerStub();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private CommandHistory commandHistory \u003d new CommandHistory();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "     * Generates a list of entries. Based on how the default command works, it has"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "     * to be a function that takes in the url."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private static List\u003cEntry\u003e testEntryList(String url) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return List.of("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Mahoujin Guru Guru\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/mahoujin-guru-guru.html\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"Anime review 1\"),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Gamers!\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/gamers.html\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"Anime review 2\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Made in Abyss\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/made-in-abyss.html\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"Anime review n\"),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Mob Psycho 100\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/mob-psycho.html\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"Anime review\"),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: New Game!!\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/new-game-2.html\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"Anime revieww\"),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Saiki Kusuo no Psi-nan\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/saiki-kusuo.html\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"sigh\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Durarara!!\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/durarara.html\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                        String.format(DEFAULT_DESCRIPTION_TEXT, url)),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Battle Programmer Shirase\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/bps.html\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"lol\"),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Re:Zero\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/re_zero.html\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"idk\"),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                makeEntryFromRssTriple(\"Anime: Youjo Senki\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"https://blog.GNU.moe/anime/review/youjo_senki.html\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                        \"I like this reviewer\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    /** Makes an EntryBook entry from the 3 fields that we are harvesting from RSS. */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Entry makeEntryFromRssTriple(String title, String link, String description) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        return new Entry("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                new Title(title),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                new Description(description),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                new Link(link),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                new Address(\"unused\"), // this dummy matches that in FeedCommand"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                Collections.emptySet()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    /** Asserts that executing a FeedCommand with the given url imports the Entry list. */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void assertLoadingUrlImportsEntryList(String url, List\u003cEntry\u003e entriesToBeImported) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        Model model \u003d new ModelManagerStub();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        Model expectedModel \u003d new ModelManagerStub();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        CommandHistory commandHistory \u003d new CommandHistory();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_SUCCESS, url);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        FeedCommand command \u003d new FeedCommand(url);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        EntryBook expectedEntryBook \u003d new EntryBook();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        expectedEntryBook.setPersons(entriesToBeImported);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setEntryBook(expectedEntryBook);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        String firstUrl \u003d \"https://open.kattis.com/rss/new-problems\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        String secondUrl \u003d \"https://en.wikipedia.org/w/index.php?title\u003dSpecial:RecentChanges\u0026feed\u003drss\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        FeedCommand feedFirstCommand \u003d new FeedCommand(firstUrl);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        FeedCommand feedSecondCommand \u003d new FeedCommand(secondUrl);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertTrue(feedFirstCommand.equals(feedFirstCommand));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        FeedCommand feedFirstCommandCopy \u003d new FeedCommand(firstUrl);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertTrue(feedFirstCommand.equals(feedFirstCommandCopy));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertFalse(feedFirstCommand.equals(1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertFalse(feedFirstCommand.equals(null));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        // different entry -\u003e returns false"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertFalse(feedFirstCommand.equals(feedSecondCommand));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void execute_localUrl_success() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertLoadingUrlImportsEntryList(TEST_URL_LOCAL, testEntryList(TEST_URL_LOCAL));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void execute_remoteUrl_success() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertLoadingUrlImportsEntryList(TEST_URL, testEntryList(TEST_URL));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void execute_malformedUrlGiven_commandFails() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_FAILURE_NET,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                \"java.net.MalformedURLException: unknown protocol: notavalidprotocol\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        FeedCommand command \u003d new FeedCommand(MALFORMED_URL);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertCommandFailure(command, model, commandHistory, expectedMessage);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void execute_urlIsNotAFeed_commandFails() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_FAILURE_XML, NOTAFEED_URL);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        FeedCommand command \u003d new FeedCommand(NOTAFEED_URL);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertCommandFailure(command, model, commandHistory, expectedMessage);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 151,
      "-": 6
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ViewModeCommandTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static org.junit.Assert.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.mocks.TypicalModelManagerStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code ViewModeCommand}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rlrh"
        },
        "content": "public class ViewModeCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private Model model \u003d new TypicalModelManagerStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private Model expectedModel \u003d new TypicalModelManagerStub();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private CommandHistory commandHistory \u003d new CommandHistory();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void execute_viewMode_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        for (ViewMode viewMode: ViewMode.values()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            assertExecutionSuccess(viewMode);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand viewModeFirstCommand \u003d new ViewModeCommand(ViewMode.values()[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand viewModeSecondCommand \u003d new ViewModeCommand(ViewMode.values()[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(viewModeFirstCommand, viewModeFirstCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand viewModeFirstCommandCopy \u003d new ViewModeCommand(ViewMode.values()[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(viewModeFirstCommand, viewModeFirstCommandCopy);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertNotEquals(viewModeFirstCommand, 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertNotEquals(viewModeFirstCommand, null);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // different entry -\u003e returns false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertNotEquals(viewModeFirstCommand, viewModeSecondCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Executes a {@code ViewModeCommand} with the given {@code viewMode},"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * and checks that the model\u0027s view mode is set to the specified {@code viewMode}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void assertExecutionSuccess(ViewMode viewMode) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand viewModeCommand \u003d new ViewModeCommand(viewMode);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String expectedMessage \u003d String.format(ViewModeCommand.MESSAGE_SET_VIEW_MODE_SUCCESS, viewMode.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        expectedModel.setViewMode(viewMode);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertCommandSuccess(viewModeCommand, model, commandHistory, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /* code snippet for future use"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Executes a {@code ViewModeCommand} with the given {@code viewMode}, and checks that a {@code CommandException}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * is thrown with the {@code expectedMessage}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void assertExecutionFailure(ViewMode viewMode, String expectedMessage) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand viewModeCommand \u003d new ViewModeCommand(viewMode);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertCommandFailure(viewModeCommand, model, commandHistory, expectedMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 74
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/EntryBookParserTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ENTRY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditEntryDescriptor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.commands.FeedCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HistoryCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.SelectCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.ViewModeCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.TitleContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditEntryDescriptorBuilder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EntryBuilder;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EntryUtil;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public class EntryBookParserTest {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private final EntryBookParser parser \u003d new EntryBookParser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_add() throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Entry entry \u003d new EntryBuilder().build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand command \u003d (AddCommand) parser.parseCommand(EntryUtil.getAddCommand(entry));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddCommand(entry), command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand aliasCommand \u003d (AddCommand) parser.parseCommand(EntryUtil.getAddAliasCommand(entry));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddCommand(entry), aliasCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_clear() throws Exception {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_delete() throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ENTRY.getOneBased());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new DeleteCommand(INDEX_FIRST_ENTRY), command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_edit() throws Exception {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        Entry entry \u003d new EntryBuilder().build();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        EditEntryDescriptor descriptor \u003d new EditEntryDescriptorBuilder(entry).build();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                + INDEX_FIRST_ENTRY.getOneBased() + \" \" + EntryUtil.getEditEntryDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_ENTRY, descriptor), command);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand aliasCommand \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_ALIAS + \" \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                + INDEX_FIRST_ENTRY.getOneBased() + \" \" + EntryUtil.getEditEntryDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_ENTRY, descriptor), aliasCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_exit() throws Exception {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void parseCommand_feed() throws Exception {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertTrue(parser.parseCommand(FeedCommand.COMMAND_WORD + \" https://url.com/a.xml\") instanceof FeedCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_find() throws Exception {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new TitleContainsKeywordsPredicate(keywords)), command);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand aliasCommand \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCommand.COMMAND_ALIAS + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new TitleContainsKeywordsPredicate(keywords)), aliasCommand);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_help() throws Exception {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_ALIAS) instanceof HelpCommand);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_ALIAS + \" 3\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_history() throws Exception {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD) instanceof HistoryCommand);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\") instanceof HistoryCommand);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS) instanceof HistoryCommand);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS + \" 3\") instanceof HistoryCommand);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            parser.parseCommand(\"histories\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"The expected ParseException was not thrown.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_list() throws Exception {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS) instanceof ListCommand);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_select() throws Exception {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        SelectCommand command \u003d (SelectCommand) parser.parseCommand("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ENTRY.getOneBased());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new SelectCommand(INDEX_FIRST_ENTRY), command);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        SelectCommand aliasCommand \u003d (SelectCommand) parser.parseCommand("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                SelectCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_ENTRY.getOneBased());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new SelectCommand(INDEX_FIRST_ENTRY), aliasCommand);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void parseCommand_view() throws Exception {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand command \u003d (ViewModeCommand) parser.parseCommand("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                ViewModeCommand.COMMAND_WORD + \" \" + ViewMode.values()[0].toString());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(new ViewModeCommand(ViewMode.values()[0]), command);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand aliasCommand \u003d (ViewModeCommand) parser.parseCommand("
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                ViewModeCommand.COMMAND_ALIAS + \" \" + ViewMode.values()[1].toString());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(new ViewModeCommand(ViewMode.values()[1]), aliasCommand);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unrecognisedInput_throwsParseException() throws Exception {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(ParseException.class);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expectMessage(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.parseCommand(\"\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unknownCommand_throwsParseException() throws Exception {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(ParseException.class);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expectMessage(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.parseCommand(\"unknownCommand\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 9,
      "qjqqyy": 6,
      "-": 149
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/FeedCommandParserTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import seedu.address.logic.commands.FeedCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "public class FeedCommandParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private static final String TEST_URL \u003d \"https://open.kattis.com/rss/new-problems\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private FeedCommandParser parser \u003d new FeedCommandParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void parse_validArgs_returnsFeedCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertParseSuccess(parser, TEST_URL, new FeedCommand(TEST_URL));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    // Invalid URLs will only get caught when we attempt to connect, which is during command execution, so not"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    // covered in here."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    public void parse_emptyArgs_throwsParseException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FeedCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 28
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/ViewModeCommandParserTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.ViewModeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.ui.ViewMode;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "public class ViewModeCommandParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private ViewModeCommandParser parser \u003d new ViewModeCommandParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void parse_emptyArgs_throwsParseException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertParseFailure(parser,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                \"     \","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewModeCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void parse_validArgs_returnsViewCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // no leading and trailing whitespaces"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        ViewModeCommand expectedViewModeCommand \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                new ViewModeCommand(ViewMode.BROWSER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertParseSuccess(parser, \"browser\", expectedViewModeCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // multiple whitespaces between keywords"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertParseSuccess(parser, \" browser   \", expectedViewModeCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void parse_invalidArgs_throwsParseException() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertParseFailure(parser,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                \"nonsense\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewModeCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 41
    }
  },
  {
    "path": "src/test/java/seedu/address/network/NetworkTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.network;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertArrayEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.network.Network.fetchAsStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.network.Network.fetchAsString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.FILE_TEST_CONTENTS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.VALID_FILE_LINK;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.VALID_HTTPS_LINK;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.VALID_HTTP_LINK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class NetworkTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String HTTPS_TEST_URL \u003d VALID_HTTPS_LINK.getLink().value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String HTTP_TEST_URL \u003d VALID_HTTP_LINK.getLink().value;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FILE_TEST_URL \u003d VALID_FILE_LINK.getLink().value;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public void fetchAsStream_success() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        InputStream httpsContent \u003d fetchAsStream(HTTPS_TEST_URL);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        byte[] httpsContentBytes \u003d httpsContent.readAllBytes();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(httpsContentBytes.length \u003e 0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(new String(httpsContentBytes, StandardCharsets.UTF_8).contains(\"\u003cp\u003eIt works!\u003c/p\u003e\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        InputStream httpContent \u003d fetchAsStream(HTTP_TEST_URL);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(httpContent.readAllBytes().length \u003e 0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        InputStream localContent \u003d fetchAsStream(FILE_TEST_URL);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        byte[] localContentBytes \u003d localContent.readAllBytes();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(localContentBytes.length \u003e 0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArrayEquals(localContentBytes, FILE_TEST_CONTENTS.getBytes());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void fetchAsStream_invalidUrl_throwsIoexception() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(IOException.class);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        fetchAsStream(\"https://abc.``ILLEGAL_CHARS.com\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void fetchAsStream_invalidWebsite_throwsIoexception() throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(IOException.class);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        fetchAsStream(\"https://thiswebsite.does.not.exist.definitely\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public void fetchAsString_success() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            String httpsContent \u003d fetchAsString(\"https://cs2103-ay1819s2-w10-1.github.io/main/networktests/\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            assertTrue(httpsContent.length() \u003e 0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            assertTrue(httpsContent.contains(\"\u003cp\u003eIt works!\u003c/p\u003e\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            String httpContent \u003d fetchAsString(\"http://cs2103-ay1819s2-w10-1.github.io/main/networktests/\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            assertTrue(httpContent.length() \u003e 0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            String localContent \u003d fetchAsString("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                    MainApp.class.getResource(\"/NetworkTest/default.html\").toExternalForm());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            assertTrue(localContent.length() \u003e 0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(localContent, FILE_TEST_CONTENTS);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            fail(\"Fetching valid URL failed.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public void fetchAsString_invalidUrl_throwsIoexception() throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(IOException.class);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        fetchAsString(\"https://abc.``ILLEGAL_CHARS.com\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void fetchAsString_invalidWebsite_throwsIoexception() throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(IOException.class);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        fetchAsString(\"https://thiswebsite.does.not.exist.definitely\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 1,
      "-": 91
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalEntries.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_LINK_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_LINK_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIENCE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_BOB;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.EntryBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Entry} objects to be used in tests."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalEntries {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry ALICE \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Alice Pauline\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"123, Jurong West Ave 6, #08-111\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://alice.example.com\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"friends\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry BENSON \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Benson Meier\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"311, Clementi Ave 2, #02-25\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://johnd.example.com\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry CARL \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Carl Kurz\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://heinz.example.com\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"wall street\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry DANIEL \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Daniel Meier\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://cornelia.example.com\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"10th street\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"friends\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry ELLE \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Elle Meyer\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://werner.example.com\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"michegan ave\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry FIONA \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Fiona Kunz\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://lydia.example.com\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"little tokyo\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry GEORGE \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"George Best\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://anna.example.com\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"4th street\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry HOON \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Hoon Meier\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://stefan.example.com\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"little india\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry IDA \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Ida Mueller\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Description place-holder\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://hans.example.com\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"chicago ave\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added - Entry\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry AMY \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(VALID_TITLE_AMY)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(VALID_DESCRIPTION_AMY)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(VALID_LINK_AMY)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(VALID_TAG_TECH)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry BOB \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(VALID_TITLE_BOB)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(VALID_DESCRIPTION_BOB)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(VALID_LINK_BOB)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(VALID_ADDRESS_BOB)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(VALID_TAG_SCIENCE, VALID_TAG_TECH)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    // For testing of networking"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry VALID_HTTPS_LINK \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Valid HTTPS Link\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Valid https link\")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"https://cs2103-ay1819s2-w10-1.github.io/main/networktests/\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"Valid https link\")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry VALID_HTTP_LINK \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Valid HTTP Link\")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Valid http link\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"http://cs2103-ay1819s2-w10-1.github.io/main/networktests/\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            .withAddress(\"Valid http link\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Entry VALID_FILE_LINK \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Valid File Link\")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Valid file link\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"file://\" + MainApp.class.getResource("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                    \"/NetworkTest/default.html\").toExternalForm().substring(5))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"Valid file link\")"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final Entry INVALID_FILE_LINK \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Invalid File Link\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Invalid file link\")"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"file:///folder/file.type\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            .withAddress(\"Invalid file link\")"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final Entry WIKIPEDIA_LINK \u003d new EntryBuilder()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTitle(\"Wikipedia Test Web Page\")"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            .withDescription(\"Wikipedia test web page\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            .withLink(\"file://\" + MainApp.class.getResource("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rlrh"
        },
        "content": "                    \"/view/BrowserPanelTest/wikipedia.html\").toExternalForm().substring(5))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            .withAddress(\"Wikipedia test web page\")"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public static final String WIKIPEDIA_LINK_BASE_URL \u003d \"http://en.wikipedia.org/wiki/Therapsids\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_TEST_CONTENTS \u003d \"\u003c!DOCTYPE html\u003e\\n\u003chtml\u003e\\n\u003c/html\u003e\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    private TypicalEntries() {} // prevents instantiation"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code EntryBook} with all the typical persons."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    public static EntryBook getTypicalEntryBook() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        EntryBook ab \u003d new EntryBook();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Entry entry : getTypicalEntries()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            ab.addPerson(entry);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cEntry\u003e getTypicalEntries() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 13,
      "-": 146
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/BrowserPanelTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static guitests.guihandles.WebViewUtil.waitUntilBrowserLoaded;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static org.junit.Assert.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.INVALID_FILE_LINK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.VALID_FILE_LINK;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.WIKIPEDIA_LINK;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.WIKIPEDIA_LINK_BASE_URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import javax.xml.transform.TransformerException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.jsoup.Jsoup;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.jsoup.nodes.Document;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.BrowserPanelHandle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.commons.util.XmlUtil;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.entry.Entry;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class BrowserPanelTest extends GuiUnitTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private SimpleObjectProperty\u003cEntry\u003e selectedPerson \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private SimpleObjectProperty\u003cViewMode\u003e viewMode \u003d new SimpleObjectProperty\u003c\u003e(ViewMode.BROWSER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private BrowserPanel browserPanel;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private BrowserPanelHandle browserPanelHandle;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        guiRobot.interact(() -\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            browserPanel \u003d new BrowserPanel(selectedPerson, viewMode);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        uiPartRule.setUiPart(browserPanel);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        browserPanelHandle \u003d new BrowserPanelHandle(browserPanel.getRoot());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void displayDefaultPage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // default web page"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(BrowserPanel.DEFAULT_PAGE, browserPanelHandle.getLoadedUrl());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void displayCorrectPage() throws Exception {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // associated web page of a entry with valid link"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        guiRobot.interact(() -\u003e selectedPerson.set(VALID_FILE_LINK));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        URL expectedPersonUrl \u003d new URL(VALID_FILE_LINK.getLink().value);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        waitUntilBrowserLoaded(browserPanelHandle);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedPersonUrl, browserPanelHandle.getLoadedUrl());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void displayErrorPage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // associated web page of a entry with invalid link"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        guiRobot.interact(() -\u003e selectedPerson.set(INVALID_FILE_LINK));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        waitUntilBrowserLoaded(browserPanelHandle);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(BrowserPanel.ERROR_PAGE, browserPanelHandle.getLoadedUrl());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void displayReader() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // load associated web page of a Wikipedia entry"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        guiRobot.interact(() -\u003e selectedPerson.set(WIKIPEDIA_LINK));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        waitUntilBrowserLoaded(browserPanelHandle);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // process loaded content through Crux"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String originalHtml \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            originalHtml \u003d XmlUtil.convertDocumentToString(browserPanel.getWebEngine().getDocument());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } catch (TransformerException te) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Document doc \u003d browserPanel.getReaderDocumentFrom(WIKIPEDIA_LINK_BASE_URL, originalHtml);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String expectedText \u003d doc.text();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // set reader mode and reload"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        guiRobot.interact(() -\u003e viewMode.set(ViewMode.READER));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        waitUntilBrowserLoaded(browserPanelHandle);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // extract loaded content"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String readerHtml \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            readerHtml \u003d XmlUtil.convertDocumentToString(browserPanel.getWebEngine().getDocument());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        } catch (TransformerException te) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String actualText \u003d Jsoup.parse(readerHtml).text();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // check actual loaded content is the same as expected processed content"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 65,
      "-": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/StatusBarFooterTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalEntries.ALICE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "import static seedu.address.ui.StatusBarFooter.TARGET_COUNT_STATUS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Clock;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.AfterClass;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.BeforeClass;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.StatusBarFooterHandle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.EntryBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class StatusBarFooterTest extends GuiUnitTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path STUB_SAVE_LOCATION \u003d Paths.get(\"Stub\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path RELATIVE_PATH \u003d Paths.get(\".\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Clock originalClock \u003d StatusBarFooter.getClock();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Clock injectedClock \u003d Clock.fixed(Instant.now(), ZoneId.systemDefault());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private StatusBarFooterHandle statusBarFooterHandle;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private final EntryBook addressBook \u003d new EntryBook();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeClass"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void setUpBeforeClass() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        // inject fixed clock"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooter.setClock(injectedClock);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterClass"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void tearDownAfterClass() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // restore original clock"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooter.setClock(originalClock);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(STUB_SAVE_LOCATION, addressBook,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                addressBook.getEntryList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        uiPartRule.setUiPart(statusBarFooter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        statusBarFooterHandle \u003d new StatusBarFooterHandle(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void display() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        // initial state"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        int initialTargetCount \u003d addressBook.getEntryList().size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertStatusBarContent(RELATIVE_PATH.resolve(STUB_SAVE_LOCATION).toString(), SYNC_STATUS_INITIAL,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                String.format(TARGET_COUNT_STATUS, initialTargetCount));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // after address book is updated"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        guiRobot.interact(() -\u003e addressBook.addPerson(ALICE));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertStatusBarContent(RELATIVE_PATH.resolve(STUB_SAVE_LOCATION).toString(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                String.format(SYNC_STATUS_UPDATED, new Date(injectedClock.millis()).toString()),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                String.format(TARGET_COUNT_STATUS, initialTargetCount + 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the save location matches that of {@code expectedSaveLocation}, and the"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * sync status matches that of {@code expectedSyncStatus}."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "    private void assertStatusBarContent(String expectedSaveLocation, String expectedSyncStatus,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "                                        String expectedTargetCountStatus) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedSaveLocation, statusBarFooterHandle.getSaveLocation());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedSyncStatus, statusBarFooterHandle.getSyncStatus());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "        assertEquals(expectedTargetCountStatus, statusBarFooterHandle.getTargetCount());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        guiRobot.pauseForHuman();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 9,
      "-": 73
    }
  },
  {
    "path": "src/test/java/systemtests/AddressBookSystemTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package systemtests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static guitests.guihandles.WebViewUtil.waitUntilBrowserLoaded;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.MalformedURLException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.After;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.BeforeClass;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.ClassRule;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.BrowserPanelHandle;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.CommandBoxHandle;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.EntryListPanelHandle;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.MainMenuHandle;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.MainWindowHandle;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.ResultDisplayHandle;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import guitests.guihandles.StatusBarFooterHandle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.TestApp;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.SelectCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.EntryBook;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.TypicalEntries;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.BrowserPanel;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.CommandBox;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.ResultDisplay;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": " * A system test class for EntryBook, which provides access to handles of GUI components and helper methods"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": " * for test verification."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class AddressBookSystemTest {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @ClassRule"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ClockRule clockRule \u003d new ClockRule();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final List\u003cString\u003e COMMAND_BOX_DEFAULT_STYLE \u003d Arrays.asList(\"text-input\", \"text-field\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final List\u003cString\u003e COMMAND_BOX_ERROR_STYLE \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            Arrays.asList(\"text-input\", \"text-field\", CommandBox.ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final List\u003cString\u003e RESULT_DISPLAY_DEFAULT_STYLE \u003d Arrays.asList(\"text-input\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                   \"text-area\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                   \"result-display\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final List\u003cString\u003e RESULT_DISPLAY_ERROR_STYLE \u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            Arrays.asList(\"text-input\", \"text-area\", \"result-display\", ResultDisplay.ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindowHandle mainWindowHandle;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private TestApp testApp;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private SystemTestSetupHelper setupHelper;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeClass"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void setupBeforeClass() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        SystemTestSetupHelper.initialize();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        setupHelper \u003d new SystemTestSetupHelper();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        testApp \u003d setupHelper.setupApplication(this::getInitialData, getDataFileLocation());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        mainWindowHandle \u003d setupHelper.setupMainWindowHandle();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        waitUntilBrowserLoaded(getBrowserPanel());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertApplicationStartingStateIsCorrect();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @After"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        setupHelper.tearDownStage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the data to be loaded into the file in {@link #getDataFileLocation()}."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    protected EntryBook getInitialData() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return TypicalEntries.getTypicalEntryBook();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the directory of the data file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Path getDataFileLocation() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return TestApp.SAVE_LOCATION_FOR_TESTING;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindowHandle getMainWindowHandle() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindowHandle;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandBoxHandle getCommandBox() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindowHandle.getCommandBox();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public EntryListPanelHandle getPersonListPanel() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindowHandle.getEntryListPanel();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainMenuHandle getMainMenu() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindowHandle.getMainMenu();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public BrowserPanelHandle getBrowserPanel() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindowHandle.getBrowserPanel();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public StatusBarFooterHandle getStatusBarFooter() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindowHandle.getStatusBarFooter();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    public ResultDisplayHandle getResultDisplay() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindowHandle.getResultDisplay();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes {@code command} in the application\u0027s {@code CommandBox}."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method returns after UI components have been updated."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void executeCommand(String command) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        rememberStates();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        // Injects a fixed clock before executing a command so that the time stamp shown in the status bar"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        // after each command is predictable and also different from the previous command."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        clockRule.setInjectedClockToCurrentTime();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        mainWindowHandle.getCommandBox().run(command);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        waitUntilBrowserLoaded(getBrowserPanel());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays all persons in the address book."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void showAllPersons() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(ListCommand.COMMAND_WORD);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(getModel().getEntryBook().getEntryList().size(), getModel().getFilteredEntryList().size());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays all persons with any parts of their names matching {@code keyword} (case-insensitive)."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void showPersonsWithName(String keyword) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(FindCommand.COMMAND_WORD + \" \" + keyword);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(getModel().getFilteredEntryList().size() \u003c getModel().getEntryBook().getEntryList().size());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * Selects the entry at {@code index} of the displayed list."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void selectPerson(Index index) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(index.getZeroBased(), getPersonListPanel().getSelectedCardIndex());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all persons in the address book."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void deleteAllPersons() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        executeCommand(ClearCommand.COMMAND_WORD);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, getModel().getEntryBook().getEntryList().size());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the {@code CommandBox} displays {@code expectedCommandInput}, the {@code ResultDisplay} displays"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code expectedResultMessage}, the storage contains the same entry objects as {@code expectedModel}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * and the entry list panel displays the persons in the model correctly."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertApplicationDisplaysExpected(String expectedCommandInput, String expectedResultMessage,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedCommandInput, getCommandBox().getInput());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedResultMessage, getResultDisplay().getText());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EntryBook(expectedModel.getEntryBook()), testApp.readStorageAddressBook());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        assertListMatching(getPersonListPanel(), expectedModel.getFilteredEntryList());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     * Calls {@code BrowserPanelHandle}, {@code EntryListPanelHandle} and {@code StatusBarFooterHandle} to remember"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * their current state."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    private void rememberStates() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooterHandle statusBarFooterHandle \u003d getStatusBarFooter();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        getBrowserPanel().rememberUrl();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        statusBarFooterHandle.rememberSaveLocation();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        statusBarFooterHandle.rememberSyncStatus();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        getPersonListPanel().rememberSelectedEntryCard();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the previously selected card is now deselected and the browser\u0027s url is now displaying the"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "     * default page."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see BrowserPanelHandle#isUrlChanged()"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertSelectedCardDeselected() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(BrowserPanel.DEFAULT_PAGE, getBrowserPanel().getLoadedUrl());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(getPersonListPanel().isAnyCardSelected());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the browser\u0027s url is changed to display the details of the entry in the entry list panel at"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see BrowserPanelHandle#isUrlChanged()"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see EntryListPanelHandle#isSelectedEntryCardChanged()"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertSelectedCardChanged(Index expectedSelectedCardIndex) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        getPersonListPanel().navigateToCard(getPersonListPanel().getSelectedCardIndex());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String selectedCardLink \u003d getPersonListPanel().getHandleToSelectedCard().getLink();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        URL expectedUrl;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rlrh"
        },
        "content": "            expectedUrl \u003d new URL(selectedCardLink);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (MalformedURLException mue) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"URL expected to be valid.\", mue);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // assertEquals(expectedUrl, getBrowserPanel().getLoadedUrl());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        // TODO: make tests work consistently independent of Internet access and installation directory"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedSelectedCardIndex.getZeroBased(), getPersonListPanel().getSelectedCardIndex());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the browser\u0027s url and the selected card in the entry list panel remain unchanged."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see BrowserPanelHandle#isUrlChanged()"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see EntryListPanelHandle#isSelectedEntryCardChanged()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertSelectedCardUnchanged() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(getBrowserPanel().isUrlChanged());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(getPersonListPanel().isSelectedEntryCardChanged());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the command box shows the default style."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertCommandBoxShowsDefaultStyle() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(COMMAND_BOX_DEFAULT_STYLE, getCommandBox().getStyleClass());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the command box shows the error style."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertCommandBoxShowsErrorStyle() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(COMMAND_BOX_ERROR_STYLE, getCommandBox().getStyleClass());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the result display shows the default style."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertResultDisplayShowsDefaultStyle() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(RESULT_DISPLAY_DEFAULT_STYLE, getResultDisplay().getStyleClass());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the result display shows the error style."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertResultDisplayShowsErrorStyle() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(RESULT_DISPLAY_ERROR_STYLE, getResultDisplay().getStyleClass());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the entire status bar remains the same."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertStatusBarUnchanged() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooterHandle handle \u003d getStatusBarFooter();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(handle.isSaveLocationChanged());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(handle.isSyncStatusChanged());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that only the sync status in the status bar was changed to the timing of"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code ClockRule#getInjectedClock()}, while the save location remains the same."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void assertStatusBarUnchangedExceptSyncStatus() {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooterHandle handle \u003d getStatusBarFooter();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        String timestamp \u003d new Date(clockRule.getInjectedClock().millis()).toString();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedSyncStatus \u003d String.format(SYNC_STATUS_UPDATED, timestamp);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedSyncStatus, handle.getSyncStatus());"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(handle.isSaveLocationChanged());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the starting state of the application is correct."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertApplicationStartingStateIsCorrect() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", getCommandBox().getInput());"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", getResultDisplay().getText());"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        assertListMatching(getPersonListPanel(), getModel().getFilteredEntryList());"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(BrowserPanel.DEFAULT_PAGE, getBrowserPanel().getLoadedUrl());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Paths.get(\".\").resolve(testApp.getStorageSaveLocation()).toString(),"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "                getStatusBarFooter().getSaveLocation());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a defensive copy of the current model."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model getModel() {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        return testApp.getModel();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the command result in the app."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param commandResult command result to set"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    protected void setCommandResultInApp(CommandResult commandResult) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        testApp.setCommandResult(commandResult);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Sets the exception in the app."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param e exception to set"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    protected void setExceptionInApp(Exception e) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        testApp.setException(e);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 21,
      "-": 305
    }
  },
  {
    "path": "src/test/java/systemtests/ManualSetCommandResultExceptionSystemTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "package systemtests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "public class ManualSetCommandResultExceptionSystemTest extends AddressBookSystemTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void commandResultDisplayed() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String expectedMessage \u003d \"Manually set command result successfully displayed\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        CommandResult result \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertCommandResultHandled(result, expectedMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    public void exceptionPropagated() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        String expectedMessage \u003d \"Manually set exception successfully propagated\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Exception exception \u003d new Exception(expectedMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertExceptionHandled(exception, expectedMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Asserts that a manually set {@code CommandResult} displays as expected:\u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * 2. Result display box has default style class.\u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * 3. Command box has the default style class.\u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param commandResult command result to set"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param expectedResultMessage result message expected to be displayed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void assertCommandResultHandled(CommandResult commandResult, String expectedResultMessage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Model expectedModel \u003d getModel();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        expectedModel.setCommandResult(commandResult);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        setCommandResultInApp(commandResult);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertCommandBoxShowsDefaultStyle();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertResultDisplayShowsDefaultStyle();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * Asserts that a manually set {@code Exception} displays as expected:\u003cbr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * 2. Result display box has error style class.\u003cbr\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * 3. Command box has the error style class.\u003cbr\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param e exception to set"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     * @param expectedResultMessage result message expected to be displayed"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rlrh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    private void assertExceptionHandled(Exception e, String expectedResultMessage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        Model expectedModel \u003d getModel();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        expectedModel.setException(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        setExceptionInApp(e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertCommandBoxShowsErrorStyle();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rlrh"
        },
        "content": "        assertResultDisplayShowsErrorStyle();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rlrh": 65
    }
  },
  {
    "path": "src/test/resources/RssFeedTest/rss.xml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003crss version\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cchannel\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime Revies\u003c/title\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime\u003c/link\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "My stupid and completely irrelevant anime reviews."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/description\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cimage\u003ehttps://blog.GNU.moe/anime/icon.svg\u003c/image\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cauthor\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Tsutsukakushi Tsukiko \u0026lt;yui@cock.li\u0026gt; (7B29 6212 4A73 E1E9 15E8  A7D4 7F96 C964 9CBC BF51)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/author\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ccopyright\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "CC0 \u0026lt;https://creativecommons.org/publicdomain/zero/1.0/legalcode\u0026gt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/copyright\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clastBuildDate\u003eSun May 27 04:15:47 EEST 2018\u003c/lastBuildDate\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Mahoujin Guru Guru  \u003c/title\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/mahoujin-guru-guru.html\u003c/link\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Gamers!  \u003c/title\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/gamers.html\u003c/link\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review 2"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Made in Abyss  \u003c/title\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/made-in-abyss.html\u003c/link\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review n"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Mob Psycho 100  \u003c/title\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/mob-psycho.html\u003c/link\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime review"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: New Game!!  \u003c/title\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/new-game-2.html\u003c/link\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "Anime revieww"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Saiki Kusuo no Psi-nan  \u003c/title\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/saiki-kusuo.html\u003c/link\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "sigh"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Durarara!!  \u003c/title\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/durarara.html\u003c/link\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Battle Programmer Shirase  \u003c/title\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/bps.html\u003c/link\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "lol"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Re:Zero  \u003c/title\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/re_zero.html\u003c/link\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "idk"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003citem\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003ctitle\u003eAnime: Youjo Senki  \u003c/title\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003clink\u003ehttps://blog.GNU.moe/anime/review/youjo_senki.html\u003c/link\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cpubDate\u003eWed Jan 10 03:01:02 2018 +0200\u003c/pubDate\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003cdescription\u003e\u003c![CDATA["
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "I like this reviewer"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "]]\u003e\u003c/description\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/item\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/channel\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjqqyy"
        },
        "content": "\u003c/rss\u003e"
      }
    ],
    "authorContributionMap": {
      "qjqqyy": 98
    }
  },
  {
    "path": "src/test/resources/view/BrowserPanelTest/default.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!DOCTYPE html\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003chtml\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!-- TODO: Update this html document to a Crux readable document with title and descriptions --\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003chead\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "    \u003clink rel\u003d\"stylesheet\" href\u003d\"DarkTheme.css\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/head\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cbody class\u003d\"background\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/body\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "rlrh": 9,
      "-": 1
    }
  },
  {
    "path": "src/test/resources/view/BrowserPanelTest/wikipedia.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003chtml lang\u003d\"en\" dir\u003d\"ltr\" class\u003d\"client-nojs\" xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003chead\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctitle\u003eTherapsida - Wikipedia, the free encyclopedia\u003c/title\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cmeta http-equiv\u003d\"Content-Type\" content\u003d\"text/html; charset\u003dUTF-8\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cmeta http-equiv\u003d\"Content-Style-Type\" content\u003d\"text/css\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cmeta name\u003d\"generator\" content\u003d\"MediaWiki 1.18wmf1\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"alternate\" type\u003d\"application/x-wiki\" title\u003d\"Edit this page\" href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"edit\" title\u003d\"Edit this page\" href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"apple-touch-icon\" href\u003d\"//en.wikipedia.org/apple-touch-icon.png\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"shortcut icon\" href\u003d\"/favicon.ico\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"search\" type\u003d\"application/opensearchdescription+xml\" href\u003d\"/w/opensearch_desc.php\" title\u003d\"Wikipedia (en)\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"EditURI\" type\u003d\"application/rsd+xml\" href\u003d\"//en.wikipedia.org/w/api.php?action\u003drsd\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"copyright\" href\u003d\"//creativecommons.org/licenses/by-sa/3.0/\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"alternate\" type\u003d\"application/atom+xml\" title\u003d\"Wikipedia Atom feed\" href\u003d\"/w/index.php?title\u003dSpecial:RecentChanges\u0026amp;feed\u003datom\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"//bits.wikimedia.org/en.wikipedia.org/load.php?debug\u003dfalse\u0026amp;lang\u003den\u0026amp;modules\u003dext.wikihiero%7Cmediawiki.legacy.commonPrint%2Cshared%7Cskins.vector\u0026amp;only\u003dstyles\u0026amp;skin\u003dvector\u0026amp;*\" type\u003d\"text/css\" media\u003d\"all\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cmeta name\u003d\"ResourceLoaderDynamicStyles\" content\u003d\"\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"//bits.wikimedia.org/en.wikipedia.org/load.php?debug\u003dfalse\u0026amp;lang\u003den\u0026amp;modules\u003dsite\u0026amp;only\u003dstyles\u0026amp;skin\u003dvector\u0026amp;*\" type\u003d\"text/css\" media\u003d\"all\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cstyle type\u003d\"text/css\" media\u003d\"all\"\u003ea:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rlrh"
        },
        "content": "/* cache key: enwiki:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */\u003c/style\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cscript src\u003d\"//bits.wikimedia.org/en.wikipedia.org/load.php?debug\u003dfalse\u0026amp;lang\u003den\u0026amp;modules\u003dstartup\u0026amp;only\u003dscripts\u0026amp;skin\u003dvector\u0026amp;*\" type\u003d\"text/javascript\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cscript type\u003d\"text/javascript\"\u003eif ( window.mediaWiki ) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\tmw.config.set({\"wgCanonicalNamespace\": \"\", \"wgCanonicalSpecialPageName\": false, \"wgNamespaceNumber\": 0, \"wgPageName\": \"Therapsida\", \"wgTitle\": \"Therapsida\", \"wgCurRevisionId\": 441204315, \"wgArticleId\": 204092, \"wgIsArticle\": true, \"wgAction\": \"view\", \"wgUserName\": null, \"wgUserGroups\": [\"*\"], \"wgCategories\": [\"Articles with \\\u0027species\\\u0027 microformats\", \"All articles with unsourced statements\", \"Articles with unsourced statements from August 2007\", \"Synapsids\", \"Therapsids\"], \"wgBreakFrames\": false, \"wgRestrictionEdit\": [], \"wgRestrictionMove\": [], \"wgSearchNamespaces\": [0], \"wgFlaggedRevsParams\": {\"tags\": {\"status\": {\"levels\": 1, \"quality\": 2, \"pristine\": 3}}}, \"wgStableRevisionId\": null, \"wgVectorEnabledModules\": {\"collapsiblenav\": true, \"collapsibletabs\": true, \"editwarning\": true, \"expandablesearch\": false, \"footercleanup\": false, \"sectioneditlinks\": false, \"simplesearch\": true, \"experiments\": true}, \"wgWikiEditorEnabledModules\": {\"toolbar\": true, \"dialogs\": true, \"hidesig\": true, \"templateEditor\": false, \"templates\": false, \"preview\": false, \"previewDialog\": false, \"publish\": false, \"toc\": false}, \"wgTrackingToken\": \"1380a6633fc8172efc9816bc6ea2ef72\", \"wikilove-recipient\": \"\", \"wikilove-edittoken\": \"+\\\\\", \"wikilove-anon\": 0, \"mbEditToken\": \"+\\\\\", \"Geo\": {\"city\": \"\", \"country\": \"\"}, \"wgNoticeProject\": \"wikipedia\"});"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/script\u003e\u003cscript type\u003d\"text/javascript\"\u003eif ( window.mediaWiki ) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\tmw.loader.load([\"mediawiki.page.startup\"]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/script\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!--[if lt IE 7]\u003e\u003cstyle type\u003d\"text/css\"\u003ebody{behavior:url(\"/w/skins-1.18/vector/csshover.min.htc\")}\u003c/style\u003e\u003c![endif]--\u003e\u003c/head\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cbody class\u003d\"mediawiki ltr sitedir-ltr ns-0 ns-subject page-Therapsida action-view skin-vector\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cdiv id\u003d\"mw-page-base\" class\u003d\"noprint\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cdiv id\u003d\"mw-head-base\" class\u003d\"noprint\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- content --\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cdiv id\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003ca id\u003d\"top\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cdiv id\u003d\"mw-js-message\" style\u003d\"display:none;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\u003c!-- sitenotice --\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cdiv id\u003d\"siteNotice\"\u003e\u003c!-- centralNotice loads here --\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c!-- /sitenotice --\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\u003c!-- firstHeading --\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003ch1 id\u003d\"firstHeading\" class\u003d\"firstHeading\"\u003eTherapsida\u003c/h1\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c!-- /firstHeading --\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c!-- bodyContent --\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cdiv id\u003d\"bodyContent\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\u003c!-- tagline --\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003cdiv id\u003d\"siteSub\"\u003eFrom Wikipedia, the free encyclopedia\u003c/div\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c!-- /tagline --\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\u003c!-- subtitle --\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003cdiv id\u003d\"contentSub\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c!-- /subtitle --\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c!-- jumpto --\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003cdiv id\u003d\"jump-to-nav\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\tJump to: \u003ca href\u003d\"#mw-head\"\u003enavigation\u003c/a\u003e,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003ca href\u003d\"#p-search\"\u003esearch\u003c/a\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c!-- /jumpto --\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\u003c!-- bodycontent --\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003cdiv lang\u003d\"en\" dir\u003d\"ltr\" class\u003d\"mw-content-ltr\"\u003e\u003ctable class\u003d\"infobox biota\" style\u003d\"text-align: left; width: 200px; font-size: 100%\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cth colspan\u003d\"2\" style\u003d\"text-align: center; background-color: rgb(211,211,164)\"\u003eTherapsids\u003cbr /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003csmall\u003eTemporal range:\u003cbr /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ca href\u003d\"/wiki/Early_Permian\" title\u003d\"Early Permian\" class\u003d\"mw-redirect\"\u003eEarly Permian\u003c/a\u003e–\u003ca href\u003d\"/wiki/Early_Cretaceous\" title\u003d\"Early Cretaceous\"\u003eEarly Cretaceous\u003c/a\u003e, 275–100\u0026#160;Ma\u003cbr /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rlrh"
        },
        "content": "Descendant \u003ca href\u003d\"/wiki/Taxon\" title\u003d\"Taxon\"\u003etaxon\u003c/a\u003e \u003ca href\u003d\"/wiki/Mammalia\" title\u003d\"Mammalia\" class\u003d\"mw-redirect\"\u003eMammalia\u003c/a\u003e survives to present.\u003c/small\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"Timeline-row\" style\u003d\"margin: 4px auto 0; clear:both; width:220px; padding:0px; height:18px; overflow:visible; border:1px #666; border-style:solid none; position:relative; z-index:0;\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; left:0px; width:208.46153846154px; padding-left:5px; text-align:left; background:rgb(254,217,106); background-color: rgba(254,217,106,0); background-image: -moz-linear-gradient(left, rgba(254,217,106,0), rgba(254,217,106,1) 15%, rgba(254,217,106,1)); background-image: -ms-linear-gradient(left, rgba(254,217,106,0), rgba(254,217,106,1) 15%, rgba(254,217,106,1)); background-image: -o-linear-gradient(left, rgba(254,217,106,0), rgba(254,217,106,1) 15%, rgba(254,217,106,1)); background-image: -webkit-gradient(linear, left top, right top, from(rgba(254,217,106,0)), to(rgba(254,217,106,1)), color-stop(15%, rgba(254,217,106,1)));\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Precambrian\" title\u003d\"Precambrian\"\u003ePreЄ\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(127,160,86); left:36.553846153846px; width:18.175384615385px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Cambrian\" title\u003d\"Cambrian\"\u003eЄ\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(0,146,112); left:54.729230769231px; width:15.095384615385px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Ordovician\" title\u003d\"Ordovician\"\u003eO\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(179,225,182); left:69.824615384615px; width:9.3753846153846px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Silurian\" title\u003d\"Silurian\"\u003eS\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(203,140,55); left:79.2px; width:19.224615384615px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Devonian\" title\u003d\"Devonian\"\u003eD\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(103,165,153); left:98.424615384615px; width:20.375384615385px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Carboniferous\" title\u003d\"Carboniferous\"\u003eC\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(240,64,60); left:118.8px; width:16.246153846154px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Permian\" title\u003d\"Permian\"\u003eP\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(129,43,146); left:135.04615384615px; width:17.396923076923px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Triassic\" title\u003d\"Triassic\"\u003eT\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(52,178,201); left:152.44307692308px; width:18.310769230769px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Jurassic\" title\u003d\"Jurassic\"\u003eJ\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(127,198,78); left:170.75384615385px; width:27.076923076923px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Cretaceous\" title\u003d\"Cretaceous\"\u003eK\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(253,154,82); left:197.83076923077px; width:14.374461538462px;\"\u003e\u003csmall\u003e\u003ca href\u003d\"/wiki/Paleogene\" title\u003d\"Paleogene\"\u003e\u003csmall\u003ePg\u003c/small\u003e\u003c/a\u003e\u003c/small\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:100%; text-align:center; background-color:rgb(255,230,25); left:212.20523076923px; width:6.9188307692308px;\"\u003e\u003ca href\u003d\"/wiki/Neogene\" title\u003d\"Neogene\"\u003e\u003csmall\u003eN\u003c/small\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"end-border\" style\u003d\"position:absolute; height:100%; background-color:#666; width:1px; left:219px\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"margin:0 auto; line-height:0; clear:both; width:220px; padding:0px; height:8px; overflow:visible; background-color:transparent; position:relative; top:-4px; z-index:100;\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:8px; left:126.92307692308px; width:93.076923076923px; background-color:#360; opacity:0.42;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:8px; left:126.92307692308px; width:59.230769230769px; background-color:#360; opacity:1;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"position:absolute; height:6px; top:1px; left:127.92307692308px; width:57.230769230769px; background-color:#6c3;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/th\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd colspan\u003d\"2\" style\u003d\"text-align: center\"\u003e\u003ca href\u003d\"/wiki/File:Pristeroognathus_DB.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/4/42/Pristeroognathus_DB.jpg/240px-Pristeroognathus_DB.jpg\" width\u003d\"240\" height\u003d\"160\" /\u003e\u003c/a\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd colspan\u003d\"2\" style\u003d\"text-align: center; font-size: 88%\"\u003eIllustration of \u003ci\u003e\u003ca href\u003d\"/wiki/Pristerognathus\" title\u003d\"Pristerognathus\"\u003ePristerognathus\u003c/a\u003e\u003c/i\u003e, a cat-sized \u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003etherocephalian\u003c/a\u003e therapsid\u003c/td\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cth colspan\u003d\"2\" style\u003d\"text-align: center; background-color: rgb(211,211,164)\"\u003e\u003ca href\u003d\"/wiki/Biological_classification\" title\u003d\"Biological classification\"\u003eScientific classification\u003c/a\u003e \u003cspan class\u003d\"plainlinks\" style\u003d\"font-size:smaller; float:right; padding-right:0.4em; margin-left:-3em;\"\u003e\u003ca href\u003d\"/wiki/Template:Taxonomy/Therapsida\" title\u003d\"e\"\u003e\u003cimg alt\u003d\"e\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/7/74/Red_Pencil_Icon.png\" width\u003d\"16\" height\u003d\"16\" /\u003e\u003c/a\u003e\u003c/span\u003e\u003c/th\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003eKingdom:\u003c/td\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003cspan class\u003d\"kingdom\" style\u003d\"white-space:nowrap;\"\u003e\u003ca href\u003d\"/wiki/Animal\" title\u003d\"Animal\"\u003eAnimalia\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003ePhylum:\u003c/td\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003cspan class\u003d\"phylum\" style\u003d\"white-space:nowrap;\"\u003e\u003ca href\u003d\"/wiki/Chordate\" title\u003d\"Chordate\"\u003eChordata\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003eClass:\u003c/td\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003cspan class\u003d\"class\" style\u003d\"white-space:nowrap;\"\u003e\u003ca href\u003d\"/wiki/Synapsid\" title\u003d\"Synapsid\"\u003eSynapsida\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e(unranked):\u003c/td\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003cspan class\u003d\"(unranked)\" style\u003d\"white-space:nowrap;\"\u003e\u003ca href\u003d\"/wiki/Eupelycosauria\" title\u003d\"Eupelycosauria\"\u003eEupelycosauria\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e(unranked):\u003c/td\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003cspan class\u003d\"(unranked)\" style\u003d\"white-space:nowrap;\"\u003e\u003ca href\u003d\"/wiki/Sphenacodontia\" title\u003d\"Sphenacodontia\"\u003eSphenacodontia\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e(unranked):\u003c/td\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003cspan class\u003d\"(unranked)\" style\u003d\"white-space:nowrap;\"\u003e\u003ca href\u003d\"/wiki/Sphenacodontoidea\" title\u003d\"Sphenacodontoidea\"\u003eSphenacodontoidea\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003eOrder:\u003c/td\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003cspan class\u003d\"order\" style\u003d\"white-space:nowrap;\"\u003e\u003cb\u003eTherapsida\u003c/b\u003e\u003c/span\u003e\u003cbr /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003csmall\u003e\u003ca href\u003d\"/wiki/Robert_Broom\" title\u003d\"Robert Broom\"\u003eBroom\u003c/a\u003e, 1905\u003c/small\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cth colspan\u003d\"2\" style\u003d\"text-align: center; background-color: rgb(211,211,164)\"\u003eClades\u003c/th\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd colspan\u003d\"2\" style\u003d\"text-align: left\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003ca href\u003d\"/wiki/Biarmosuchia\" title\u003d\"Biarmosuchia\"\u003eBiarmosuchia\u003c/a\u003e \u003ca href\u003d\"/wiki/Paraphyly\" title\u003d\"Paraphyly\"\u003e*\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) \u003ca href\u003d\"/wiki/Eutherapsida\" title\u003d\"Eutherapsida\" class\u003d\"mw-redirect\"\u003eEutherapsida\u003c/a\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003ca href\u003d\"/wiki/Dinocephalia\" title\u003d\"Dinocephalia\"\u003eDinocephalia\u003c/a\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eInfraorder †\u003ca href\u003d\"/wiki/Anteosauria\" title\u003d\"Anteosauria\" class\u003d\"mw-redirect\"\u003eAnteosauria\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eInfraorder †\u003ca href\u003d\"/wiki/Tapinocephalia\" title\u003d\"Tapinocephalia\"\u003eTapinocephalia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) \u003ca href\u003d\"/wiki/Neotherapsida\" title\u003d\"Neotherapsida\"\u003eNeotherapsida\u003c/a\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003ca href\u003d\"/wiki/Anomodont\" title\u003d\"Anomodont\"\u003eAnomodontia\u003c/a\u003e \u003ca href\u003d\"/wiki/Paraphyly\" title\u003d\"Paraphyly\"\u003e*\u003c/a\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eInfraorder †\u003ca href\u003d\"/wiki/Dicynodontia\" title\u003d\"Dicynodontia\" class\u003d\"mw-redirect\"\u003eDicynodontia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) \u003ca href\u003d\"/wiki/Theriodontia\" title\u003d\"Theriodontia\" class\u003d\"mw-redirect\"\u003eTheriodontia\u003c/a\u003e \u003ca href\u003d\"/wiki/Paraphyly\" title\u003d\"Paraphyly\"\u003e*\u003c/a\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder \u003ca href\u003d\"/wiki/Cynodontia\" title\u003d\"Cynodontia\" class\u003d\"mw-redirect\"\u003eCynodontia\u003c/a\u003e \u003ca href\u003d\"/wiki/Paraphyly\" title\u003d\"Paraphyly\"\u003e*\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003ca href\u003d\"/wiki/Gorgonopsia\" title\u003d\"Gorgonopsia\"\u003eGorgonopsia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003eTherocephalia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e\u003cb\u003eTherapsida\u003c/b\u003e is a group of the most advanced reptile-grade \u003ca href\u003d\"/wiki/Synapsid\" title\u003d\"Synapsid\"\u003esynapsids\u003c/a\u003e, and the ancestors of \u003ca href\u003d\"/wiki/Mammals\" title\u003d\"Mammals\" class\u003d\"mw-redirect\"\u003emammals\u003c/a\u003e.\u003csup id\u003d\"cite_ref-romer1933_0-0\" class\u003d\"reference\"\u003e\u003ca href\u003d\"#cite_note-romer1933-0\"\u003e\u003cspan\u003e[\u003c/span\u003e1\u003cspan\u003e]\u003c/span\u003e\u003c/a\u003e\u003c/sup\u003e While mammals strictly speaking are surviving therapsids, the name is usually only applied to the non-mammalian \u003ca href\u003d\"/wiki/Evolutionary_grade\" title\u003d\"Evolutionary grade\"\u003eevolutionary grade\u003c/a\u003e. Many of the traits today seen as unique to mammals had their origin within the Therapsida, including \u003ca href\u003d\"/wiki/Hair\" title\u003d\"Hair\"\u003ehair\u003c/a\u003e, \u003ca href\u003d\"/wiki/Lactation\" title\u003d\"Lactation\"\u003elactation\u003c/a\u003e, and an erect posture. The earliest fossil attributed to Therapsida is believed to be \u003ci\u003e\u003ca href\u003d\"/wiki/Tetraceratops_insignis\" title\u003d\"Tetraceratops insignis\" class\u003d\"mw-redirect\"\u003eTetraceratops insignis\u003c/a\u003e\u003c/i\u003e (Lower \u003ca href\u003d\"/wiki/Permian\" title\u003d\"Permian\"\u003ePermian\u003c/a\u003e).\u003csup id\u003d\"cite_ref-1\" class\u003d\"reference\"\u003e\u003ca href\u003d\"#cite_note-1\"\u003e\u003cspan\u003e[\u003c/span\u003e2\u003cspan\u003e]\u003c/span\u003e\u003c/a\u003e\u003c/sup\u003e\u003csup id\u003d\"cite_ref-2\" class\u003d\"reference\"\u003e\u003ca href\u003d\"#cite_note-2\"\u003e\u003cspan\u003e[\u003c/span\u003e3\u003cspan\u003e]\u003c/span\u003e\u003c/a\u003e\u003c/sup\u003e Therapsids evolved from \u0027\u003ca href\u003d\"/wiki/Pelycosaur\" title\u003d\"Pelycosaur\"\u003epelycosaurs\u003c/a\u003e\u0027 (specifically \u003ca href\u003d\"/wiki/Sphenacodontia\" title\u003d\"Sphenacodontia\"\u003esphenacodonts\u003c/a\u003e) 275 million years ago. They replaced the pelycosaurs as the dominant land animal. Mammals appeared 200 million years ago, and all therapsids other than mammals became extinct in the \u003ca href\u003d\"/wiki/Early_Cretaceous\" title\u003d\"Early Cretaceous\"\u003eEarly Cretaceous\u003c/a\u003e period (146 \u003ca href\u003d\"/wiki/Annum\" title\u003d\"Annum\" class\u003d\"mw-redirect\"\u003eMa\u003c/a\u003e to 100 Ma).\u003c/p\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable id\u003d\"toc\" class\u003d\"toc\"\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"toctitle\"\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003eContents\u003c/h2\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-1 tocsection-1\"\u003e\u003ca href\u003d\"#Characteristics\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e1\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eCharacteristics\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-1 tocsection-2\"\u003e\u003ca href\u003d\"#Evolutionary_history\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e2\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eEvolutionary history\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-1 tocsection-3\"\u003e\u003ca href\u003d\"#Taxonomy\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e3\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eTaxonomy\u003c/span\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-2 tocsection-4\"\u003e\u003ca href\u003d\"#Classification\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e3.1\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eClassification\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-2 tocsection-5\"\u003e\u003ca href\u003d\"#Phylogeny\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e3.2\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003ePhylogeny\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-1 tocsection-6\"\u003e\u003ca href\u003d\"#See_also\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e4\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eSee also\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-1 tocsection-7\"\u003e\u003ca href\u003d\"#Notes\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e5\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eNotes\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-1 tocsection-8\"\u003e\u003ca href\u003d\"#References\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e6\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eReferences\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli class\u003d\"toclevel-1 tocsection-9\"\u003e\u003ca href\u003d\"#External_links\"\u003e\u003cspan class\u003d\"tocnumber\"\u003e7\u003c/span\u003e \u003cspan class\u003d\"toctext\"\u003eExternal links\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d1\" title\u003d\"Edit section: Characteristics\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"Characteristics\"\u003eCharacteristics\u003c/span\u003e\u003c/h2\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003eTherapsids\u0027 \u003ca href\u003d\"/wiki/Temporal_fenestra\" title\u003d\"Temporal fenestra\" class\u003d\"mw-redirect\"\u003etemporal fenestrae\u003c/a\u003e are greater than those of the pelycosaurs. The jaws of therapsids are more complex and powerful, and the \u003ca href\u003d\"/wiki/Teeth\" title\u003d\"Teeth\" class\u003d\"mw-redirect\"\u003eteeth\u003c/a\u003e are differentiated into frontal \u003ca href\u003d\"/wiki/Incisor\" title\u003d\"Incisor\"\u003eincisors\u003c/a\u003e for nipping, great lateral \u003ca href\u003d\"/wiki/Canine_tooth\" title\u003d\"Canine tooth\"\u003ecanines\u003c/a\u003e for puncturing and tearing, and \u003ca href\u003d\"/wiki/Molar_(tooth)\" title\u003d\"Molar (tooth)\"\u003emolars\u003c/a\u003e for shearing and chopping food. Their legs are positioned more vertically beneath their bodies than are the sprawling legs of \u003ca href\u003d\"/wiki/Reptile\" title\u003d\"Reptile\"\u003ereptiles\u003c/a\u003e and \u003ca href\u003d\"/wiki/Pelycosaur\" title\u003d\"Pelycosaur\"\u003epelycosaurs\u003c/a\u003e.\u003c/p\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d2\" title\u003d\"Edit section: Evolutionary history\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"Evolutionary_history\"\u003eEvolutionary history\u003c/span\u003e\u003c/h2\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"rellink boilerplate seealso\"\u003eSee also: \u003ca href\u003d\"/wiki/Evolution_of_mammals\" title\u003d\"Evolution of mammals\"\u003eEvolution of mammals\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tleft\"\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:222px;\"\u003e\u003ca href\u003d\"/wiki/File:Raranimus.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Raranimus.jpg/220px-Raranimus.jpg\" width\u003d\"220\" height\u003d\"175\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Raranimus.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Raranimus\" title\u003d\"Raranimus\"\u003eRaranimus\u003c/a\u003e\u003c/i\u003e, a primitive therapsid\u003c/div\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003eTherapsids \u003ca href\u003d\"/wiki/Evolution\" title\u003d\"Evolution\"\u003eevolved\u003c/a\u003e from a group of pelycosaurs called \u003ca href\u003d\"/wiki/Sphenacodontia\" title\u003d\"Sphenacodontia\"\u003esphenacodonts\u003c/a\u003e.\u003csup id\u003d\"cite_ref-3\" class\u003d\"reference\"\u003e\u003ca href\u003d\"#cite_note-3\"\u003e\u003cspan\u003e[\u003c/span\u003e4\u003cspan\u003e]\u003c/span\u003e\u003c/a\u003e\u003c/sup\u003e Therapsids became the dominant land animals in the Middle \u003ca href\u003d\"/wiki/Permian\" title\u003d\"Permian\"\u003ePermian\u003c/a\u003e, displacing the pelycosaurs. Therapsida consists of three bigger \u003ca href\u003d\"/wiki/Clades\" title\u003d\"Clades\" class\u003d\"mw-redirect\"\u003eclades\u003c/a\u003e, the \u003ca href\u003d\"/wiki/Dinocephalia\" title\u003d\"Dinocephalia\"\u003edinocephalians\u003c/a\u003e, the herbivorous \u003ca href\u003d\"/wiki/Anomodont\" title\u003d\"Anomodont\"\u003eanomodonts\u003c/a\u003e, and the mostly carnivorous \u003ca href\u003d\"/wiki/Theriodont\" title\u003d\"Theriodont\"\u003etheriodonts\u003c/a\u003e, with the carnivorous \u003ca href\u003d\"/wiki/Biarmosuchia\" title\u003d\"Biarmosuchia\"\u003ebiarmosuchians\u003c/a\u003e as a \u003ca href\u003d\"/wiki/Paraphyletic\" title\u003d\"Paraphyletic\" class\u003d\"mw-redirect\"\u003eparaphyletic\u003c/a\u003e assemblage of primitive forms. After a brief burst of evolutionary diversity, the dinocephalians died out in the later Middle Permian (\u003ca href\u003d\"/wiki/Guadalupian\" title\u003d\"Guadalupian\" class\u003d\"mw-redirect\"\u003eGuadalupian\u003c/a\u003e) but the anomodont \u003ca href\u003d\"/wiki/Dicynodont\" title\u003d\"Dicynodont\"\u003edicynodonts\u003c/a\u003e and the theriodont \u003ca href\u003d\"/wiki/Gorgonopsia\" title\u003d\"Gorgonopsia\"\u003egorgonopsians\u003c/a\u003e and \u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003etherocephalians\u003c/a\u003e flourished, being joined at the very end of the Permian by the first \u003ca href\u003d\"/wiki/Cynodont\" title\u003d\"Cynodont\"\u003ecynodonts\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003eLike all land animals, the therapsids were seriously affected by the \u003ca href\u003d\"/wiki/Permian%E2%80%93Triassic_extinction_event\" title\u003d\"Permian–Triassic extinction event\"\u003ePermian–Triassic extinction event\u003c/a\u003e, with the very successful gorgonopsians dying out altogether and the remaining groups, \u003ca href\u003d\"/wiki/Dicynodont\" title\u003d\"Dicynodont\"\u003edicynodonts\u003c/a\u003e, \u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003etherocephalians\u003c/a\u003e, and \u003ca href\u003d\"/wiki/Cynodont\" title\u003d\"Cynodont\"\u003ecynodonts\u003c/a\u003e of a few species, each surviving into the \u003ca href\u003d\"/wiki/Triassic\" title\u003d\"Triassic\"\u003eTriassic\u003c/a\u003e. The dicynodonts, now represented by a single family of large stocky \u003ca href\u003d\"/wiki/Herbivore\" title\u003d\"Herbivore\"\u003eherbivores\u003c/a\u003e, the \u003ca href\u003d\"/wiki/Kannemeyeridae\" title\u003d\"Kannemeyeridae\" class\u003d\"mw-redirect\"\u003eKannemeyeridae\u003c/a\u003e, and the medium-sized cynodonts (including both carnivorous and herbivorous forms), flourished worldwide, throughout the Early and Middle Triassic. They died out across much of \u003ca href\u003d\"/wiki/Pangea\" title\u003d\"Pangea\" class\u003d\"mw-redirect\"\u003ePangea\u003c/a\u003e at the end of the \u003ca href\u003d\"/wiki/Carnian\" title\u003d\"Carnian\"\u003eCarnian\u003c/a\u003e (Late Triassic), although they continued for some time longer in the wet equatorial band and the south.\u003c/p\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tright\"\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:222px;\"\u003e\u003ca href\u003d\"/wiki/File:Lemurosaurus.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/9/98/Lemurosaurus.jpg/220px-Lemurosaurus.jpg\" width\u003d\"220\" height\u003d\"180\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Lemurosaurus.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Lemurosaurus\" title\u003d\"Lemurosaurus\"\u003eLemurosaurus\u003c/a\u003e\u003c/i\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003eSome exceptions were the still further derived \u003ca href\u003d\"/wiki/Eucynodonts\" title\u003d\"Eucynodonts\" class\u003d\"mw-redirect\"\u003eeucynodonts\u003c/a\u003e. At least three groups of them survived. They all appeared in the \u003ca href\u003d\"/wiki/Late_Triassic\" title\u003d\"Late Triassic\"\u003eLate Triassic\u003c/a\u003e period. The extremely mammal-like family, \u003ca href\u003d\"/wiki/Tritylodontidae\" title\u003d\"Tritylodontidae\"\u003eTritylodontidae\u003c/a\u003e, survived into the Early \u003ca href\u003d\"/wiki/Cretaceous\" title\u003d\"Cretaceous\"\u003eCretaceous\u003c/a\u003e. An extremely mammal-like family, \u003ca href\u003d\"/wiki/Tritheledontidae\" title\u003d\"Tritheledontidae\"\u003eTritheledontidae\u003c/a\u003e, are unknown later than the Early \u003ca href\u003d\"/wiki/Jurassic\" title\u003d\"Jurassic\"\u003eJurassic\u003c/a\u003e. The third group, \u003ci\u003e\u003ca href\u003d\"/wiki/Morganucodon\" title\u003d\"Morganucodon\"\u003eMorganucodon\u003c/a\u003e\u003c/i\u003e and similar animals, were \u003ca href\u003d\"/wiki/Mammaliformes\" title\u003d\"Mammaliformes\" class\u003d\"mw-redirect\"\u003emammaliformes\u003c/a\u003e or the \"stem-mammals\".\u003c/p\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003eSome non-eucynodont cynodonts survived the Permian-Triassic extinction, such as \u003ci\u003e\u003ca href\u003d\"/wiki/Thrinaxodon\" title\u003d\"Thrinaxodon\"\u003eThrinaxodon\u003c/a\u003e\u003c/i\u003e but only to become extinct by the \u003ca href\u003d\"/wiki/Middle_Triassic\" title\u003d\"Middle Triassic\"\u003eMiddle Triassic\u003c/a\u003e.\u003c/p\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003eThe \u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003etherocephalians\u003c/a\u003e, relatives of the cynodonts, managed to survive the Permian-Triassic extinction and continued to diversify through the \u003ca href\u003d\"/wiki/Early_Triassic\" title\u003d\"Early Triassic\"\u003eEarly Triassic\u003c/a\u003e period. Approaching the end of the period, however, the therocephalians were declining to extinction and eventually became extinct, possibly due to \u003ca href\u003d\"/wiki/Climate_change\" title\u003d\"Climate change\"\u003eclimatic changes\u003c/a\u003e and competition from cynodonts and other \u003ca href\u003d\"/wiki/Animal\" title\u003d\"Animal\"\u003eanimals\u003c/a\u003e struggling to survive.\u003c/p\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e\u003ca href\u003d\"/wiki/Dicynodonts\" title\u003d\"Dicynodonts\" class\u003d\"mw-redirect\"\u003eDicynodonts\u003c/a\u003e have been thought to have become extinct before the \u003ca href\u003d\"/wiki/Triassic-Jurassic_extinction_event\" title\u003d\"Triassic-Jurassic extinction event\" class\u003d\"mw-redirect\"\u003eend of the Triassic\u003c/a\u003e, but there is evidence that they survived the extinction. Their fossils have been found in \u003ca href\u003d\"/wiki/Gondwana\" title\u003d\"Gondwana\"\u003eGondwana\u003c/a\u003e. Other animals that were common in the Triassic also took refuge here, such as the \u003ca href\u003d\"/wiki/Temnospondyl\" title\u003d\"Temnospondyl\" class\u003d\"mw-redirect\"\u003etemnospondyls\u003c/a\u003e. This is an example of \u003ca href\u003d\"/wiki/Lazarus_taxon\" title\u003d\"Lazarus taxon\"\u003eLazarus taxon\u003c/a\u003e.\u003csup class\u003d\"Template-Fact\" style\u003d\"white-space:nowrap;\"\u003e[\u003ci\u003e\u003ca href\u003d\"/wiki/Wikipedia:Citation_needed\" title\u003d\"Wikipedia:Citation needed\"\u003e\u003cspan title\u003d\"This claim needs references to reliable sources from August 2007\"\u003ecitation needed\u003c/span\u003e\u003c/a\u003e\u003c/i\u003e]\u003c/sup\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e\u003ca href\u003d\"/wiki/Mammal\" title\u003d\"Mammal\"\u003eMammals\u003c/a\u003e, the only living therapsids, evolved in the \u003ca href\u003d\"/wiki/Early_Jurassic\" title\u003d\"Early Jurassic\"\u003eEarly Jurassic\u003c/a\u003e period. They radiated from a group of \u003ca href\u003d\"/wiki/Mammaliaformes\" title\u003d\"Mammaliaformes\"\u003eMammaliaformes\u003c/a\u003e that is related to the \u003ca href\u003d\"/wiki/Symmetrodont\" title\u003d\"Symmetrodont\" class\u003d\"mw-redirect\"\u003esymmetrodonts\u003c/a\u003e. The Mammaliaformes themselves evolved from \u003ca href\u003d\"/wiki/Probainognathia\" title\u003d\"Probainognathia\"\u003eprobainognathians\u003c/a\u003e, a lineage of the \u003ca href\u003d\"/wiki/Eucynodont\" title\u003d\"Eucynodont\" class\u003d\"mw-redirect\"\u003eeucynodont\u003c/a\u003e suborder.\u003c/p\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d3\" title\u003d\"Edit section: Taxonomy\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"Taxonomy\"\u003eTaxonomy\u003c/span\u003e\u003c/h2\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch3\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d4\" title\u003d\"Edit section: Classification\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"Classification\"\u003eClassification\u003c/span\u003e\u003c/h3\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tright\"\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:202px;\"\u003e\u003ca href\u003d\"/wiki/File:Biarmosuchus.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Biarmosuchus.jpg/200px-Biarmosuchus.jpg\" width\u003d\"200\" height\u003d\"108\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Biarmosuchus.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Biarmosuchus\" title\u003d\"Biarmosuchus\"\u003eBiarmosuchus\u003c/a\u003e\u003c/i\u003e, a Biarmosuchian\u003c/div\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tright\"\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:202px;\"\u003e\u003ca href\u003d\"/wiki/File:Estemmenosuchus_BW.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Estemmenosuchus_BW.jpg/200px-Estemmenosuchus_BW.jpg\" width\u003d\"200\" height\u003d\"116\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Estemmenosuchus_BW.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Estemmenosuchus\" title\u003d\"Estemmenosuchus\"\u003eEstemmenosuchus\u003c/a\u003e\u003c/i\u003e, a Dinocephalian\u003c/div\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tright\"\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:202px;\"\u003e\u003ca href\u003d\"/wiki/File:Anteosaurus_BW.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Anteosaurus_BW.jpg/200px-Anteosaurus_BW.jpg\" width\u003d\"200\" height\u003d\"80\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Anteosaurus_BW.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Anteosaurus\" title\u003d\"Anteosaurus\"\u003eAnteosaurus\u003c/a\u003e\u003c/i\u003e, an Anteosaur\u003c/div\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tright\"\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:202px;\"\u003e\u003ca href\u003d\"/wiki/File:Inostrancevia_BW.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/7/75/Inostrancevia_BW.jpg/200px-Inostrancevia_BW.jpg\" width\u003d\"200\" height\u003d\"89\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Inostrancevia_BW.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Inostrancevia\" title\u003d\"Inostrancevia\"\u003eInostrancevia\u003c/a\u003e\u003c/i\u003e, a Gorgonopsid\u003c/div\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tright\"\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:202px;\"\u003e\u003ca href\u003d\"/wiki/File:Bauria_BW.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/c/c0/Bauria_BW.jpg/200px-Bauria_BW.jpg\" width\u003d\"200\" height\u003d\"88\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Bauria_BW.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Bauria\" title\u003d\"Bauria\"\u003eBauria\u003c/a\u003e\u003c/i\u003e, a Therocephalian\u003c/div\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumb tright\"\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbinner\" style\u003d\"width:202px;\"\u003e\u003ca href\u003d\"/wiki/File:Oligokyphus_BW.jpg\" class\u003d\"image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/3/39/Oligokyphus_BW.jpg/200px-Oligokyphus_BW.jpg\" width\u003d\"200\" height\u003d\"61\" class\u003d\"thumbimage\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"thumbcaption\"\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"magnify\"\u003e\u003ca href\u003d\"/wiki/File:Oligokyphus_BW.jpg\" class\u003d\"internal\" title\u003d\"Enlarge\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/magnify-clip.png\" width\u003d\"15\" height\u003d\"11\" alt\u003d\"\" /\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ci\u003e\u003ca href\u003d\"/wiki/Oligokyphus\" title\u003d\"Oligokyphus\"\u003eOligokyphus\u003c/a\u003e\u003c/i\u003e, a Cynodont\u003c/div\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eClass \u003cb\u003e\u003ca href\u003d\"/wiki/Synapsida\" title\u003d\"Synapsida\" class\u003d\"mw-redirect\"\u003eSynapsida\u003c/a\u003e\u003c/b\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eORDER \u003cb\u003eTHERAPSIDA\u003c/b\u003e \u003ca href\u003d\"/wiki/Paraphyletic\" title\u003d\"Paraphyletic\" class\u003d\"mw-redirect\"\u003e*\u003c/a\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e?Family †\u003ca href\u003d\"/wiki/Tetraceratopsidae\" title\u003d\"Tetraceratopsidae\" class\u003d\"mw-redirect\"\u003eTetraceratopsidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003cb\u003e\u003ca href\u003d\"/wiki/Biarmosuchia\" title\u003d\"Biarmosuchia\"\u003eBiarmosuchia\u003c/a\u003e\u003c/b\u003e \u003ca href\u003d\"/wiki/Paraphyletic\" title\u003d\"Paraphyletic\" class\u003d\"mw-redirect\"\u003e*\u003c/a\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Biarmosuchus_tener\" title\u003d\"Biarmosuchus tener\" class\u003d\"mw-redirect\"\u003eBiarmosuchidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Eotitanosuchus_olsoni\" title\u003d\"Eotitanosuchus olsoni\" class\u003d\"mw-redirect\"\u003eEotitanosuchidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003cb\u003e\u003ca href\u003d\"/wiki/Eutherapsida\" title\u003d\"Eutherapsida\" class\u003d\"mw-redirect\"\u003eEutherapsida\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003cb\u003e\u003ca href\u003d\"/wiki/Dinocephalia\" title\u003d\"Dinocephalia\"\u003eDinocephalia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Estemmenosuchidae\" title\u003d\"Estemmenosuchidae\"\u003eEstemmenosuchidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e?Infraorder †\u003cb\u003e\u003ca href\u003d\"/wiki/Anteosauria\" title\u003d\"Anteosauria\" class\u003d\"mw-redirect\"\u003eAnteosauria\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Anteosauridae\" title\u003d\"Anteosauridae\"\u003eAnteosauridae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Brithopodidae\" title\u003d\"Brithopodidae\"\u003eBrithopodidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Deuterosauridae\" title\u003d\"Deuterosauridae\" class\u003d\"mw-redirect\"\u003eDeuterosauridae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Syodontidae\" title\u003d\"Syodontidae\"\u003eSyodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e?Family †\u003ca href\u003d\"/w/index.php?title\u003dStenocybidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Stenocybidae (page does not exist)\"\u003eStenocybidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e†\u003cb\u003e\u003ca href\u003d\"/wiki/Tapinocephalia\" title\u003d\"Tapinocephalia\"\u003eTapinocephalia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dStyracocephalidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Styracocephalidae (page does not exist)\"\u003eStyracocephalidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Tapinocephalidae\" title\u003d\"Tapinocephalidae\"\u003eTapinocephalidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Titanosuchidae\" title\u003d\"Titanosuchidae\"\u003eTitanosuchidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003cb\u003e\u003ca href\u003d\"/wiki/Neotherapsida\" title\u003d\"Neotherapsida\"\u003eNeotherapsida\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003cb\u003e\u003ca href\u003d\"/wiki/Anomodont\" title\u003d\"Anomodont\"\u003eAnomodontia\u003c/a\u003e\u003c/b\u003e \u003ca href\u003d\"/wiki/Paraphyletic\" title\u003d\"Paraphyletic\" class\u003d\"mw-redirect\"\u003e*\u003c/a\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuperfamily †\u003ca href\u003d\"/w/index.php?title\u003dVenyukoviamorpha\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Venyukoviamorpha (page does not exist)\"\u003eVenyukoviamorpha\u003c/a\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dOtsheridae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Otsheridae (page does not exist)\"\u003eOtsheridae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Venyukovia\" title\u003d\"Venyukovia\"\u003eVenyukoviidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eInfraorder †\u003cb\u003e\u003ca href\u003d\"/wiki/Dromasauria\" title\u003d\"Dromasauria\"\u003eDromasauria\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Galeopidae\" title\u003d\"Galeopidae\" class\u003d\"mw-redirect\"\u003eGaleopidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eInfraorder †\u003cb\u003e\u003ca href\u003d\"/wiki/Dicynodont\" title\u003d\"Dicynodont\"\u003eDicynodonta\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dEndothiodontidae\u0026aamp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Endothiodontidae (page does not exist)\"\u003eEndothiodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Eodicynodontidae\" title\u003d\"Eodicynodontidae\" class\u003d\"mw-redirect\"\u003eEodicynodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dKingoriidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Kingoriidae (page does not exist)\"\u003eKingoriidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) †\u003ca href\u003d\"/wiki/Diictodontia\" title\u003d\"Diictodontia\"\u003eDiictodontia\u003c/a\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuperfamily †\u003ca href\u003d\"/w/index.php?title\u003dEmydopoidea\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Emydopoidea (page does not exist)\"\u003eEmydopoidea\u003c/a\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dCistecephalidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Cistecephalidae (page does not exist)\"\u003eCistecephalidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dEmydopidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Emydopidae (page does not exist)\"\u003eEmydopidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuperfamily †\u003ca href\u003d\"/w/index.php?title\u003dRobertoidea\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Robertoidea (page does not exist)\"\u003eRobertoidea\u003c/a\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Diictodontidae\" title\u003d\"Diictodontidae\" class\u003d\"mw-redirect\"\u003eDiictodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Robertiidae\" title\u003d\"Robertiidae\" class\u003d\"mw-redirect\"\u003eRobertiidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) †\u003cb\u003e\u003ca href\u003d\"/wiki/Pristerodontia\" title\u003d\"Pristerodontia\"\u003ePristerodontia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dAulacocephalodontidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Aulacocephalodontidae (page does not exist)\"\u003eAulacocephalodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Dicynodontidae\" title\u003d\"Dicynodontidae\" class\u003d\"mw-redirect\"\u003eDicynodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Kannemeyeriidae\" title\u003d\"Kannemeyeriidae\"\u003eKannemeyeriidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Lystrosauridae\" title\u003d\"Lystrosauridae\"\u003eLystrosauridae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dOudenodontidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Oudenodontidae (page does not exist)\"\u003eOudenodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dPristerodontidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Pristerodontidae (page does not exist)\"\u003ePristerodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dShanisiodontidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Shanisiodontidae (page does not exist)\"\u003eShanisiodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Stahleckeriidae\" title\u003d\"Stahleckeriidae\" class\u003d\"mw-redirect\"\u003eStahleckeriidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003cb\u003e\u003ca href\u003d\"/wiki/Theriodont\" title\u003d\"Theriodont\"\u003eTheriodontia\u003c/a\u003e\u003c/b\u003e \u003ca href\u003d\"/wiki/Paraphyletic\" title\u003d\"Paraphyletic\" class\u003d\"mw-redirect\"\u003e*\u003c/a\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003cb\u003e\u003ca href\u003d\"/wiki/Gorgonopsia\" title\u003d\"Gorgonopsia\"\u003eGorgonopsia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Gorgonopsia\" title\u003d\"Gorgonopsia\"\u003eGorgonopsidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003cb\u003e\u003ca href\u003d\"/w/index.php?title\u003dEutheriodontia\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Eutheriodontia (page does not exist)\"\u003eEutheriodontia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder †\u003cb\u003e\u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003eTherocephalia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Lycosuchidae\" title\u003d\"Lycosuchidae\" class\u003d\"mw-redirect\"\u003eLycosuchidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) †\u003cb\u003e\u003ca href\u003d\"/wiki/Scylacosauria\" title\u003d\"Scylacosauria\"\u003eScylacosauria\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Scylacosaurus\" title\u003d\"Scylacosaurus\"\u003eScylacosauridae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eInfraorder †\u003cb\u003e\u003ca href\u003d\"/wiki/Eutherocephalia\" title\u003d\"Eutherocephalia\"\u003eEutherocephalia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Hofmeyriidae\" title\u003d\"Hofmeyriidae\"\u003eHofmeyriidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Moschorhinidae\" title\u003d\"Moschorhinidae\" class\u003d\"mw-redirect\"\u003eMoschorhinidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dWhaitsiidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Whaitsiidae (page does not exist)\"\u003eWhaitsiidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuperfamily \u003cb\u003e\u003ca href\u003d\"/w/index.php?title\u003dBauriodea\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Bauriodea (page does not exist)\"\u003eBauriodea\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Bauriidae\" title\u003d\"Bauriidae\"\u003eBauriidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dEriciolacteridae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Ericiolacteridae (page does not exist)\"\u003eEriciolacteridae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dIctidosuchidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Ictidosuchidae (page does not exist)\"\u003eIctidosuchidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dIctidosuchopsidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Ictidosuchopsidae (page does not exist)\"\u003eIctidosuchopsidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dLycideopsidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Lycideopsidae (page does not exist)\"\u003eLycideopsidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eSuborder \u003cb\u003e\u003ca href\u003d\"/wiki/Cynodontia\" title\u003d\"Cynodontia\" class\u003d\"mw-redirect\"\u003eCynodontia\u003c/a\u003e\u003c/b\u003e \u003ca href\u003d\"/wiki/Paraphyletic\" title\u003d\"Paraphyletic\" class\u003d\"mw-redirect\"\u003e*\u003c/a\u003e"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Dviniidae\" title\u003d\"Dviniidae\" class\u003d\"mw-redirect\"\u003eDviniidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Procynosuchidae\" title\u003d\"Procynosuchidae\"\u003eProcynosuchidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) \u003cb\u003e\u003ca href\u003d\"/wiki/Epicynodontia\" title\u003d\"Epicynodontia\" class\u003d\"mw-redirect\"\u003eEpicynodontia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Galesauridae\" title\u003d\"Galesauridae\"\u003eGalesauridae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Thrinaxodontidae\" title\u003d\"Thrinaxodontidae\" class\u003d\"mw-redirect\"\u003eThrinaxodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eInfraorder \u003cb\u003e\u003ca href\u003d\"/wiki/Eucynodontia\" title\u003d\"Eucynodontia\"\u003eEucynodontia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) †\u003cb\u003e\u003ca href\u003d\"/w/index.php?title\u003dCygnognathia\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Cygnognathia (page does not exist)\"\u003eCygnognathia\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Cynognathidae\" title\u003d\"Cynognathidae\" class\u003d\"mw-redirect\"\u003eCynognathidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dDiademodontidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Diademodontidae (page does not exist)\"\u003eDiademodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Traversodontidae\" title\u003d\"Traversodontidae\"\u003eTraversodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Trirachodontidae\" title\u003d\"Trirachodontidae\"\u003eTrirachodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Tritylodontidae\" title\u003d\"Tritylodontidae\"\u003eTritylodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) \u003ca href\u003d\"/wiki/Probainognathia\" title\u003d\"Probainognathia\"\u003eProbainognathia\u003c/a\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/w/index.php?title\u003dChinquodontidae\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Chinquodontidae (page does not exist)\"\u003eChinquodontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Probainognathidae\" title\u003d\"Probainognathidae\"\u003eProbainognathidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e(unranked) †\u003ca href\u003d\"/wiki/Ictidosauria\" title\u003d\"Ictidosauria\" class\u003d\"mw-redirect\"\u003eIctidosauria\u003c/a\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eFamily †\u003ca href\u003d\"/wiki/Tritheledontidae\" title\u003d\"Tritheledontidae\"\u003eTritheledontidae\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003cb\u003e(unranked) \u003ca href\u003d\"/wiki/Mammaliformes\" title\u003d\"Mammaliformes\" class\u003d\"mw-redirect\"\u003eMammaliformes\u003c/a\u003e\u003c/b\u003e"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eClass \u003cb\u003e\u003ca href\u003d\"/wiki/Mammal\" title\u003d\"Mammal\"\u003eMammalia\u003c/a\u003e\u003c/b\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/li\u003e"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch3\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d5\" title\u003d\"Edit section: Phylogeny\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"Phylogeny\"\u003ePhylogeny\u003c/span\u003e\u003c/h3\u003e"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"font-size:70%;line-height:85%\"\u003e"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u003ca href\u003d\"/wiki/Synapsida\" title\u003d\"Synapsida\" class\u003d\"mw-redirect\"\u003eSynapsida\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;\u003ca href\u003d\"/wiki/Sphenacodontia\" title\u003d\"Sphenacodontia\"\u003eSphenacodontia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ca href\u003d\"/wiki/Sphenacodontidae\" title\u003d\"Sphenacodontidae\"\u003eSphenacodontidae\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;\u003cb\u003eTherapsida\u003c/b\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ci\u003e\u003ca href\u003d\"/wiki/Tetraceratops\" title\u003d\"Tetraceratops\"\u003eTetraceratops\u003c/a\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;†\u003ca href\u003d\"/wiki/Biarmosuchia\" title\u003d\"Biarmosuchia\"\u003eBiarmosuchia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ca href\u003d\"/wiki/Eotitanosuchidae\" title\u003d\"Eotitanosuchidae\"\u003eEotitanosuchidae\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ca href\u003d\"/wiki/Phthinosuchus\" title\u003d\"Phthinosuchus\"\u003ePhthinosuchidae\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;\u003cb\u003e\u003ca href\u003d\"/wiki/Eutherapsida\" title\u003d\"Eutherapsida\" class\u003d\"mw-redirect\"\u003eEutherapsida\u003c/a\u003e\u003c/b\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;†\u003ca href\u003d\"/wiki/Dinocephalia\" title\u003d\"Dinocephalia\"\u003eDinocephalia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ca href\u003d\"/wiki/Anteosauria\" title\u003d\"Anteosauria\" class\u003d\"mw-redirect\"\u003eAnteosauria\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ca href\u003d\"/wiki/Tapinocephalia\" title\u003d\"Tapinocephalia\"\u003eTapinocephalia\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;\u003cb\u003e\u003ca href\u003d\"/wiki/Neotherapsida\" title\u003d\"Neotherapsida\"\u003eNeotherapsida\u003c/a\u003e\u003c/b\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;†\u003ca href\u003d\"/wiki/Anomodontia\" title\u003d\"Anomodontia\" class\u003d\"mw-redirect\"\u003eAnomodontia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ca href\u003d\"/wiki/Dromasauria\" title\u003d\"Dromasauria\"\u003eDromasauria\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ca href\u003d\"/wiki/Dicynodontia\" title\u003d\"Dicynodontia\" class\u003d\"mw-redirect\"\u003eDicynodontia\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;\u003ca href\u003d\"/wiki/Theriodontia\" title\u003d\"Theriodontia\" class\u003d\"mw-redirect\"\u003eTheriodontia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;†\u003ca href\u003d\"/wiki/Gorgonopsia\" title\u003d\"Gorgonopsia\"\u003eGorgonopsia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ci\u003e\u003ca href\u003d\"/wiki/Lycaenops\" title\u003d\"Lycaenops\"\u003eLycaenops\u003c/a\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ci\u003e\u003ca href\u003d\"/wiki/Inostrancevia\" title\u003d\"Inostrancevia\"\u003eInostrancevia\u003c/a\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;\u003cb\u003e\u003ca href\u003d\"/w/index.php?title\u003dEutheriodontia\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Eutheriodontia (page does not exist)\"\u003eEutheriodontia\u003c/a\u003e\u003c/b\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;†\u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003eTherocephalia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;†\u003ca href\u003d\"/wiki/Eutherocephalia\" title\u003d\"Eutherocephalia\"\u003eEutherocephalia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e†\u003ci\u003e\u003ca href\u003d\"/wiki/Bauria\" title\u003d\"Bauria\"\u003eBauria\u003c/a\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom: 0;\" valign\u003d\"top\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"border-left:1px solid black; border-top: 0; border-right: 0; border-bottom:1px solid black;padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cspan style\u003d\"white-space:nowrap\"\u003e\u0026#160;\u003ca href\u003d\"/wiki/Cynodontia\" title\u003d\"Cynodontia\" class\u003d\"mw-redirect\"\u003eCynodontia\u003c/a\u003e\u0026#160;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" cellpadding\u003d\"0\" border\u003d\"0\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"width:1.5em; border-bottom:1px solid black; border-left: 0; border-top: 0; border-right: 0; padding:0 0.2em;\" valign\u003d\"bottom\" align\u003d\"center\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd rowspan\u003d\"2\" style\u003d\"border: 0; padding: 0;\"\u003e"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cp\u003e\u003ca href\u003d\"/wiki/Mammalia\" title\u003d\"Mammalia\" class\u003d\"mw-redirect\"\u003eMammalia\u003c/a\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd valign\u003d\"top\" style\u003d\"border: 0; padding: 0;\"\u003e\u003cbr /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d6\" title\u003d\"Edit section: See also\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"See_also\"\u003eSee also\u003c/span\u003e\u003c/h2\u003e"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003ca href\u003d\"/wiki/Vertebrate_paleontology\" title\u003d\"Vertebrate paleontology\"\u003eVertebrate paleontology\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003ca href\u003d\"/wiki/Evolution_of_mammals\" title\u003d\"Evolution of mammals\"\u003eEvolution of mammals\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\u003ca href\u003d\"/wiki/Timeline_of_evolution\" title\u003d\"Timeline of evolution\"\u003eTimeline of evolution\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d7\" title\u003d\"Edit section: Notes\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"Notes\"\u003eNotes\u003c/span\u003e\u003c/h2\u003e"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"reflist references-column-width\" style\u003d\"-moz-column-width: 30em; -webkit-column-width: 30em; column-width: 30em; list-style-type: decimal;\"\u003e"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003col class\u003d\"references\"\u003e"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli id\u003d\"cite_note-romer1933-0\"\u003e\u003cb\u003e\u003ca href\u003d\"#cite_ref-romer1933_0-0\"\u003e^\u003c/a\u003e\u003c/b\u003e \u003cspan class\u003d\"citation book\"\u003eRomer, A.S. (1933). \u003ci\u003eVertebrate Paleontology\u003c/i\u003e. University of Chicago Press.\u003c/span\u003e\u003cspan class\u003d\"Z3988\" title\u003d\"ctx_ver\u003dZ39.88-2004\u0026amp;rft_val_fmt\u003dinfo%3Aofi%2Ffmt%3Akev%3Amtx%3Abook\u0026amp;rft.genre\u003dbook\u0026amp;rft.btitle\u003dVertebrate+Paleontology\u0026amp;rft.aulast\u003dRomer\u0026amp;rft.aufirst\u003dA.S.\u0026amp;rft.au\u003dRomer%2C%26%2332%3BA.S.\u0026amp;rft.date\u003d1933\u0026amp;rft.pub\u003dUniversity+of+Chicago+Press\u0026amp;rfr_id\u003dinfo:sid/en.wikipedia.org:Therapsida\"\u003e\u003cspan style\u003d\"display: none;\"\u003e\u0026#160;\u003c/span\u003e\u003c/span\u003e, 3rd ed., 1966.\u003c/li\u003e"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli id\u003d\"cite_note-1\"\u003e\u003cb\u003e\u003ca href\u003d\"#cite_ref-1\"\u003e^\u003c/a\u003e\u003c/b\u003e M.Laurin \u0026amp; R.R. Reisz. 1996. The osteology and relationships of \u003ci\u003eTetraceratops insignis\u003c/i\u003e, the oldest known therapsid. \u003ci\u003eJournal of Vertebrate Paleontology\u003c/i\u003e 16(1): 95-102.\u003c/li\u003e"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli id\u003d\"cite_note-2\"\u003e\u003cb\u003e\u003ca href\u003d\"#cite_ref-2\"\u003e^\u003c/a\u003e\u003c/b\u003e J. Liu, B. Rubidge \u0026amp; J. Li, New basal synapsid supports Laurasian origin for therapsids, 2009, Acta Palaeontol. Pol., 54 (3): 393-400\u003c/li\u003e"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli id\u003d\"cite_note-3\"\u003e\u003cb\u003e\u003ca href\u003d\"#cite_ref-3\"\u003e^\u003c/a\u003e\u003c/b\u003e \u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"http://tolweb.org/accessory/Synapsid_Classification_\u0026amp;_Apomorphies?acc_id\u003d466\"\u003e[1]\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ol\u003e"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d8\" title\u003d\"Edit section: References\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"References\"\u003eReferences\u003c/span\u003e\u003c/h2\u003e"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eBenton, M.J. (2004). \u003ci\u003eVertebrate Paleontology\u003c/i\u003e. 3rd ed. Blackwell Science Ltd\u003c/li\u003e"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eCarroll, R.L. (1988). \u003ci\u003eVertebrate Paleontology \u0026amp; Evolution\u003c/i\u003e. W.H. Freeman \u0026amp; Company, NY\u003c/li\u003e"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eKemp, T.S. (2005). \u003ci\u003eThe origin and evolution of mammals\u003c/i\u003e. Oxford University Press\u003c/li\u003e"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003eRomer, A.S. (1966). \u003ci\u003eVertebrate Paleontology\u003c/i\u003e. University of Chicago Press, 1933; 3rd ed.\u003c/li\u003e"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ch2\u003e\u003cspan class\u003d\"editsection\"\u003e[\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\u0026amp;section\u003d9\" title\u003d\"Edit section: External links\"\u003eedit\u003c/a\u003e]\u003c/span\u003e \u003cspan class\u003d\"mw-headline\" id\u003d\"External_links\"\u003eExternal links\u003c/span\u003e\u003c/h2\u003e"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable class\u003d\"metadata mbox-small plainlinks\" style\u003d\"border:1px solid #aaa; background-color:#f9f9f9;\"\u003e"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"mbox-image\"\u003e\u003cimg alt\u003d\"\" src\u003d\"//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikispecies-logo.svg/34px-Wikispecies-logo.svg.png\" width\u003d\"34\" height\u003d\"40\" /\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"mbox-text\" style\u003d\"\"\u003e\u003ca href\u003d\"/wiki/Wikispecies\" title\u003d\"Wikispecies\"\u003eWikispecies\u003c/a\u003e has information related to: \u003ci\u003e\u003cb\u003e\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"//species.wikimedia.org/wiki/Special:Search/Therapsida\"\u003eTherapsida\u003c/a\u003e\u003c/b\u003e\u003c/i\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cul\u003e"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\"\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"http://tolweb.org/tree?group\u003dTherapsida\"\u003eTherapsida: Mammals and extinct relatives\u003c/a\u003e\" \u003ci\u003eTree of Life\u003c/i\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli\u003e\"\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"http://www.palaeos.com/Vertebrates/Units/400Therapsida/400.000.html\"\u003eTherapsida: overview\u003c/a\u003e\" \u003ci\u003ePalaeos\u003c/i\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/ul\u003e"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable class\u003d\"navbox\" cellspacing\u003d\"0\" style\u003d\";\"\u003e"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"padding:2px;\"\u003e"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" class\u003d\"nowraplinks collapsible autocollapse\" style\u003d\"width:100%;background:transparent;color:inherit;;\"\u003e"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cth style\u003d\";\" colspan\u003d\"2\" class\u003d\"navbox-title\"\u003e\u003cspan style\u003d\"float:left;width:6em;text-align:left;\"\u003e\u003cspan class\u003d\"noprint plainlinks navbar\" style\u003d\"\"\u003e\u003cspan style\u003d\"white-space:nowrap;word-spacing:-.12em;\"\u003e\u003ca href\u003d\"/wiki/Template:Therapsida\" title\u003d\"Template:Therapsida\"\u003e\u003cspan style\u003d\";;background:none transparent;border:none;font-size:100%;\" title\u003d\"View this template\"\u003ev\u003c/span\u003e\u003c/a\u003e \u003cspan style\u003d\";;background:none transparent;border:none;font-size:100%;\"\u003e\u003cb\u003e·\u003c/b\u003e\u003c/span\u003e \u003ca href\u003d\"/w/index.php?title\u003dTemplate_talk:Therapsida\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Template talk:Therapsida (page does not exist)\"\u003e\u003cspan style\u003d\";;background:none transparent;border:none;font-size:100%;\" title\u003d\"Discuss this template\"\u003ed\u003c/span\u003e\u003c/a\u003e \u003cspan style\u003d\";;background:none transparent;border:none;font-size:100%;\"\u003e\u003cb\u003e·\u003c/b\u003e\u003c/span\u003e \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"//en.wikipedia.org/w/index.php?title\u003dTemplate:Therapsida\u0026amp;action\u003dedit\"\u003e\u003cspan style\u003d\";;background:none transparent;border:none;font-size:100%;\" title\u003d\"Edit this template\"\u003ee\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class\u003d\"\" style\u003d\"font-size:110%;\"\u003eMajor groups of \u003cstrong class\u003d\"selflink\"\u003etherapsids\u003c/strong\u003e\u003c/span\u003e\u003c/th\u003e"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px;\"\u003e"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-abovebelow\" style\u003d\";\" colspan\u003d\"2\"\u003eKingdom: \u003ca href\u003d\"/wiki/Animal\" title\u003d\"Animal\"\u003eAnimalia\u003c/a\u003e\u0026#160;\u003cspan style\u003d\"font-weight:bold;\"\u003e·\u003c/span\u003e  Phylum: \u003ca href\u003d\"/wiki/Chordate\" title\u003d\"Chordate\"\u003eChordata\u003c/a\u003e\u0026#160;\u003cspan style\u003d\"font-weight:bold;\"\u003e·\u003c/span\u003e  Class: \u003ca href\u003d\"/wiki/Synapsida\" title\u003d\"Synapsida\" class\u003d\"mw-redirect\"\u003eSynapsida\u003c/a\u003e\u0026#160;\u003cspan style\u003d\"font-weight:bold;\"\u003e·\u003c/span\u003e  Order: \u003cstrong class\u003d\"selflink\"\u003eTherapsida\u003c/strong\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px;\"\u003e"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";;\"\u003eBasal therapsids\u003c/td\u003e"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-odd\"\u003e"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003ci\u003e\u003ca href\u003d\"/wiki/Raranimus\" title\u003d\"Raranimus\"\u003eRaranimus\u003c/a\u003e\u003c/i\u003e\u0026#160;\u003cspan style\u003d\"font-weight:bold;\"\u003e·\u003c/span\u003e  \u003ci\u003e\u003ca href\u003d\"/wiki/Tetraceratops\" title\u003d\"Tetraceratops\"\u003eTetraceratops\u003c/a\u003e\u003c/i\u003e\u0026#160;\u003cspan style\u003d\"font-weight:bold;\"\u003e·\u003c/span\u003e  \u003ca href\u003d\"/wiki/Biarmosuchia\" title\u003d\"Biarmosuchia\"\u003eBiarmosuchia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px\"\u003e"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";;\"\u003e\u003ca href\u003d\"/wiki/Eutherapsida\" title\u003d\"Eutherapsida\" class\u003d\"mw-redirect\"\u003eEutherapsida\u003c/a\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-even\"\u003e"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" class\u003d\"nowraplinks navbox-subgroup\" style\u003d\"width:100%;;;;\"\u003e"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/wiki/Dinocephalia\" title\u003d\"Dinocephalia\"\u003eDinocephalia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-odd\"\u003e"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003ca href\u003d\"/wiki/Anteosaur\" title\u003d\"Anteosaur\"\u003eAnteosauria\u003c/a\u003e\u0026#160;\u003cspan style\u003d\"font-weight:bold;\"\u003e·\u003c/span\u003e  \u003ca href\u003d\"/wiki/Tapinocephalia\" title\u003d\"Tapinocephalia\"\u003eTapinocephalia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px\"\u003e"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/wiki/Neotherapsida\" title\u003d\"Neotherapsida\"\u003eNeotherapsida\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-even\"\u003e"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" class\u003d\"nowraplinks navbox-subgroup\" style\u003d\"width:100%;;;;\"\u003e"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/wiki/Anomodont\" title\u003d\"Anomodont\"\u003eAnomodontia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-odd\"\u003e"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003ca href\u003d\"/wiki/Dicynodont\" title\u003d\"Dicynodont\"\u003eDicynodontia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px\"\u003e"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/wiki/Theriodont\" title\u003d\"Theriodont\"\u003eTheriodontia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-even\"\u003e"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" class\u003d\"nowraplinks navbox-subgroup\" style\u003d\"width:100%;;;;\"\u003e"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/wiki/Gorgonopsia\" title\u003d\"Gorgonopsia\"\u003eGorgonopsia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-odd\"\u003e"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003ca href\u003d\"/wiki/Gorgonopsia\" title\u003d\"Gorgonopsia\"\u003eGorgonopsidae\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px\"\u003e"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/w/index.php?title\u003dEutheriodontia\u0026amp;action\u003dedit\u0026amp;redlink\u003d1\" class\u003d\"new\" title\u003d\"Eutheriodontia (page does not exist)\"\u003eEutheriodontia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-even\"\u003e"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctable cellspacing\u003d\"0\" class\u003d\"nowraplinks navbox-subgroup\" style\u003d\"width:100%;;;;\"\u003e"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/wiki/Therocephalia\" title\u003d\"Therocephalia\"\u003eTherocephalia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-odd\"\u003e"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003ca href\u003d\"/wiki/Eutherocephalia\" title\u003d\"Eutherocephalia\"\u003eEutherocephalia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px\"\u003e"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";padding-left:0em;padding-right:0em;;\"\u003e"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.75em;\"\u003e\u003ca href\u003d\"/wiki/Cynodont\" title\u003d\"Cynodont\"\u003eCynodontia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-even\"\u003e"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003ca href\u003d\"/wiki/Mammalia\" title\u003d\"Mammalia\" class\u003d\"mw-redirect\"\u003eMammalia\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr style\u003d\"height:2px\"\u003e"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd class\u003d\"navbox-group\" style\u003d\";;\"\u003eRelated categories\u003c/td\u003e"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003ctd style\u003d\"text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;\" class\u003d\"navbox-list navbox-odd\"\u003e"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv style\u003d\"padding:0em 0.25em\"\u003e\u003ca href\u003d\"/wiki/Category:Synapsids\" title\u003d\"Category:Synapsids\"\u003eSynapsids\u003c/a\u003e\u0026#160;\u003cspan style\u003d\"font-weight:bold;\"\u003e·\u003c/span\u003e  \u003ca href\u003d\"/wiki/Category:Therapsids\" title\u003d\"Category:Therapsids\"\u003eTherapsids\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!--"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "rlrh"
        },
        "content": "NewPP limit report"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "rlrh"
        },
        "content": "Preprocessor node count: 44698/1000000"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "rlrh"
        },
        "content": "Post-expand include size: 597527/2048000 bytes"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "rlrh"
        },
        "content": "Template argument size: 640596/2048000 bytes"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "rlrh"
        },
        "content": "Expensive parser function count: 7/500"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "rlrh"
        },
        "content": "--\u003e"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- Saved in parser cache with key enwiki:pcache:idhash:204092-0!*!0!!en!4!* and timestamp 20111102143352 --\u003e"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e\t\t\t\t\u003c!-- /bodycontent --\u003e"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\u003c!-- printfooter --\u003e"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003cdiv class\u003d\"printfooter\"\u003e"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\tRetrieved from \"\u003ca href\u003d\"http://en.wikipedia.org/w/index.php?title\u003dTherapsida\u0026amp;oldid\u003d441204315\"\u003ehttp://en.wikipedia.org/w/index.php?title\u003dTherapsida\u0026amp;oldid\u003d441204315\u003c/a\u003e\"\t\t\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c!-- /printfooter --\u003e"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\t\u003c!-- catlinks --\u003e"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003cdiv id\u003d\u0027catlinks\u0027 class\u003d\u0027catlinks\u0027\u003e\u003cdiv id\u003d\"mw-normal-catlinks\"\u003e\u003ca href\u003d\"/wiki/Special:Categories\" title\u003d\"Special:Categories\"\u003eCategories\u003c/a\u003e: \u003cul\u003e\u003cli\u003e\u003ca href\u003d\"/wiki/Category:Synapsids\" title\u003d\"Category:Synapsids\"\u003eSynapsids\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href\u003d\"/wiki/Category:Therapsids\" title\u003d\"Category:Therapsids\"\u003eTherapsids\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv id\u003d\"mw-hidden-catlinks\" class\u003d\"mw-hidden-cats-hidden\"\u003eHidden categories: \u003cul\u003e\u003cli\u003e\u003ca href\u003d\"/wiki/Category:Articles_with_%27species%27_microformats\" title\u003d\"Category:Articles with \u0027species\u0027 microformats\"\u003eArticles with \u0027species\u0027 microformats\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href\u003d\"/wiki/Category:All_articles_with_unsourced_statements\" title\u003d\"Category:All articles with unsourced statements\"\u003eAll articles with unsourced statements\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href\u003d\"/wiki/Category:Articles_with_unsourced_statements_from_August_2007\" title\u003d\"Category:Articles with unsourced statements from August 2007\"\u003eArticles with unsourced statements from August 2007\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\t\t\t\t\u003c!-- /catlinks --\u003e"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\t\u003cdiv class\u003d\"visualClear\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c!-- debughtml --\u003e"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\u003c!-- /debughtml --\u003e"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c!-- /bodyContent --\u003e"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- /content --\u003e"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- header --\u003e"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cdiv id\u003d\"mw-head\" class\u003d\"noprint\"\u003e"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- 0 --\u003e"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"p-personal\" class\u003d\"\"\u003e"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003ePersonal tools\u003c/h5\u003e"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cul\u003e"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cli id\u003d\"pt-login\"\u003e\u003ca href\u003d\"/w/index.php?title\u003dSpecial:UserLogin\u0026amp;returnto\u003dTherapsida\" title\u003d\"You are encouraged to log in; however, it is not mandatory. [o]\" accesskey\u003d\"o\"\u003eLog in / create account\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /0 --\u003e"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cdiv id\u003d\"left-navigation\"\u003e"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- 0 --\u003e"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"p-namespaces\" class\u003d\"vectorTabs\"\u003e"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003eNamespaces\u003c/h5\u003e"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cul\u003e"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cli  id\u003d\"ca-nstab-main\" class\u003d\"selected\"\u003e\u003cspan\u003e\u003ca href\u003d\"/wiki/Therapsida\"  title\u003d\"View the content page [c]\" accesskey\u003d\"c\"\u003eArticle\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cli  id\u003d\"ca-talk\"\u003e\u003cspan\u003e\u003ca href\u003d\"/wiki/Talk:Therapsida\"  title\u003d\"Discussion about the content page [t]\" accesskey\u003d\"t\"\u003eDiscussion\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /0 --\u003e"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- 1 --\u003e"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"p-variants\" class\u003d\"vectorMenu emptyPortlet\"\u003e"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003ch5\u003e\u003cspan\u003eVariants\u003c/span\u003e\u003ca href\u003d\"#\"\u003e\u003c/a\u003e\u003c/h5\u003e"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cdiv class\u003d\"menu\"\u003e"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cul\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/div\u003e"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /1 --\u003e"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cdiv id\u003d\"right-navigation\"\u003e"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- 0 --\u003e"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"p-views\" class\u003d\"vectorTabs\"\u003e"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003eViews\u003c/h5\u003e"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cul\u003e"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cli id\u003d\"ca-view\" class\u003d\"selected\"\u003e\u003cspan\u003e\u003ca href\u003d\"/wiki/Therapsida\" \u003eRead\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cli id\u003d\"ca-edit\"\u003e\u003cspan\u003e\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dedit\"  title\u003d\"You can edit this page. \u0026#10;Please use the preview button before saving. [e]\" accesskey\u003d\"e\"\u003eEdit\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cli id\u003d\"ca-history\" class\u003d\"collapsible\"\u003e\u003cspan\u003e\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;action\u003dhistory\"  title\u003d\"Past versions of this page [h]\" accesskey\u003d\"h\"\u003eView history\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /0 --\u003e"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- 1 --\u003e"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"p-cactions\" class\u003d\"vectorMenu emptyPortlet\"\u003e"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003e\u003cspan\u003eActions\u003c/span\u003e\u003ca href\u003d\"#\"\u003e\u003c/a\u003e\u003c/h5\u003e"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cdiv class\u003d\"menu\"\u003e"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cul\u003e"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/div\u003e"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /1 --\u003e"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- 2 --\u003e"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv id\u003d\"p-search\"\u003e"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003e\u003clabel for\u003d\"searchInput\"\u003eSearch\u003c/label\u003e\u003c/h5\u003e"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cform action\u003d\"/w/index.php\" id\u003d\"searchform\"\u003e"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cinput type\u003d\u0027hidden\u0027 name\u003d\"title\" value\u003d\"Special:Search\"/\u003e"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003cdiv id\u003d\"simpleSearch\"\u003e"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\u003cinput type\u003d\"text\" name\u003d\"search\" value\u003d\"\" title\u003d\"Search Wikipedia [f]\" accesskey\u003d\"f\" id\u003d\"searchInput\" /\u003e\t\t\t\t\t\t\u003cbutton type\u003d\"submit\" name\u003d\"button\" title\u003d\"Search Wikipedia for this text\" id\u003d\"searchButton\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/vector/images/search-ltr.png?303-4\" alt\u003d\"Search\" /\u003e\u003c/button\u003e\t\t\t\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c/form\u003e"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /2 --\u003e"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- /header --\u003e"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- panel --\u003e"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cdiv id\u003d\"mw-panel\" class\u003d\"noprint\"\u003e"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c!-- logo --\u003e"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cdiv id\u003d\"p-logo\"\u003e\u003ca style\u003d\"background-image: url(//upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);\" href\u003d\"/wiki/Main_Page\"  title\u003d\"Visit the main page\"\u003e\u003c/a\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c!-- /logo --\u003e"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- navigation --\u003e"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"portal\" id\u003d\u0027p-navigation\u0027\u003e"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003eNavigation\u003c/h5\u003e"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cdiv class\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cul\u003e"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-mainpage-description\"\u003e\u003ca href\u003d\"/wiki/Main_Page\" title\u003d\"Visit the main page [z]\" accesskey\u003d\"z\"\u003eMain page\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-contents\"\u003e\u003ca href\u003d\"/wiki/Portal:Contents\" title\u003d\"Guides to browsing Wikipedia\"\u003eContents\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-featuredcontent\"\u003e\u003ca href\u003d\"/wiki/Portal:Featured_content\" title\u003d\"Featured content – the best of Wikipedia\"\u003eFeatured content\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-currentevents\"\u003e\u003ca href\u003d\"/wiki/Portal:Current_events\" title\u003d\"Find background information on current events\"\u003eCurrent events\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-randompage\"\u003e\u003ca href\u003d\"/wiki/Special:Random\" title\u003d\"Load a random article [x]\" accesskey\u003d\"x\"\u003eRandom article\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-sitesupport\"\u003e\u003ca href\u003d\"//wikimediafoundation.org/wiki/Special:Landingcheck?landing_page\u003dWMFJA085\u0026amp;language\u003den\u0026amp;utm_source\u003ddonate\u0026amp;utm_medium\u003dsidebar\u0026amp;utm_campaign\u003d20101204SB002\" rel\u003d\"nofollow\" title\u003d\"Support us\"\u003eDonate to Wikipedia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/div\u003e"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /navigation --\u003e"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- SEARCH --\u003e"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /SEARCH --\u003e"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- interaction --\u003e"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"portal\" id\u003d\u0027p-interaction\u0027\u003e"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003eInteraction\u003c/h5\u003e"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cdiv class\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cul\u003e"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-help\"\u003e\u003ca href\u003d\"/wiki/Help:Contents\" title\u003d\"Guidance on how to use and edit Wikipedia\"\u003eHelp\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-aboutsite\"\u003e\u003ca href\u003d\"/wiki/Wikipedia:About\" title\u003d\"Find out about Wikipedia\"\u003eAbout Wikipedia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-portal\"\u003e\u003ca href\u003d\"/wiki/Wikipedia:Community_portal\" title\u003d\"About the project, what you can do, where to find things\"\u003eCommunity portal\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-recentchanges\"\u003e\u003ca href\u003d\"/wiki/Special:RecentChanges\" title\u003d\"A list of recent changes in the wiki [r]\" accesskey\u003d\"r\"\u003eRecent changes\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"n-contact\"\u003e\u003ca href\u003d\"/wiki/Wikipedia:Contact_us\" title\u003d\"How to contact Wikipedia\"\u003eContact Wikipedia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/div\u003e"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /interaction --\u003e"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- TOOLBOX --\u003e"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"portal\" id\u003d\u0027p-tb\u0027\u003e"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003eToolbox\u003c/h5\u003e"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cdiv class\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cul\u003e"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"t-whatlinkshere\"\u003e\u003ca href\u003d\"/wiki/Special:WhatLinksHere/Therapsida\" title\u003d\"List of all English Wikipedia pages containing links to this page [j]\" accesskey\u003d\"j\"\u003eWhat links here\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"t-recentchangeslinked\"\u003e\u003ca href\u003d\"/wiki/Special:RecentChangesLinked/Therapsida\" title\u003d\"Recent changes in pages linked from this page [k]\" accesskey\u003d\"k\"\u003eRelated changes\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"t-upload\"\u003e\u003ca href\u003d\"/wiki/Wikipedia:Upload\" title\u003d\"Upload files [u]\" accesskey\u003d\"u\"\u003eUpload file\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"t-specialpages\"\u003e\u003ca href\u003d\"/wiki/Special:SpecialPages\" title\u003d\"A list of all special pages [q]\" accesskey\u003d\"q\"\u003eSpecial pages\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli id\u003d\"t-permalink\"\u003e\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;oldid\u003d441204315\" title\u003d\"Permanent link to this revision of the page\"\u003ePermanent link\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cli id\u003d\"t-cite\"\u003e\u003ca href\u003d\"/w/index.php?title\u003dSpecial:Cite\u0026amp;page\u003dTherapsida\u0026amp;id\u003d441204315\" title\u003d\"Information on how to cite this page\"\u003eCite this page\u003c/a\u003e\u003c/li\u003e\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/div\u003e"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /TOOLBOX --\u003e"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- coll-print_export --\u003e"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"portal\" id\u003d\u0027p-coll-print_export\u0027\u003e"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003ePrint/export\u003c/h5\u003e"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cdiv class\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cul id\u003d\"collectionPortletList\"\u003e\u003cli id\u003d\"coll-create_a_book\"\u003e\u003ca href\u003d\"/w/index.php?title\u003dSpecial:Book\u0026amp;bookcmd\u003dbook_creator\u0026amp;referer\u003dTherapsida\" title\u003d\"Create a book or page collection\" rel\u003d\"nofollow\"\u003eCreate a book\u003c/a\u003e\u003c/li\u003e\u003cli id\u003d\"coll-download-as-rl\"\u003e\u003ca href\u003d\"/w/index.php?title\u003dSpecial:Book\u0026amp;bookcmd\u003drender_article\u0026amp;arttitle\u003dTherapsida\u0026amp;oldid\u003d441204315\u0026amp;writer\u003drl\" title\u003d\"Download a PDF version of this wiki page\" rel\u003d\"nofollow\"\u003eDownload as PDF\u003c/a\u003e\u003c/li\u003e\u003cli id\u003d\"t-print\"\u003e\u003ca href\u003d\"/w/index.php?title\u003dTherapsida\u0026amp;printable\u003dyes\" title\u003d\"Printable version of this page [p]\" accesskey\u003d\"p\"\u003ePrintable version\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\t\u003c/div\u003e"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /coll-print_export --\u003e"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- LANGUAGES --\u003e"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cdiv class\u003d\"portal\" id\u003d\u0027p-lang\u0027\u003e"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003ch5\u003eLanguages\u003c/h5\u003e"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003cdiv class\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cul\u003e"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-ca\"\u003e\u003ca href\u003d\"//ca.wikipedia.org/wiki/Ter%C3%A0psid\"\u003eCatalà\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-cs\"\u003e\u003ca href\u003d\"//cs.wikipedia.org/wiki/Therapsidi\"\u003eČesky\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-de\"\u003e\u003ca href\u003d\"//de.wikipedia.org/wiki/Therapsiden\"\u003eDeutsch\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-el\"\u003e\u003ca href\u003d\"//el.wikipedia.org/wiki/%CE%98%CE%B7%CF%81%CE%B9%CE%B1%CF%88%CE%B9%CE%B4%CF%89%CF%84%CE%AC\"\u003eΕλληνικά\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-es\"\u003e\u003ca href\u003d\"//es.wikipedia.org/wiki/Therapsida\"\u003eEspañol\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-eu\"\u003e\u003ca href\u003d\"//eu.wikipedia.org/wiki/Therapsida\"\u003eEuskara\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-fr\"\u003e\u003ca href\u003d\"//fr.wikipedia.org/wiki/Therapsida\"\u003eFrançais\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-gl\"\u003e\u003ca href\u003d\"//gl.wikipedia.org/wiki/Therapsida\"\u003eGalego\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-id\"\u003e\u003ca href\u003d\"//id.wikipedia.org/wiki/Therapsida\"\u003eBahasa Indonesia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-it\"\u003e\u003ca href\u003d\"//it.wikipedia.org/wiki/Therapsida\"\u003eItaliano\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-he\"\u003e\u003ca href\u003d\"//he.wikipedia.org/wiki/%D7%AA%D7%A8%D7%90%D7%A4%D7%A1%D7%99%D7%93%D7%94\"\u003eעברית\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-la\"\u003e\u003ca href\u003d\"//la.wikipedia.org/wiki/Therapsida\"\u003eLatina\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-hu\"\u003e\u003ca href\u003d\"//hu.wikipedia.org/wiki/Therapsida\"\u003eMagyar\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-mk\"\u003e\u003ca href\u003d\"//mk.wikipedia.org/wiki/%D0%A2%D0%B5%D1%80%D0%B0%D0%BF%D1%81%D0%B8%D0%B4%D0%B8\"\u003eМакедонски\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-nl\"\u003e\u003ca href\u003d\"//nl.wikipedia.org/wiki/Therapsida\"\u003eNederlands\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-ja\"\u003e\u003ca href\u003d\"//ja.wikipedia.org/wiki/%E7%8D%A3%E5%BC%93%E9%A1%9E\"\u003e日本語\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-no\"\u003e\u003ca href\u003d\"//no.wikipedia.org/wiki/Therapsider\"\u003e‪Norsk (bokmål)‬\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-pl\"\u003e\u003ca href\u003d\"//pl.wikipedia.org/wiki/Terapsydy\"\u003ePolski\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-pt\"\u003e\u003ca href\u003d\"//pt.wikipedia.org/wiki/Therapsida\"\u003ePortuguês\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-ru\"\u003e\u003ca href\u003d\"//ru.wikipedia.org/wiki/%D0%A2%D0%B5%D1%80%D0%B0%D0%BF%D1%81%D0%B8%D0%B4%D1%8B\"\u003eРусский\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-simple\"\u003e\u003ca href\u003d\"//simple.wikipedia.org/wiki/Therapsid\"\u003eSimple English\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-sk\"\u003e\u003ca href\u003d\"//sk.wikipedia.org/wiki/Therapsida\"\u003eSlovenčina\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-fi\"\u003e\u003ca href\u003d\"//fi.wikipedia.org/wiki/Terapsidit\"\u003eSuomi\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-sv\"\u003e\u003ca href\u003d\"//sv.wikipedia.org/wiki/Therapsider\"\u003eSvenska\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003cli class\u003d\"interwiki-zh\"\u003e\u003ca href\u003d\"//zh.wikipedia.org/wiki/%E7%8D%B8%E5%AD%94%E7%9B%AE\"\u003e中文\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/div\u003e"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c!-- /LANGUAGES --\u003e"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- /panel --\u003e"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- footer --\u003e"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cdiv id\u003d\"footer\"\u003e"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\u003cul id\u003d\"footer-info\"\u003e"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\u003cli id\u003d\"footer-info-lastmod\"\u003e This page was last modified on 24 July 2011 at 17:42.\u003cbr /\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\u003cli id\u003d\"footer-info-copyright\"\u003eText is available under the \u003ca rel\u003d\"license\" href\u003d\"//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License\"\u003eCreative Commons Attribution-ShareAlike License\u003c/a\u003e\u003ca rel\u003d\"license\" href\u003d\"//creativecommons.org/licenses/by-sa/3.0/\" style\u003d\"display:none;\"\u003e\u003c/a\u003e;"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "rlrh"
        },
        "content": "additional terms may apply."
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "rlrh"
        },
        "content": "See \u003ca href\u003d\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003eTerms of use\u003c/a\u003e for details.\u003cbr/\u003e"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "rlrh"
        },
        "content": "Wikipedia\u0026reg; is a registered trademark of the \u003ca href\u003d\"//www.wikimediafoundation.org/\"\u003eWikimedia Foundation, Inc.\u003c/a\u003e, a non-profit organization.\u003cbr /\u003e\u003c/li\u003e\u003cli class\u003d\"noprint\"\u003e\u003ca class\u003d\u0027internal\u0027 href\u003d\"//en.wikipedia.org/wiki/Wikipedia:Contact_us\"\u003eContact us\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\u003cul id\u003d\"footer-places\"\u003e"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\u003cli id\u003d\"footer-places-privacy\"\u003e\u003ca href\u003d\"//wikimediafoundation.org/wiki/Privacy_policy\" title\u003d\"wikimedia:Privacy policy\"\u003ePrivacy policy\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\u003cli id\u003d\"footer-places-about\"\u003e\u003ca href\u003d\"/wiki/Wikipedia:About\" title\u003d\"Wikipedia:About\"\u003eAbout Wikipedia\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\u003cli id\u003d\"footer-places-disclaimer\"\u003e\u003ca href\u003d\"/wiki/Wikipedia:General_disclaimer\" title\u003d\"Wikipedia:General disclaimer\"\u003eDisclaimers\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\t\u003cli id\u003d\"footer-places-mobileview\"\u003e\u003ca href\u003d\u0027/w/index.php?title\u003dTherapsida\u0026amp;useformat\u003dmobile\u0027\u003eMobile view\u003c/a\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\t\t\t\t\u003cul id\u003d\"footer-icons\" class\u003d\"noprint\"\u003e"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cli id\u003d\"footer-copyrightico\"\u003e"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\u003ca href\u003d\"//wikimediafoundation.org/\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/images/wikimedia-button.png\" width\u003d\"88\" height\u003d\"31\" alt\u003d\"Wikimedia Foundation\"/\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003c/li\u003e"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003cli id\u003d\"footer-poweredbyico\"\u003e"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\u003ca href\u003d\"//www.mediawiki.org/\"\u003e\u003cimg src\u003d\"//bits.wikimedia.org/skins-1.18/common/images/poweredby_mediawiki_88x31.png\" alt\u003d\"Powered by MediaWiki\" width\u003d\"88\" height\u003d\"31\" /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\u003c/li\u003e"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\u003c/ul\u003e"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\t\t\t\t\u003cdiv style\u003d\"clear:both\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c/div\u003e"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- /footer --\u003e"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- fixalpha --\u003e"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cscript type\u003d\"text/javascript\"\u003e if ( window.isMSIE55 ) fixalpha(); \u003c/script\u003e"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003c!-- /fixalpha --\u003e"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\t\u003cscript src\u003d\"//bits.wikimedia.org/en.wikipedia.org/load.php?debug\u003dfalse\u0026amp;lang\u003den\u0026amp;modules\u003dskins.vector\u0026amp;only\u003dscripts\u0026amp;skin\u003dvector\u0026amp;*\" type\u003d\"text/javascript\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cscript type\u003d\"text/javascript\"\u003eif ( window.mediaWiki ) {"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\tmw.loader.load([\"mediawiki.user\", \"mediawiki.util\", \"mediawiki.page.ready\", \"mediawiki.legacy.wikibits\", \"mediawiki.legacy.ajax\", \"mediawiki.legacy.mwsuggest\", \"ext.gadget.wmfFR2011Style\", \"ext.vector.collapsibleNav\", \"ext.vector.collapsibleTabs\", \"ext.vector.editWarning\", \"ext.vector.simpleSearch\", \"ext.UserBuckets\", \"ext.articleFeedback.startup\"]);"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/script\u003e"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cscript src\u003d\"/w/index.php?title\u003dSpecial:BannerController\u0026amp;cache\u003d/cn.js\u0026amp;303-4\" type\u003d\"text/javascript\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cscript src\u003d\"//bits.wikimedia.org/en.wikipedia.org/load.php?debug\u003dfalse\u0026amp;lang\u003den\u0026amp;modules\u003dsite\u0026amp;only\u003dscripts\u0026amp;skin\u003dvector\u0026amp;*\" type\u003d\"text/javascript\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003cscript type\u003d\"text/javascript\"\u003eif ( window.mediaWiki ) {"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\tmw.user.options.set({\"ccmeonemails\":0,\"cols\":80,\"date\":\"default\",\"diffonly\":0,\"disablemail\":0,\"disablesuggest\":0,\"editfont\":\"default\",\"editondblclick\":0,\"editsection\":1,\"editsectiononrightclick\":0,\"enotifminoredits\":0,\"enotifrevealaddr\":0,\"enotifusertalkpages\":1,\"enotifwatchlistpages\":0,\"extendwatchlist\":0,\"externaldiff\":0,\"externaleditor\":0,\"fancysig\":0,\"forceeditsummary\":0,\"gender\":\"unknown\",\"hideminor\":0,\"hidepatrolled\":0,\"highlightbroken\":1,\"imagesize\":2,\"justify\":0,\"math\":1,\"minordefault\":0,\"newpageshidepatrolled\":0,\"nocache\":0,\"noconvertlink\":0,\"norollbackdiff\":0,\"numberheadings\":0,\"previewonfirst\":0,\"previewontop\":1,\"quickbar\":5,\"rcdays\":7,\"rclimit\":50,\"rememberpassword\":0,\"rows\":25,\"searchlimit\":20,\"showhiddencats\":false,\"showjumplinks\":1,\"shownumberswatching\":1,\"showtoc\":1,\"showtoolbar\":1,\"skin\":\"vector\",\"stubthreshold\":0,\"thumbsize\":4,\"underline\":2,\"uselivepreview\":0,\"usenewrc\":0,\"watchcreations\":1,\"watchdefault\":0,\"watchdeletion\":0,\"watchlistdays\":3,\"watchlisthideanons\":0,"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\"watchlisthidebots\":0,\"watchlisthideliu\":0,\"watchlisthideminor\":0,\"watchlisthideown\":0,\"watchlisthidepatrolled\":0,\"watchmoves\":0,\"wllimit\":250,\"flaggedrevssimpleui\":1,\"flaggedrevsstable\":0,\"flaggedrevseditdiffs\":true,\"flaggedrevsviewdiffs\":false,\"vector-simplesearch\":1,\"useeditwarning\":1,\"vector-collapsiblenav\":1,\"usebetatoolbar\":1,\"usebetatoolbar-cgd\":1,\"wikilove-enabled\":1,\"variant\":\"en\",\"language\":\"en\",\"searchNs0\":true,\"searchNs1\":false,\"searchNs2\":false,\"searchNs3\":false,\"searchNs4\":false,\"searchNs5\":false,\"searchNs6\":false,\"searchNs7\":false,\"searchNs8\":false,\"searchNs9\":false,\"searchNs10\":false,\"searchNs11\":false,\"searchNs12\":false,\"searchNs13\":false,\"searchNs14\":false,\"searchNs15\":false,\"searchNs100\":false,\"searchNs101\":false,\"searchNs108\":false,\"searchNs109\":false,\"gadget-wmfFR2011Style\":1});;mw.user.tokens.set({\"editToken\":\"+\\\\\",\"watchToken\":false});;mw.loader.state({\"user.options\":\"ready\",\"user.tokens\":\"ready\"});"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "rlrh"
        },
        "content": ""
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t/* cache key: enwiki:resourceloader:filter:minify-js:4:b41a86ec4e0fe8329bc3ce917e792339 */"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "rlrh"
        },
        "content": "}"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/script\u003e\u003cscript src\u003d\"//geoiplookup.wikimedia.org/\" type\u003d\"text/javascript\"\u003e\u003c/script\u003e\u003c!-- Served by mw58 in 0.062 secs. --\u003e"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\t\u003c/body\u003e"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "rlrh"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "rlrh": 1100
    }
  }
]
